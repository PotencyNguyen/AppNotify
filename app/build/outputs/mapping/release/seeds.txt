org.conscrypt.OpenSSLEvpCipherAES$AES_128$ECB
com.esotericsoftware.kryo.io.Output
androidx.appcompat.widget.ButtonBarLayout
org.conscrypt.NativeSsl$BioWrapper
com.esotericsoftware.kryo.serializers.JavaSerializer
org.conscrypt.OpenSSLSignature$RSAPKCS1Padding
de.javakaffee.kryoserializers.jodatime.IdentifiableChronology
androidx.appcompat.widget.ContentFrameLayout
android.support.v4.app.RemoteActionCompatParcelizer
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmIntField
org.conscrypt.IvParameters$ChaCha20
com.esotericsoftware.kryo.serializers.DefaultArraySerializers
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmCachedField
com.esotericsoftware.kryo.serializers.DefaultSerializers$TreeMapSerializer
androidx.appcompat.view.menu.ListMenuItemView
org.conscrypt.Conscrypt$1
com.esotericsoftware.kryo.io.ByteBufferInput
de.javakaffee.kryoserializers.URISerializer
com.esotericsoftware.kryo.serializers.ObjectCachedFieldFactory
org.conscrypt.OpenSSLRSAPrivateCrtKey
org.conscrypt.Conscrypt
com.esotericsoftware.kryo.util.IdentityMap$Entries
org.conscrypt.OpenSSLX509CertificateFactory$1
org.conscrypt.OpenSSLEvpCipherAES$AES_256$ECB$PKCS5Padding
com.esotericsoftware.kryo.serializers.ObjectField$ObjectByteField
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeStringField
com.esotericsoftware.kryo.serializers.DefaultSerializers$LocaleSerializer
org.conscrypt.OpenSSLEvpCipherAES$AES_128$CBC
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$1
com.esotericsoftware.kryo.util.ObjectMap$Keys
org.conscrypt.OpenSSLX509Certificate
org.conscrypt.OpenSSLEvpCipherAES$AES_128$CBC$PKCS5Padding
org.conscrypt.OpenSSLX509CertificateFactory$Parser
com.esotericsoftware.kryo.util.DefaultStreamFactory
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior
com.esotericsoftware.kryo.serializers.TimeSerializers$InstantSerializer
com.esotericsoftware.kryo.serializers.OptionalSerializers$1
org.conscrypt.OpenSSLX509CRLEntry
org.conscrypt.OpenSSLEvpCipherAES$AES_256$CBC
androidx.appcompat.widget.ActionBarContainer
de.javakaffee.kryoserializers.guava.ReverseListSerializer$1
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection$5
com.esotericsoftware.kryo.serializers.DefaultSerializers$VoidSerializer
org.conscrypt.OpenSSLEvpCipherAES$AES
de.javakaffee.kryoserializers.wicket.MiniMapSerializer
org.conscrypt.AbstractConscryptEngine
com.esotericsoftware.kryo.io.OutputChunked
org.conscrypt.IvParameters
org.conscrypt.ConscryptFileDescriptorSocket$SSLInputStream
org.conscrypt.OpenSSLSignature$SHA512ECDSA
org.conscrypt.EvpMdRef$SHA384
org.conscrypt.OpenSSLMac$HmacSHA224
com.esotericsoftware.kryo.serializers.DefaultSerializers$TimeZoneSerializer
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection$3
de.javakaffee.kryoserializers.jodatime.JodaDateTimeSerializer
org.conscrypt.ExperimentalApi
org.conscrypt.OpenSSLMessageDigestJDK$SHA256
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter
com.esotericsoftware.kryo.pool.KryoPool$Builder
de.javakaffee.kryoserializers.CollectionsSingletonMapSerializer
org.conscrypt.BuildConfig
org.conscrypt.Java8EngineWrapper$1
org.conscrypt.ConscryptEngineSocket$3
androidx.lifecycle.SingleGeneratedAdapterObserver
com.esotericsoftware.kryo.serializers.DefaultSerializers$CharSerializer
com.esotericsoftware.kryo.serializers.EnumNameSerializer
androidx.appcompat.app.AppCompatViewInflater
org.conscrypt.OpenSSLCipherRSA$OAEP$SHA256
org.conscrypt.OpenSSLEvpCipherDESEDE$CBC
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection$5
org.conscrypt.TrustManagerImpl$GlobalHostnameVerifierAdapter
org.conscrypt.R
androidx.recyclerview.widget.GridLayoutManager
com.esotericsoftware.kryo.serializers.FieldSerializer$Bind
de.javakaffee.kryoserializers.jodatime.JodaIntervalSerializer
org.conscrypt.KitKatPlatformOpenSSLSocketAdapterFactory
com.esotericsoftware.kryo.util.IntMap
com.esotericsoftware.kryo.util.IdentityMap
com.google.android.material.appbar.MaterialToolbar
com.google.android.material.chip.Chip
de.javakaffee.kryoserializers.guava.TreeMultimapSerializer
org.conscrypt.OpenSSLSignature$SHA256RSA
org.conscrypt.OpenSSLRSAKeyFactory
org.conscrypt.OpenSSLSignatureRawRSA
de.javakaffee.kryoserializers.dexx.SetSerializer
org.conscrypt.OpenSSLMessageDigestJDK$MD5
org.conscrypt.OpenSSLSignature$EngineType
com.esotericsoftware.kryo.util.ObjectMap
com.esotericsoftware.kryo.serializers.DefaultSerializers$StringBuilderSerializer
com.esotericsoftware.kryo.util.UnsafeUtil$1
de.javakaffee.kryoserializers.guava.ImmutableSortedSetSerializer
org.conscrypt.DefaultSSLContextImpl
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection
de.javakaffee.kryoserializers.EnumSetSerializer
de.javakaffee.kryoserializers.FieldAnnotationAwareSerializer$Factory
org.conscrypt.OpenSSLEvpCipherAES$AES$CBC
org.conscrypt.ct.Serialization
org.conscrypt.OpenSSLECPointContext
org.conscrypt.EvpMdRef$SHA512
org.conscrypt.OpenSSLServerSocketFactoryImpl
org.conscrypt.OpenSSLSignature$SHA384ECDSA
com.esotericsoftware.reflectasm.MethodAccess
org.conscrypt.NativeCrypto$SSLHandshakeCallbacks
org.conscrypt.KeyGeneratorImpl$ChaCha20
org.conscrypt.NativeRef$EVP_CIPHER_CTX
androidx.viewpager2.adapter.FragmentStateAdapter$2
org.conscrypt.ConscryptEngineSocket$SSLInputStream
org.conscrypt.ApplicationProtocolSelectorAdapter
com.esotericsoftware.kryo.serializers.DefaultSerializers$CollectionsSingletonListSerializer
org.conscrypt.NativeRef$EVP_PKEY_CTX
org.conscrypt.OpenSSLBIOSource
com.esotericsoftware.kryo.io.FastInput
de.javakaffee.kryoserializers.guava.UnmodifiableNavigableSetSerializer
org.conscrypt.OpenSSLECPublicKey
org.conscrypt.ConscryptFileDescriptorSocket
org.conscrypt.OpenSSLCipherRSA$OAEP$SHA1
de.javakaffee.kryoserializers.SubListSerializers$ArrayListSubListSerializer
com.esotericsoftware.minlog.Log$Logger
org.conscrypt.Java8EngineSocket$1
com.esotericsoftware.kryo.util.FastestStreamFactory
org.conscrypt.OpenSSLEvpCipherAES$AES_128$CTR
com.esotericsoftware.kryo.serializers.TimeSerializers$OffsetTimeSerializer
de.javakaffee.kryoserializers.jodatime.JodaLocalDateSerializer
com.esotericsoftware.kryo.serializers.BeanSerializer$CachedProperty
org.conscrypt.OpenSSLRandom
org.conscrypt.NativeRef
com.google.android.material.transformation.FabTransformationScrimBehavior
org.conscrypt.SSLUtils
com.esotericsoftware.kryo.serializers.TimeSerializers$MonthDaySerializer
org.conscrypt.KeyGeneratorImpl$AES
androidx.core.graphics.drawable.IconCompatParcelizer
androidx.annotation.Keep
com.esotericsoftware.kryo.serializers.DefaultSerializers$CollectionsSingletonSetSerializer
de.javakaffee.kryoserializers.guava.ReverseListSerializer
androidx.activity.ImmLeaksCleaner
org.conscrypt.PeerInfoProvider
androidx.lifecycle.ReflectiveGenericLifecycleObserver
org.conscrypt.ClientSessionContext
org.conscrypt.OpenSSLEvpCipherAES$AES_256
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmFloatField
de.javakaffee.kryoserializers.CopyForIterateMapSerializer
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection$7
com.esotericsoftware.kryo.util.IntMap$Entry
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ByteArraySerializer
com.esotericsoftware.kryo.util.IdentityObjectIntMap
com.esotericsoftware.kryo.io.ByteBufferOutputStream
androidx.activity.ComponentActivity$3
org.conscrypt.CertBlacklist
org.conscrypt.OpenSSLMessageDigestJDK
de.javakaffee.kryoserializers.guava.ArrayListMultimapSerializer
com.google.android.material.transformation.FabTransformationSheetBehavior
com.esotericsoftware.kryo.KryoException
org.conscrypt.TrustManagerImpl
com.esotericsoftware.kryo.serializers.FieldSerializerUnsafeUtil
org.conscrypt.OpenSSLContextImpl$TLSv13
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$BooleanArraySerializer
de.javakaffee.kryoserializers.FieldAnnotationAwareSerializer
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior
org.conscrypt.BufferAllocator$1
com.esotericsoftware.kryo.serializers.TimeSerializers$DurationSerializer
org.conscrypt.OAEPParameters
com.esotericsoftware.kryo.serializers.FieldSerializerGenericsUtil
org.conscrypt.SSLNullSession
com.esotericsoftware.reflectasm.AccessClassLoader
androidx.appcompat.widget.DialogTitle
com.esotericsoftware.kryo.serializers.DefaultSerializers$EnumSerializer
org.conscrypt.ConscryptServerSocket
org.conscrypt.OpenSSLBIOSource$ByteBufferInputStream
com.esotericsoftware.kryo.serializers.TimeSerializers$YearMonthSerializer
org.conscrypt.NativeRef$EVP_MD_CTX
com.esotericsoftware.kryo.serializers.ObjectField$ObjectBooleanField
com.esotericsoftware.kryo.serializers.OptionalSerializers$OptionalSerializer
com.esotericsoftware.kryo.io.KryoDataOutput
com.esotericsoftware.kryo.serializers.ObjectField$ObjectCharField
androidx.recyclerview.widget.LinearLayoutManager
androidx.appcompat.widget.ActionMenuView
org.conscrypt.OpenSSLEvpCipherAES$AES_256$CBC$NoPadding
com.esotericsoftware.kryo.serializers.DefaultSerializers$CalendarSerializer
org.conscrypt.ConscryptHostnameVerifier
org.conscrypt.DefaultSSLContextImpl$TLSv13
com.esotericsoftware.kryo.serializers.DefaultSerializers$BigDecimalSerializer
android.support.v4.media.MediaDescriptionCompat
org.conscrypt.SSLNullSession$DefaultHolder
com.esotericsoftware.kryo.io.KryoObjectInput
com.esotericsoftware.kryo.util.IntArray
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior
com.esotericsoftware.kryo.serializers.DefaultSerializers$CollectionsSingletonMapSerializer
org.conscrypt.ExternalSession
com.esotericsoftware.kryo.serializers.ClosureSerializer$Closure
org.conscrypt.IvParameters$AES
androidx.core.widget.NestedScrollView
org.conscrypt.ECParameters
com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField
com.esotericsoftware.kryo.serializers.FieldSerializer$CachedFieldFactory
com.esotericsoftware.kryo.io.UnsafeOutput
com.esotericsoftware.kryo.util.UnsafeUtil
org.conscrypt.SessionSnapshot
org.conscrypt.CertPinManager
com.esotericsoftware.kryo.serializers.TimeSerializers$LocalDateTimeSerializer
com.esotericsoftware.kryo.util.DefaultClassResolver
org.conscrypt.OpenSSLEvpCipherAES$AES$ECB$PKCS5Padding
com.google.android.material.bottomsheet.BottomSheetBehavior
de.javakaffee.kryoserializers.BitSetSerializer
org.conscrypt.DefaultSSLContextImpl$TLSv12
com.esotericsoftware.kryo.serializers.DefaultSerializers$ShortSerializer
org.conscrypt.OpenSSLEvpCipherAES$AES_256$ECB
org.conscrypt.NativeConstants
org.conscrypt.SSLUtils$EngineStates
org.conscrypt.OpenSSLSignature$SHA512RSAPSS
androidx.appcompat.view.menu.ActionMenuItemView
com.esotericsoftware.kryo.serializers.OptionalSerializers$OptionalDoubleSerializer
com.esotericsoftware.kryo.serializers.DefaultSerializers$BooleanSerializer
org.conscrypt.OpenSSLX509CertificateFactory
com.esotericsoftware.kryo.io.FastOutput
org.conscrypt.KeyManagerImpl
com.esotericsoftware.kryo.serializers.DefaultSerializers$StringBufferSerializer
de.javakaffee.kryoserializers.cglib.CGLibProxySerializer$CGLibProxyMarker
com.esotericsoftware.kryo.serializers.BlowfishSerializer
org.conscrypt.Java8EngineSocket
org.conscrypt.OpenSSLEvpCipherDESEDE$1
de.javakaffee.kryoserializers.GregorianCalendarSerializer
com.google.android.material.internal.NavigationMenuView
androidx.recyclerview.widget.StaggeredGridLayoutManager
de.javakaffee.kryoserializers.CollectionsEmptyListSerializer
com.esotericsoftware.kryo.serializers.TimeSerializers$LocalTimeSerializer
com.esotericsoftware.kryo.serializers.TaggedFieldSerializerConfig
com.esotericsoftware.kryo.serializers.TimeSerializers$ZoneOffsetSerializer
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection$6
com.esotericsoftware.kryo.serializers.DefaultSerializers$TreeSetSerializer
de.javakaffee.kryoserializers.DateSerializer
com.esotericsoftware.kryo.util.IdentityMap$MapIterator
org.conscrypt.NativeCrypto$Range
org.conscrypt.NativeSslSession$Impl$1
org.conscrypt.OpenSSLSignature$SHA224ECDSA
com.esotericsoftware.kryo.Kryo$DefaultInstantiatorStrategy$1
de.javakaffee.kryoserializers.guava.ImmutableMapSerializer
org.conscrypt.OpenSSLEvpCipherAES$1
de.javakaffee.kryoserializers.guava.ImmutableMultimapSerializer
com.google.android.material.button.MaterialButton
org.conscrypt.TrustedCertificateIndex
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection$2
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$IntArraySerializer
org.conscrypt.ConscryptFileDescriptorSocket$1
org.conscrypt.NativeRef$EC_GROUP
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3
com.esotericsoftware.kryo.factories.SerializerFactory
io.paperdb.serializer.NoArgCollectionSerializer
com.esotericsoftware.kryo.serializers.MapSerializer$BindMap
com.esotericsoftware.kryo.util.IntMap$MapIterator
androidx.lifecycle.Lifecycling$1
android.support.v4.media.session.MediaSessionCompat$Token
de.javakaffee.kryoserializers.JdkProxySerializer
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmObjectField
com.esotericsoftware.kryo.serializers.ObjectField$ObjectShortField
com.google.android.material.textfield.TextInputLayout
org.conscrypt.Java8ExtendedSSLSession
org.conscrypt.OpenSSLCipherRSA$OAEP$SHA384
org.conscrypt.OpenSSLCipherRSA$OAEP
com.esotericsoftware.kryo.pool.KryoFactory
com.esotericsoftware.kryo.serializers.DefaultSerializers$CollectionsEmptyListSerializer
org.conscrypt.Internal
org.conscrypt.ct.CTLogStore
org.conscrypt.ConscryptEngine$1
de.javakaffee.kryoserializers.guava.MultimapSerializerBase
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmDoubleField
net.sourceforge.jtds.util.SSPIJNIClient
org.conscrypt.NativeSslSession
com.esotericsoftware.kryo.serializers.DefaultSerializers$CollectionsEmptySetSerializer
org.conscrypt.OpenSSLProvider
android.support.v4.media.session.PlaybackStateCompat
androidx.transition.FragmentTransitionSupport
com.google.android.material.internal.BaselineLayout
org.conscrypt.OpenSSLAeadCipher
de.javakaffee.kryoserializers.guava.ImmutableSetSerializer
com.esotericsoftware.kryo.serializers.FieldSerializerUnsafeUtil$Factory
io.paperdb.Paper
org.conscrypt.ActiveSession
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmShortField
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper
com.esotericsoftware.kryo.serializers.BlowfishSerializer$1
androidx.appcompat.widget.AlertDialogLayout
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior
org.conscrypt.ConscryptSession
com.esotericsoftware.kryo.util.ObjectMap$Entries
org.conscrypt.HandshakeListener
org.conscrypt.OpenSSLSocketFactoryImpl
com.stronger.bankNotification.notification_listener_service
de.javakaffee.kryoserializers.CollectionsEmptySetSerializer
org.conscrypt.ct.SerializationException
androidx.lifecycle.FullLifecycleObserverAdapter
com.esotericsoftware.kryo.serializers.FieldSerializer$CachedFieldNameStrategy$1
de.javakaffee.kryoserializers.CollectionsSingletonListSerializer
org.conscrypt.SSLClientSessionCache
org.conscrypt.ct.CTConstants
com.esotericsoftware.kryo.util.IdentityMap$Keys
de.javakaffee.kryoserializers.guava.HashMultimapSerializer
com.esotericsoftware.kryo.StreamFactory
org.conscrypt.ClientSessionContext$HostAndPort
org.conscrypt.SSLNullSession$1
androidx.media.AudioAttributesCompatParcelizer
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$DoubleArraySerializer
de.javakaffee.kryoserializers.RegexSerializer
org.conscrypt.ConscryptFileDescriptorSocket$2
org.conscrypt.ct.CertificateEntry$LogEntryType
org.conscrypt.KeyGeneratorImpl$1
net.sourceforge.jtds.jdbc.ParameterMetaDataImpl
org.conscrypt.BaseOpenSSLSocketAdapterFactory
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter
android.support.v4.media.session.PlaybackStateCompat$CustomAction
com.esotericsoftware.kryo.serializers.DefaultSerializers$DateSerializer
android.support.v4.media.MediaBrowserCompat$ItemReceiver
com.esotericsoftware.reflectasm.FieldAccess
org.conscrypt.KeyGeneratorImpl$HmacSHA224
org.conscrypt.OpenSSLSignature$SHA224RSA
org.conscrypt.ct.SignedCertificateTimestamp$Version
com.google.android.material.appbar.AppBarLayout$BaseBehavior
com.esotericsoftware.kryo.serializers.OptionalSerializers$OptionalLongSerializer
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection
org.conscrypt.OpenSSLCipherRSA$Raw
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeIntField
org.conscrypt.OpenSSLRSAPublicKey
com.esotericsoftware.kryo.Kryo$DefaultInstantiatorStrategy$2
org.conscrypt.OpenSSLContextImpl$TLSv11
org.conscrypt.OpenSSLKeyHolder
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeRegionField
androidx.media.AudioAttributesImplBaseParcelizer
com.esotericsoftware.kryo.serializers.JavaSerializer$ObjectInputStreamWithKryoClassLoader
org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker
com.esotericsoftware.kryo.serializers.TimeSerializers
org.conscrypt.OpenSSLSignature$RSAPSSPadding
com.esotericsoftware.kryo.util.IntMap$Values
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeLongField
org.conscrypt.AddressUtils
com.esotericsoftware.kryo.serializers.FieldSerializerConfig
com.esotericsoftware.kryo.serializers.AsmCachedFieldFactory
de.javakaffee.kryoserializers.CompatibleFieldSerializerReflectionFactorySupport
org.conscrypt.OpenSSLSignature$SHA384RSAPSS
com.esotericsoftware.kryo.serializers.TimeSerializers$PeriodSerializer
com.esotericsoftware.kryo.serializers.UnsafeCacheFields
org.conscrypt.NativeSsl
org.conscrypt.ct.CTPolicy
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeFloatField
com.google.android.material.datepicker.MaterialCalendarGridView
com.esotericsoftware.kryo.serializers.FieldSerializerUnsafeUtilImpl
org.conscrypt.ServerSessionContext
io.paperdb.DbStoragePlainFile$2
com.esotericsoftware.kryo.ClassResolver
com.esotericsoftware.kryo.util.Util
org.conscrypt.Preconditions
org.conscrypt.OpenSSLEvpCipherAES$AES_128$CBC$NoPadding
com.esotericsoftware.kryo.serializers.DefaultSerializers$FloatSerializer
org.conscrypt.Java8FileDescriptorSocket$1
com.esotericsoftware.kryo.util.ObjectMap$Values
org.conscrypt.OpenSSLSignature$SHA1ECDSA
org.conscrypt.OidData
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver
org.conscrypt.TrustManagerImpl$1
com.esotericsoftware.kryo.serializers.TimeSerializers$ZonedDateTimeSerializer
org.conscrypt.OpenSSLCipherRSA$PKCS1
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver
org.conscrypt.Platform
com.google.android.material.chip.ChipGroup
com.google.android.material.transformation.ExpandableTransformationBehavior
com.esotericsoftware.kryo.serializers.DefaultSerializers$CurrencySerializer
com.google.android.material.behavior.HideBottomViewOnScrollBehavior
org.conscrypt.FileClientSessionCache$CacheFile
org.conscrypt.OpenSSLEvpCipherAES
org.conscrypt.OpenSSLX509CertificateFactory$2
org.conscrypt.OpenSSLCipherRSA$DirectRSA
com.esotericsoftware.kryo.serializers.TimeSerializers$LocalDateSerializer
com.esotericsoftware.kryo.pool.SoftReferenceQueue
androidx.lifecycle.LiveData$LifecycleBoundObserver
org.conscrypt.OpenSSLECPrivateKey
org.conscrypt.ct.CTLogInfo
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection$4
android.support.v4.media.session.ParcelableVolumeInfo
androidx.recyclerview.widget.RecyclerView
com.esotericsoftware.kryo.serializers.UnsafeCachedFieldFactory
org.conscrypt.ct.DigitallySigned
org.conscrypt.KeyManagerFactoryImpl
org.conscrypt.TrustManagerImpl$TrustAnchorComparator
org.conscrypt.ExternalSession$Provider
org.conscrypt.OpenSSLAeadCipherAES$GCM_SIV
org.conscrypt.DefaultSSLContextImpl$1
com.esotericsoftware.kryo.util.IdentityMap$Entry
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmStringField
com.esotericsoftware.kryo.io.UnsafeInput
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ShortArraySerializer
com.esotericsoftware.kryo.serializers.ObjectField$ObjectFloatField
org.conscrypt.ct.CTVerificationResult
com.esotericsoftware.kryo.serializers.ObjectField
org.conscrypt.NativeSslSession$Impl
org.conscrypt.OpenSSLECKeyFactory
org.conscrypt.SSLParametersImpl$PSKCallbacks
com.google.android.material.transformation.FabTransformationBehavior
androidx.fragment.app.Fragment$2
org.conscrypt.OpenSSLEvpCipherAES$AES_256$CBC$PKCS5Padding
com.esotericsoftware.kryo.serializers.TaggedFieldSerializer$Tag
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeShortField
org.conscrypt.KeyGeneratorImpl$HmacMD5
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection$7
com.esotericsoftware.kryo.serializers.GenericsResolver
com.esotericsoftware.kryo.serializers.DefaultSerializers$ByteSerializer
com.esotericsoftware.kryo.pool.KryoPool
androidx.appcompat.widget.ActionBarOverlayLayout
org.conscrypt.OpenSSLX509CertPath$Encoding
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection$6
com.esotericsoftware.kryo.ReferenceResolver
org.conscrypt.OpenSSLX509CRL
org.conscrypt.AbstractSessionContext$1
com.esotericsoftware.kryo.serializers.CollectionSerializer$BindCollection
de.javakaffee.kryoserializers.UUIDSerializer
androidx.appcompat.widget.SearchView
com.esotericsoftware.kryo.serializers.ClosureSerializer
org.conscrypt.OpenSSLRSAPrivateKey
org.conscrypt.Java7ExtendedSSLSession
com.esotericsoftware.kryo.pool.KryoCallback
com.esotericsoftware.kryo.serializers.FieldSerializer
com.esotericsoftware.kryo.serializers.TimeSerializers$1
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$StringArraySerializer
org.conscrypt.FileClientSessionCache$Impl
com.esotericsoftware.kryo.util.IntMap$Entries
org.conscrypt.ConscryptEngineSocket
org.conscrypt.ct.CTVerifier
org.conscrypt.OpenSSLEvpCipherDESEDE$CBC$PKCS5Padding
com.esotericsoftware.kryo.io.Input
org.conscrypt.DuckTypedPSKKeyManager
org.conscrypt.NativeRef$EVP_PKEY
org.conscrypt.OpenSSLSignature$SHA1RSAPSS
com.esotericsoftware.kryo.serializers.FieldSerializer$Optional
androidx.appcompat.widget.Toolbar
com.esotericsoftware.kryo.serializers.ObjectField$ObjectIntField
org.conscrypt.ct.DigitallySigned$SignatureAlgorithm
org.conscrypt.OpenSSLMessageDigestJDK$SHA1
org.conscrypt.OpenSSLX509CertPath
com.esotericsoftware.kryo.serializers.BeanSerializer$1
com.esotericsoftware.kryo.pool.KryoPoolQueueImpl
org.conscrypt.SSLParametersImpl
de.javakaffee.kryoserializers.dexx.MapSerializer
com.esotericsoftware.kryo.Kryo$DefaultInstantiatorStrategy
de.javakaffee.kryoserializers.guava.ImmutableSetSerializer$SomeEnum
org.conscrypt.ConscryptCertStore
com.esotericsoftware.kryo.serializers.ObjectField$ObjectLongField
org.conscrypt.OpenSSLMac$HmacSHA512
com.esotericsoftware.kryo.DefaultSerializer
org.conscrypt.OpenSSLAeadCipherAES$GCM_SIV$AES_128
com.esotericsoftware.kryo.serializers.FieldSerializerAnnotationsUtil
org.conscrypt.OpenSSLMac$HmacSHA1
org.conscrypt.TrustManagerFactoryImpl
com.esotericsoftware.kryo.io.KryoDataInput
org.conscrypt.KeyGeneratorImpl$HmacSHA384
com.esotericsoftware.kryo.util.IntMap$Keys
org.conscrypt.OpenSSLCipherChaCha20
com.esotericsoftware.kryo.util.ListReferenceResolver
de.javakaffee.kryoserializers.SubListSerializers$JavaUtilSubListSerializer
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmCharField
com.google.android.material.transformation.ExpandableBehavior
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeByteField
androidx.versionedparcelable.ParcelImpl
org.conscrypt.OpenSSLContextImpl$TLSv12
com.esotericsoftware.kryo.serializers.DefaultSerializers$CharsetSerializer
org.conscrypt.OpenSSLCipher$Mode
org.conscrypt.OpenSSLMac$HmacSHA256
android.support.v4.media.RatingCompat
org.conscrypt.CertificatePriorityComparator
androidx.savedstate.Recreator
androidx.appcompat.widget.ActivityChooserView$InnerLayout
org.conscrypt.OpenSSLECGroupContext
androidx.lifecycle.CompositeGeneratedAdaptersObserver
com.esotericsoftware.kryo.util.ObjectMap$Entry
com.esotericsoftware.kryo.serializers.TimeSerializers$ZoneIdSerializer
org.conscrypt.OpenSSLEvpCipherAES$AES_128
androidx.viewpager2.adapter.FragmentStateAdapter$5
org.conscrypt.GCMParameters
org.conscrypt.ChainStrengthAnalyzer
com.esotericsoftware.kryo.serializers.ObjectField$ObjectDoubleField
org.conscrypt.OpenSSLKey
de.javakaffee.kryoserializers.guava.ImmutableMapSerializer$DummyEnum
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$FloatArraySerializer
org.conscrypt.OpenSSLAeadCipherAES$GCM$AES_128
androidx.savedstate.SavedStateRegistry$1
androidx.core.app.CoreComponentFactory
com.esotericsoftware.kryo.io.UnsafeMemoryInput
com.esotericsoftware.kryo.Kryo
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmLongField
com.esotericsoftware.kryo.serializers.DefaultSerializers$IntSerializer
com.esotericsoftware.kryo.serializers.VersionFieldSerializer
org.conscrypt.OpenSSLEvpCipherAES$AES_128$ECB$NoPadding
org.conscrypt.OpenSSLEvpCipherAES$AES$CTR
org.conscrypt.ConscryptEngine$2
org.conscrypt.PreKitKatPlatformOpenSSLSocketAdapterFactory
org.conscrypt.OpenSSLEvpCipherAES$AES$ECB
org.conscrypt.OpenSSLAeadCipherAES$GCM$AES_256
org.conscrypt.KeyGeneratorImpl$HmacSHA512
com.esotericsoftware.kryo.serializers.CollectionSerializer
com.esotericsoftware.kryo.factories.ReflectionSerializerFactory
org.conscrypt.OpenSSLMessageDigestJDK$SHA384
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$1
org.conscrypt.OpenSSLEvpCipherAES$AES_128$ECB$PKCS5Padding
androidx.core.graphics.drawable.IconCompat
org.conscrypt.CryptoUpcalls
androidx.core.app.RemoteActionCompatParcelizer
org.conscrypt.OpenSSLCipher$Padding
org.conscrypt.NativeRef$SSL_SESSION
org.conscrypt.OpenSSLEvpCipherAES$AES_256$CTR
com.esotericsoftware.kryo.KryoCopyable
com.esotericsoftware.kryo.io.ByteBufferInputStream
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection$2
org.conscrypt.KeyGeneratorImpl$HmacSHA256
de.javakaffee.kryoserializers.guava.LinkedHashMultimapSerializer
org.conscrypt.NativeSsl$1
org.conscrypt.EmptyArray
de.javakaffee.kryoserializers.jodatime.JodaLocalDateTimeSerializer
org.conscrypt.ConscryptEngine
org.conscrypt.OpenSSLMac
org.conscrypt.OpenSSLX509CertPath$1
com.google.android.material.bottomappbar.BottomAppBar$Behavior
com.google.android.material.behavior.SwipeDismissBehavior
androidx.appcompat.view.menu.ExpandedMenuView
org.conscrypt.DESEDESecretKeyFactory
org.conscrypt.OpenSSLBIOSink
io.paperdb.Book
org.conscrypt.OpenSSLEvpCipherDESEDE$CBC$NoPadding
android.support.v4.graphics.drawable.IconCompatParcelizer
org.conscrypt.OpenSSLEvpCipherDESEDE
org.conscrypt.OpenSSLRSAKeyPairGenerator
org.conscrypt.OpenSSLEvpCipherAES$AES_256$ECB$NoPadding
org.conscrypt.EvpMdRef$SHA256
com.esotericsoftware.kryo.serializers.CompatibleFieldSerializer
com.stronger.bankNotification.sms_receiver
androidx.browser.browseractions.BrowserActionsFallbackMenuView
org.conscrypt.OpenSSLContextImpl
androidx.appcompat.widget.SearchView$SearchAutoComplete
org.conscrypt.KeyGeneratorImpl
org.conscrypt.OpenSSLCipher
androidx.appcompat.widget.FitWindowsLinearLayout
org.conscrypt.ct.SignedCertificateTimestamp$SignatureType
de.javakaffee.kryoserializers.dexx.ListSerializer
org.conscrypt.KeyGeneratorImpl$ARC4
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection$4
org.conscrypt.IvParameters$DESEDE
org.conscrypt.OpenSSLContextImpl$TLSv1
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeCachedField
com.esotericsoftware.kryo.serializers.TaggedFieldSerializer$1
org.conscrypt.X509PublicKey
org.conscrypt.OpenSSLSignature$SHA512RSA
com.esotericsoftware.kryo.serializers.DefaultSerializers
androidx.media.AudioAttributesImplApi21Parcelizer
org.conscrypt.NativeRef$EC_POINT
org.conscrypt.FileClientSessionCache
de.javakaffee.kryoserializers.guava.ReverseListSerializer$ReverseList
org.conscrypt.ApplicationProtocolSelector
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer
androidx.core.app.RemoteActionCompat
org.conscrypt.EvpMdRef$SHA1
com.esotericsoftware.kryo.serializers.ExternalizableSerializer
com.esotericsoftware.kryo.serializers.TimeSerializers$OffsetDateTimeSerializer
com.esotericsoftware.kryo.serializers.MapSerializer
io.paperdb.DbStoragePlainFile$1
org.conscrypt.OpenSSLAeadCipherAES
de.javakaffee.kryoserializers.CollectionsEmptyMapSerializer
org.conscrypt.OpenSSLSignature$SHA384RSA
org.conscrypt.ct.DigitallySigned$HashAlgorithm
de.javakaffee.kryoserializers.ArraysAsListSerializer
org.conscrypt.AbstractSessionContext
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmByteField
com.esotericsoftware.kryo.serializers.DefaultSerializers$CollectionsEmptyMapSerializer
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection$3
org.conscrypt.OpenSSLMac$HmacSHA384
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer
de.javakaffee.kryoserializers.guava.ImmutableListSerializer
com.esotericsoftware.kryo.serializers.FieldSerializer$CachedFieldNameStrategy$2
org.conscrypt.io.IoUtils
com.esotericsoftware.kryo.serializers.TaggedFieldSerializer
com.esotericsoftware.reflectasm.PublicConstructorAccess
org.conscrypt.KeyGeneratorImpl$HmacSHA1
org.conscrypt.Conscrypt$ProviderBuilder
com.esotericsoftware.kryo.serializers.VersionFieldSerializer$Since
androidx.coordinatorlayout.widget.CoordinatorLayout
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection$1
android.support.v4.media.MediaMetadataCompat
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
com.google.android.material.internal.NavigationMenuItemView
com.esotericsoftware.kryo.util.MapReferenceResolver
com.esotericsoftware.kryo.serializers.DefaultSerializers$EnumSetSerializer
com.esotericsoftware.kryo.serializers.DefaultSerializers$ClassSerializer
com.esotericsoftware.kryo.io.ByteBufferOutput
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$CharArraySerializer
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver
de.javakaffee.kryoserializers.CollectionsSingletonSetSerializer
androidx.appcompat.app.AlertController$RecycleListView
org.conscrypt.ct.SignedCertificateTimestamp
org.conscrypt.OpenSSLMessageDigestJDK$SHA224
com.esotericsoftware.kryo.Kryo$DefaultSerializerEntry
com.google.android.material.snackbar.SnackbarContentLayout
androidx.activity.ComponentActivity$2
com.esotericsoftware.kryo.serializers.DefaultSerializers$StringSerializer
com.google.android.material.snackbar.Snackbar$SnackbarLayout
de.javakaffee.kryoserializers.guava.ReverseListSerializer$RandomAccessReverseList
org.conscrypt.NativeSslSession$1
com.esotericsoftware.kryo.serializers.DefaultSerializers$URLSerializer
org.conscrypt.Java8FileDescriptorSocket
com.esotericsoftware.kryo.io.Util
org.conscrypt.AbstractSessionContext$2
org.conscrypt.OpenSSLEvpCipherAES$AES$CBC$NoPadding
com.esotericsoftware.kryo.serializers.BeanSerializer
com.esotericsoftware.kryo.serializers.Generics
org.conscrypt.OpenSSLMac$1
androidx.appcompat.widget.FitWindowsFrameLayout
com.esotericsoftware.kryo.serializers.DefaultSerializers$DoubleSerializer
com.esotericsoftware.kryo.io.InputChunked
org.conscrypt.PeerInfoProvider$1
org.conscrypt.OpenSSLCipherRSA$OAEP$SHA224
org.conscrypt.ConscryptEngineSocket$2
org.conscrypt.OpenSSLAeadCipherAES$GCM_SIV$AES_256
org.conscrypt.OpenSSLAeadCipherChaCha20
de.javakaffee.kryoserializers.guava.LinkedListMultimapSerializer
de.javakaffee.kryoserializers.EnumMapSerializer
de.javakaffee.kryoserializers.CopyForIterateCollectionSerializer
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$LongArraySerializer
com.esotericsoftware.reflectasm.ConstructorAccess
org.conscrypt.AbstractConscryptSocket
org.conscrypt.AbstractConscryptSocket$1
org.conscrypt.ct.CertificateEntry
org.conscrypt.ct.VerifiedSCT
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeCharField
com.esotericsoftware.kryo.serializers.DefaultSerializers$LongSerializer
org.conscrypt.ByteArray
org.conscrypt.SSLParametersImpl$AliasChooser
org.conscrypt.OpenSSLEvpCipherAES$AES$CBC$PKCS5Padding
com.esotericsoftware.kryo.serializers.FieldSerializer$CachedFieldNameStrategy
org.conscrypt.EvpMdRef$SHA224
androidx.appcompat.widget.ViewStubCompat
org.conscrypt.PSKKeyManager
org.conscrypt.PSSParameters
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeBooleanField
org.conscrypt.OpenSSLSignature$SHA224RSAPSS
androidx.versionedparcelable.CustomVersionedParcelable
com.esotericsoftware.kryo.serializers.OptionalSerializers
org.conscrypt.OpenSSLSignature$SHA256ECDSA
org.conscrypt.EvpMdRef$MD5
org.conscrypt.OpenSSLBIOInputStream
androidx.appcompat.widget.ActionBarContextView
org.conscrypt.AllocatedBuffer$1
org.conscrypt.OpenSSLEvpCipherAES$AES$ECB$NoPadding
io.paperdb.KeyLocker
com.esotericsoftware.minlog.Log
org.conscrypt.OpenSSLMessageDigestJDK$1
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeObjectField
android.support.v4.media.MediaBrowserCompat$MediaItem
com.google.android.material.internal.CheckableImageButton
com.google.android.material.textfield.TextInputEditText
io.paperdb.PaperTable
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmBooleanField
org.conscrypt.OpenSSLMessageDigestJDK$SHA512
android.support.v4.media.session.MediaSessionCompat$QueueItem
org.conscrypt.NativeCrypto
com.esotericsoftware.kryo.util.ObjectMap$MapIterator
net.sourceforge.jtds.jdbc.Driver
org.conscrypt.OpenSSLSignature
org.conscrypt.ConscryptEngineSocket$SSLOutputStream
com.esotericsoftware.kryo.Serializer
com.esotericsoftware.kryo.io.KryoObjectOutput
org.conscrypt.Conscrypt$Version
com.google.android.material.textview.MaterialTextView
io.paperdb.PaperDbException
org.conscrypt.SSLUtils$SessionType
org.conscrypt.OpenSSLCipherRSA
org.conscrypt.OpenSSLSignatureRawECDSA
com.esotericsoftware.kryo.KryoSerializable
org.conscrypt.KeyGeneratorImpl$DESEDE
org.conscrypt.Java8EngineWrapper
com.esotericsoftware.kryo.NotNull
org.conscrypt.ConscryptFileDescriptorSocket$SSLOutputStream
com.stronger.bankNotification.main_activity
org.conscrypt.ConscryptEngineSocket$1
org.conscrypt.ArrayUtils
org.conscrypt.OpenSSLSocketImpl
org.conscrypt.PeerInfoProvider$2
org.conscrypt.AllocatedBuffer
org.conscrypt.ct.SignedCertificateTimestamp$Origin
com.esotericsoftware.kryo.factories.PseudoSerializerFactory
org.conscrypt.OpenSSLSignature$MD5RSA
org.conscrypt.OpenSSLCipherRSA$OAEP$SHA512
org.conscrypt.SSLServerSessionCache
com.esotericsoftware.kryo.Registration
io.paperdb.R
com.esotericsoftware.kryo.serializers.DeflateSerializer
com.google.android.material.appbar.AppBarLayout$Behavior
org.conscrypt.OpenSSLAeadCipherAES$GCM
org.conscrypt.OpenSSLSignature$1
com.esotericsoftware.kryo.serializers.OptionalSerializers$OptionalIntSerializer
de.javakaffee.kryoserializers.protobuf.ProtobufSerializer
org.conscrypt.ct.VerifiedSCT$Status
org.conscrypt.OpenSSLSignature$SHA1RSA
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeDoubleField
org.conscrypt.OpenSSLX509CertificateFactory$ParsingException
io.paperdb.DbStoragePlainFile
com.esotericsoftware.kryo.serializers.DefaultSerializers$KryoSerializableSerializer
com.esotericsoftware.kryo.io.UnsafeMemoryOutput
org.conscrypt.NativeCryptoJni
org.conscrypt.OpenSSLSignature$SHA256RSAPSS
org.conscrypt.OpenSSLMac$HmacMD5
androidx.media.AudioAttributesCompat
com.esotericsoftware.kryo.serializers.DefaultSerializers$BigIntegerSerializer
de.javakaffee.kryoserializers.KryoReflectionFactorySupport
de.javakaffee.kryoserializers.cglib.CGLibProxySerializer
org.conscrypt.EvpMdRef
org.conscrypt.OpenSSLEvpCipher
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection$1
org.conscrypt.BufferAllocator
com.esotericsoftware.kryo.util.IdentityMap$Values
org.conscrypt.NativeRef$HMAC_CTX
com.esotericsoftware.kryo.serializers.TimeSerializers$YearSerializer
com.esotericsoftware.kryo.serializers.AsmCacheFields
io.paperdb.BuildConfig
org.conscrypt.OpenSSLECKeyPairGenerator
com.google.android.material.theme.MaterialComponentsViewInflater
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior
de.javakaffee.kryoserializers.SubListSerializers
org.conscrypt.OpenSSLEvpCipherARC4
org.conscrypt.OpenSSLECDHKeyAgreement
org.conscrypt.ActiveSession: java.security.cert.X509Certificate[] peerCertificates
org.conscrypt.OpenSSLX509Certificate: java.lang.Integer mHashCode
com.esotericsoftware.kryo.io.KryoObjectOutput: com.esotericsoftware.kryo.Kryo kryo
com.esotericsoftware.kryo.util.IdentityObjectIntMap: int threshold
androidx.recyclerview.widget.RecyclerView: int mTouchSlop
androidx.recyclerview.widget.RecyclerView: int SCROLL_STATE_DRAGGING
org.conscrypt.SessionSnapshot: java.lang.String applicationProtocol
org.conscrypt.AbstractSessionContext: int timeout
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter
org.conscrypt.ConscryptEngineSocket: java.lang.Object stateLock
org.conscrypt.OpenSSLAeadCipher: int DEFAULT_TAG_SIZE_BITS
io.paperdb.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
com.esotericsoftware.kryo.serializers.FieldSerializer: boolean useMemRegions
org.conscrypt.SSLParametersImpl: java.lang.String endpointIdentificationAlgorithm
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.GapWorker mGapWorker
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection: de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection LIST
org.conscrypt.OpenSSLRSAPublicKey: org.conscrypt.OpenSSLKey key
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection: java.lang.reflect.Field sourceCollectionField
org.conscrypt.OpenSSLSignatureRawECDSA: org.conscrypt.OpenSSLKey key
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR
org.conscrypt.EvpMdRef$SHA384: java.lang.String JCA_NAME
org.conscrypt.OpenSSLContextImpl: java.lang.String[] protocols
org.conscrypt.FileClientSessionCache: int MAX_SIZE
org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker: java.lang.String EKU_serverAuth
org.conscrypt.Conscrypt$Version: int patch
org.conscrypt.NativeConstants: int SSL_SIGN_RSA_PSS_RSAE_SHA384
com.esotericsoftware.kryo.serializers.FieldSerializer: java.lang.Class type
com.esotericsoftware.kryo.util.IdentityObjectIntMap: int hashShift
de.javakaffee.kryoserializers.FieldAnnotationAwareSerializer: java.util.Set marked
org.conscrypt.OpenSSLRSAPrivateCrtKey: java.math.BigInteger primeP
org.conscrypt.CryptoUpcalls: java.util.logging.Logger logger
org.conscrypt.OpenSSLECKeyPairGenerator: org.conscrypt.OpenSSLECGroupContext group
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_ON_DATA_SET_CHANGE_LAYOUT_TAG
androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow
com.esotericsoftware.kryo.util.IdentityMap$MapIterator: int currentIndex
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection: de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection SET
org.conscrypt.TrustManagerImpl: boolean ctEnabledOverride
org.conscrypt.AbstractSessionContext$2: org.conscrypt.AbstractSessionContext this$0
org.conscrypt.ct.CTLogInfo: java.lang.String url
com.esotericsoftware.kryo.util.IntMap$Entries: com.esotericsoftware.kryo.util.IntMap$Entry entry
org.conscrypt.SSLParametersImpl: byte[] applicationProtocols
org.conscrypt.ExternalSession: java.util.HashMap values
org.conscrypt.ConscryptEngineSocket: org.conscrypt.ConscryptEngine engine
org.conscrypt.OpenSSLContextImpl: org.conscrypt.DefaultSSLContextImpl defaultSslContextImpl
com.esotericsoftware.kryo.util.IdentityObjectIntMap: boolean isBigTable
org.conscrypt.DefaultSSLContextImpl: javax.net.ssl.TrustManager[] TRUST_MANAGERS
com.esotericsoftware.kryo.serializers.TaggedFieldSerializer: int writeFieldCount
com.esotericsoftware.kryo.serializers.CollectionSerializer: java.lang.Class genericType
org.conscrypt.NativeCrypto$Range: java.lang.String max
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer: java.lang.reflect.Field SOURCE_MAP_FIELD
de.javakaffee.kryoserializers.guava.LinkedHashMultimapSerializer: boolean IMMUTABLE
androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect
org.conscrypt.NativeSslSession: java.util.logging.Logger logger
androidx.recyclerview.widget.RecyclerView: long FOREVER_NS
org.conscrypt.Java7ExtendedSSLSession: java.lang.String[] LOCAL_SUPPORTED_SIGNATURE_ALGORITHMS
de.javakaffee.kryoserializers.jodatime.JodaDateTimeSerializer: java.lang.String TIME_ZONE
com.esotericsoftware.kryo.serializers.ObjectField: java.lang.Class type
io.paperdb.BuildConfig: java.lang.String FLAVOR
de.javakaffee.kryoserializers.SubListSerializers$ArrayListSubListSerializer: java.lang.reflect.Field _parentOffsetField
org.conscrypt.OpenSSLRSAPublicKey: java.math.BigInteger modulus
com.esotericsoftware.kryo.util.IdentityObjectIntMap: int[] valueTable
org.conscrypt.SSLUtils$SessionType: int value
org.conscrypt.OpenSSLCipherChaCha20: boolean $assertionsDisabled
com.esotericsoftware.kryo.util.IntArray: int[] items
org.conscrypt.OpenSSLSignatureRawRSA: int inputOffset
org.conscrypt.NativeSsl: org.conscrypt.NativeCrypto$SSLHandshakeCallbacks handshakeCallbacks
org.conscrypt.SSLNullSession$DefaultHolder: org.conscrypt.SSLNullSession NULL_SESSION
com.esotericsoftware.kryo.serializers.DefaultSerializers$CalendarSerializer: long DEFAULT_GREGORIAN_CUTOVER
org.conscrypt.BaseOpenSSLSocketAdapterFactory: org.conscrypt.OpenSSLSocketFactoryImpl delegate
androidx.recyclerview.widget.RecyclerView: int MAX_SCROLL_DURATION
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
org.conscrypt.ConscryptEngine: org.conscrypt.SSLParametersImpl sslParameters
org.conscrypt.ct.CTConstants: int LOG_ENTRY_TYPE_LENGTH
androidx.recyclerview.widget.RecyclerView: long NO_ID
org.conscrypt.ct.VerifiedSCT: org.conscrypt.ct.SignedCertificateTimestamp sct
io.paperdb.BuildConfig: java.lang.String BUILD_TYPE
org.conscrypt.NativeConstants: int SSL3_RT_CHANGE_CIPHER_SPEC
com.esotericsoftware.kryo.util.IdentityMap: int threshold
org.conscrypt.Java8EngineSocket: java.util.function.BiFunction selector
de.javakaffee.kryoserializers.jodatime.IdentifiableChronology: java.lang.String _id
com.esotericsoftware.kryo.serializers.BeanSerializer$CachedProperty: int getterAccessIndex
org.conscrypt.ct.SerializationException: long serialVersionUID
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator
org.conscrypt.SSLParametersImpl: boolean ctVerificationEnabled
org.conscrypt.OpenSSLAeadCipher: byte[] buf
com.esotericsoftware.kryo.factories.ReflectionSerializerFactory: java.lang.Class serializerClass
org.conscrypt.OpenSSLMac: byte[] keyBytes
org.conscrypt.ct.DigitallySigned: org.conscrypt.ct.DigitallySigned$SignatureAlgorithm signatureAlgorithm
com.esotericsoftware.kryo.Kryo$DefaultInstantiatorStrategy$1: com.esotericsoftware.reflectasm.ConstructorAccess val$access
com.esotericsoftware.kryo.util.ObjectMap: java.lang.Object[] valueTable
org.conscrypt.TrustManagerImpl: java.lang.Exception err
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection: de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection SORTED_MAP
com.esotericsoftware.kryo.serializers.FieldSerializer: java.lang.Class[] generics
de.javakaffee.kryoserializers.jodatime.IdentifiableChronology: de.javakaffee.kryoserializers.jodatime.IdentifiableChronology[] $VALUES
com.esotericsoftware.kryo.Kryo: java.lang.Object readObject
org.conscrypt.OpenSSLAeadCipher: int lastGlobalMessageSize
com.esotericsoftware.kryo.serializers.CollectionSerializer: boolean elementsCanBeNull
com.esotericsoftware.kryo.util.ObjectMap$MapIterator: int nextIndex
androidx.recyclerview.widget.RecyclerView: int mMinFlingVelocity
com.esotericsoftware.kryo.util.IntMap$MapIterator: int nextIndex
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore$ProcessCallback mViewInfoProcessCallback
org.conscrypt.SessionSnapshot: long lastAccessedTime
org.conscrypt.ConscryptFileDescriptorSocket$SSLInputStream: java.lang.Object readLock
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper mScrollingChildHelper
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_PREFETCH_TAG
org.conscrypt.NativeConstants: int SSL3_RT_HEADER_LENGTH
com.esotericsoftware.kryo.util.DefaultClassResolver: com.esotericsoftware.kryo.util.ObjectMap nameToClass
org.conscrypt.OpenSSLCipher: boolean encrypting
org.conscrypt.NativeCrypto: int GN_STACK_ISSUER_ALT_NAME
io.paperdb.BuildConfig: int VERSION_CODE
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
org.conscrypt.OpenSSLSignature$RSAPSSPadding: java.lang.String contentDigestAlgorithm
com.esotericsoftware.reflectasm.FieldAccess: java.lang.String[] fieldNames
com.esotericsoftware.kryo.util.IdentityMap: int stashSize
org.conscrypt.OpenSSLBIOInputStream: long ctx
androidx.recyclerview.widget.RecyclerView: boolean mLayoutWasDefered
org.conscrypt.BuildConfig: java.lang.String VERSION_NAME
com.esotericsoftware.kryo.io.UnsafeMemoryInput: long bufaddress
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
com.esotericsoftware.kryo.io.Input: int capacity
org.conscrypt.OpenSSLServerSocketFactoryImpl: boolean useEngineSocket
org.conscrypt.OpenSSLEvpCipher: boolean calledUpdate
org.conscrypt.ct.DigitallySigned$SignatureAlgorithm: org.conscrypt.ct.DigitallySigned$SignatureAlgorithm DSA
com.esotericsoftware.kryo.util.IdentityObjectIntMap: int PRIME4
android.support.v4.media.session.MediaSessionCompat$QueueItem: android.os.Parcelable$Creator CREATOR
org.conscrypt.TrustManagerFactoryImpl: java.security.KeyStore keyStore
org.conscrypt.NativeSsl: java.security.cert.X509Certificate[] localCertificates
androidx.recyclerview.widget.RecyclerView: boolean VERBOSE_TRACING
org.conscrypt.OpenSSLEvpCipher: org.conscrypt.NativeRef$EVP_CIPHER_CTX cipherCtx
com.esotericsoftware.kryo.util.DefaultClassResolver: com.esotericsoftware.kryo.Registration memoizedClassIdValue
de.javakaffee.kryoserializers.guava.TreeMultimapSerializer: boolean IMMUTABLE
com.esotericsoftware.kryo.serializers.FieldSerializerConfig: boolean copyTransient
org.conscrypt.SSLParametersImpl: org.conscrypt.ServerSessionContext serverSessionContext
com.esotericsoftware.kryo.util.IdentityObjectIntMap: int PRIME3
org.conscrypt.OpenSSLCipher: org.conscrypt.OpenSSLCipher$Padding padding
com.esotericsoftware.kryo.pool.KryoPool$Builder: java.util.Queue queue
de.javakaffee.kryoserializers.guava.ImmutableSetSerializer: boolean DOES_NOT_ACCEPT_NULL
org.conscrypt.FileClientSessionCache$CacheFile: long lastModified
org.conscrypt.ConscryptFileDescriptorSocket: int writeTimeoutMilliseconds
org.conscrypt.ConscryptEngineSocket: int state
com.esotericsoftware.kryo.util.IdentityObjectIntMap: float loadFactor
org.conscrypt.ct.CTConstants: int SCT_LIST_LENGTH_BYTES
com.esotericsoftware.kryo.Registration: com.esotericsoftware.kryo.Serializer serializer
com.esotericsoftware.kryo.Registration: org.objenesis.instantiator.ObjectInstantiator instantiator
de.javakaffee.kryoserializers.EnumSetSerializer: java.lang.reflect.Field TYPE_FIELD
com.esotericsoftware.kryo.util.IdentityMap: com.esotericsoftware.kryo.util.IdentityMap$Keys keys
de.javakaffee.kryoserializers.dexx.SetSerializer: boolean IMMUTABLE
com.esotericsoftware.kryo.io.UnsafeOutput: boolean isLittleEndian
org.conscrypt.OpenSSLECGroupContext: java.util.Map ALIASES
com.esotericsoftware.reflectasm.FieldAccess: java.lang.Class[] fieldTypes
androidx.recyclerview.widget.RecyclerView: java.lang.Class[] LAYOUT_MANAGER_CONSTRUCTOR_SIGNATURE
de.javakaffee.kryoserializers.guava.ImmutableSetSerializer$SomeEnum: de.javakaffee.kryoserializers.guava.ImmutableSetSerializer$SomeEnum B
com.esotericsoftware.kryo.io.Input: java.io.InputStream inputStream
androidx.recyclerview.widget.RecyclerView: int mScrollPointerId
org.conscrypt.NativeConstants: int SSL_RECEIVED_SHUTDOWN
com.esotericsoftware.kryo.Kryo$DefaultSerializerEntry: com.esotericsoftware.kryo.factories.SerializerFactory serializerFactory
org.conscrypt.OpenSSLX509CertPath$Encoding: org.conscrypt.OpenSSLX509CertPath$Encoding PKCS7
de.javakaffee.kryoserializers.guava.ImmutableSetSerializer$SomeEnum: de.javakaffee.kryoserializers.guava.ImmutableSetSerializer$SomeEnum[] $VALUES
com.esotericsoftware.kryo.util.IdentityMap: boolean isBigTable
com.esotericsoftware.kryo.pool.KryoPoolQueueImpl: com.esotericsoftware.kryo.pool.KryoFactory factory
io.paperdb.PaperTable: java.lang.Object mContent
com.esotericsoftware.kryo.util.IntMap$MapIterator: int currentIndex
com.esotericsoftware.kryo.util.IntMap: int stashSize
com.esotericsoftware.kryo.serializers.FieldSerializer: java.lang.reflect.TypeVariable[] typeParameters
com.esotericsoftware.kryo.serializers.FieldSerializer: com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField[] fields
org.conscrypt.EvpMdRef$SHA1: int SIZE_BYTES
org.conscrypt.NativeConstants: int SSL_VERIFY_NONE
org.conscrypt.OpenSSLAeadCipher: int bufCount
com.esotericsoftware.kryo.util.IntMap: java.lang.Object[] valueTable
org.conscrypt.EvpMdRef$SHA1: java.lang.String JCA_NAME
org.conscrypt.ConscryptEngine: java.nio.ByteBuffer[] singleDstBuffer
com.esotericsoftware.kryo.util.IntMap: int pushIterations
org.conscrypt.OpenSSLSocketFactoryImpl: boolean useEngineSocketByDefault
com.esotericsoftware.kryo.serializers.FieldSerializer: com.esotericsoftware.kryo.Kryo kryo
de.javakaffee.kryoserializers.SubListSerializers: java.lang.Object FAKE_REFERENCE
org.conscrypt.ChainStrengthAnalyzer: int MIN_DSA_Q_LEN_BITS
androidx.recyclerview.widget.RecyclerView: int INVALID_TYPE
com.esotericsoftware.kryo.serializers.DeflateSerializer: boolean noHeaders
de.javakaffee.kryoserializers.SubListSerializers$JavaUtilSubListSerializer: java.lang.reflect.Field _sizeField
de.javakaffee.kryoserializers.FieldAnnotationAwareSerializer$Factory: boolean disregarding
org.conscrypt.ConscryptEngineSocket$SSLInputStream: int fromSocketArrayOffset
com.esotericsoftware.kryo.util.IdentityMap: com.esotericsoftware.kryo.util.IdentityMap$Entries entries
com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField: java.lang.reflect.Field field
org.conscrypt.NativeConstants: int EVP_PKEY_RSA
org.conscrypt.AbstractConscryptSocket: java.net.Socket socket
org.conscrypt.ct.CTConstants: int EXTENSIONS_LENGTH_BYTES
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection: de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection[] $VALUES
org.conscrypt.NativeConstants: int RSA_PKCS1_PSS_PADDING
org.conscrypt.EmptyArray: java.lang.StackTraceElement[] STACK_TRACE_ELEMENT
com.esotericsoftware.kryo.util.IdentityMap: int pushIterations
com.esotericsoftware.kryo.io.ByteBufferOutput: java.nio.ByteOrder byteOrder
com.esotericsoftware.kryo.util.ObjectMap: float loadFactor
org.conscrypt.DuckTypedPSKKeyManager: java.lang.Object mDelegate
org.conscrypt.ClientSessionContext$HostAndPort: int port
com.esotericsoftware.kryo.util.IdentityMap: int capacity
de.javakaffee.kryoserializers.EnumMapSerializer: java.lang.Object FAKE_REFERENCE
com.esotericsoftware.kryo.util.IdentityObjectIntMap: int capacity
com.esotericsoftware.kryo.util.IntMap: int[] keyTable
com.esotericsoftware.kryo.util.IdentityMap: com.esotericsoftware.kryo.util.IdentityMap$Values values
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewFlinger mViewFlinger
org.conscrypt.OpenSSLMac: org.conscrypt.NativeRef$HMAC_CTX ctx
org.conscrypt.NativeConstants: int TLS1_VERSION
androidx.recyclerview.widget.RecyclerView: int mLayoutOrScrollCounter
org.conscrypt.OpenSSLSignature$RSAPSSPadding: java.lang.String mgf1DigestAlgorithm
org.conscrypt.SSLUtils$SessionType: org.conscrypt.SSLUtils$SessionType OPEN_SSL
androidx.recyclerview.widget.RecyclerView: boolean mPreserveFocusAfterLayout
com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.util.ObjectMap context
org.conscrypt.ActiveSession: long lastAccessedTime
com.esotericsoftware.reflectasm.AccessClassLoader: com.esotericsoftware.reflectasm.AccessClassLoader selfContextAccessClassLoader
org.conscrypt.Java8EngineWrapper: java.util.function.BiFunction selector
org.conscrypt.ActiveSession: java.lang.String applicationProtocol
de.javakaffee.kryoserializers.dexx.MapSerializer: boolean DOES_NOT_ACCEPT_NULL
com.esotericsoftware.kryo.serializers.ExternalizableSerializer: com.esotericsoftware.kryo.util.ObjectMap javaSerializerByType
de.javakaffee.kryoserializers.guava.ImmutableMultimapSerializer: boolean IMMUTABLE
com.esotericsoftware.kryo.serializers.MapSerializer: boolean keysCanBeNull
org.conscrypt.ct.DigitallySigned$HashAlgorithm: org.conscrypt.ct.DigitallySigned$HashAlgorithm[] $VALUES
org.conscrypt.NativeCrypto: java.lang.String[] TLSV12_PROTOCOLS
org.conscrypt.ct.DigitallySigned$HashAlgorithm: org.conscrypt.ct.DigitallySigned$HashAlgorithm[] values
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer: java.lang.Class[] generics
androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair
com.esotericsoftware.kryo.util.IdentityMap: int PRIME4
com.esotericsoftware.kryo.Kryo: byte NOT_NULL
com.esotericsoftware.kryo.io.Output: java.io.OutputStream outputStream
org.conscrypt.OpenSSLECPrivateKey: long serialVersionUID
org.conscrypt.ct.CTVerificationResult: java.util.ArrayList invalidSCTs
com.esotericsoftware.kryo.Serializer: boolean acceptsNull
org.conscrypt.OpenSSLEvpCipherAES$1: int[] $SwitchMap$org$conscrypt$OpenSSLCipher$Padding
org.conscrypt.OpenSSLX509CertPath: long serialVersionUID
org.conscrypt.NativeCrypto: java.lang.String[] DEFAULT_X509_CIPHER_SUITES
org.conscrypt.NativeSsl: org.conscrypt.SSLParametersImpl parameters
com.esotericsoftware.kryo.Kryo: int maxDepth
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
org.conscrypt.NativeCrypto: java.lang.String SUPPORTED_PROTOCOL_TLSV1_1
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecyclerListener mRecyclerListener
org.conscrypt.ConscryptEngineSocket$1: org.conscrypt.ConscryptEngineSocket val$socket
org.conscrypt.OpenSSLRSAPrivateKey: long serialVersionUID
org.conscrypt.NativeCrypto: java.lang.String SUPPORTED_PROTOCOL_TLSV1_3
org.conscrypt.SSLParametersImpl: boolean enable_session_creation
de.javakaffee.kryoserializers.SubListSerializers$ArrayListSubListSerializer: java.lang.Class SUBLIST_CLASS
org.conscrypt.SSLUtils$EngineStates: int STATE_HANDSHAKE_STARTED
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection: de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection[] $VALUES
org.conscrypt.ConscryptEngineSocket$SSLInputStream: byte[] singleByte
org.conscrypt.EvpMdRef$SHA1: java.lang.String OID
org.conscrypt.ServerSessionContext: org.conscrypt.SSLServerSessionCache persistentCache
org.conscrypt.AbstractSessionContext: int maximumSize
com.esotericsoftware.kryo.util.DefaultClassResolver: com.esotericsoftware.kryo.util.ObjectMap classToRegistration
io.paperdb.DbStoragePlainFile$2: io.paperdb.DbStoragePlainFile this$0
androidx.recyclerview.widget.RecyclerView: int mInterceptRequestLayoutDepth
com.esotericsoftware.kryo.serializers.FieldSerializerGenericsUtil: com.esotericsoftware.kryo.Kryo kryo
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
com.esotericsoftware.kryo.serializers.DefaultSerializers$LocaleSerializer: java.util.Locale SPANISH
org.conscrypt.EmptyArray: boolean[] BOOLEAN
org.conscrypt.OpenSSLECDHKeyAgreement: int mExpectedResultLength
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl mPrefetchRegistry
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener mOnFlingListener
com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.StreamFactory streamFactory
org.conscrypt.EmptyArray: java.lang.String[] STRING
com.esotericsoftware.kryo.serializers.CollectionSerializer: com.esotericsoftware.kryo.Serializer serializer
org.conscrypt.ct.DigitallySigned$HashAlgorithm: org.conscrypt.ct.DigitallySigned$HashAlgorithm SHA224
org.conscrypt.OpenSSLX509CertPath: org.conscrypt.OpenSSLX509CertPath$Encoding DEFAULT_ENCODING
com.esotericsoftware.kryo.serializers.ClosureSerializer: java.lang.reflect.Method readResolve
androidx.recyclerview.widget.RecyclerView: boolean mAdapterUpdateDuringMeasure
com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.ReferenceResolver referenceResolver
com.esotericsoftware.kryo.util.IdentityMap$MapIterator: com.esotericsoftware.kryo.util.IdentityMap map
com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.ClassResolver classResolver
com.esotericsoftware.kryo.util.IntArray: int size
androidx.recyclerview.widget.RecyclerView: android.view.animation.Interpolator sQuinticInterpolator
org.conscrypt.NativeSslSession$Impl$1: org.conscrypt.NativeSslSession$Impl this$0
org.conscrypt.SSLParametersImpl: java.lang.String[] enabledProtocols
org.conscrypt.OpenSSLRSAPrivateCrtKey: java.math.BigInteger primeQ
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection: de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection RANDOM_ACCESS_LIST
org.conscrypt.OpenSSLX509CRLEntry: java.util.Date revocationDate
org.conscrypt.CertificatePriorityComparator: java.lang.Integer PRIORITY_SHA1
com.esotericsoftware.kryo.io.ByteBufferOutput: java.nio.ByteBuffer niobuffer
org.conscrypt.Conscrypt$ProviderBuilder: java.lang.String name
com.esotericsoftware.kryo.util.ObjectMap: int mask
org.conscrypt.ConscryptFileDescriptorSocket$SSLOutputStream: java.lang.Object writeLock
org.conscrypt.TrustManagerImpl: org.conscrypt.ConscryptCertStore trustedCertificateStore
org.conscrypt.SessionSnapshot: javax.net.ssl.SSLSessionContext sessionContext
org.conscrypt.ActiveSession: byte[] id
org.conscrypt.ct.CTConstants: int SIGNATURE_LENGTH_BYTES
de.javakaffee.kryoserializers.guava.LinkedHashMultimapSerializer: boolean DOES_NOT_ACCEPT_NULL
org.conscrypt.OpenSSLContextImpl: org.conscrypt.ServerSessionContext serverSessionContext
org.conscrypt.TrustManagerImpl: java.security.KeyStore rootKeyStore
org.conscrypt.NativeConstants: int TLS1_2_VERSION
androidx.recyclerview.widget.RecyclerView: boolean IGNORE_DETACHED_FOCUSED_CHILD
com.esotericsoftware.kryo.serializers.ClosureSerializer: java.lang.Class serializedLambda
com.esotericsoftware.kryo.serializers.MapSerializer: com.esotericsoftware.kryo.Serializer valueSerializer
androidx.recyclerview.widget.RecyclerView: boolean DISPATCH_TEMP_DETACH
org.conscrypt.OpenSSLRSAPublicKey: boolean fetchedParams
org.conscrypt.OpenSSLServerSocketFactoryImpl: org.conscrypt.SSLParametersImpl sslParameters
org.conscrypt.TrustManagerImpl: org.conscrypt.ct.CTVerifier ctVerifier
com.esotericsoftware.reflectasm.AccessClassLoader: java.lang.ClassLoader selfContextParentClassLoader
org.conscrypt.Platform: java.lang.String TAG
com.esotericsoftware.minlog.Log: boolean TRACE
de.javakaffee.kryoserializers.SubListSerializers$JavaUtilSubListSerializer: java.lang.reflect.Field _offsetField
androidx.appcompat.app.AppCompatViewInflater: java.lang.String LOG_TAG
org.conscrypt.AbstractConscryptSocket: int readTimeoutMilliseconds
org.conscrypt.PeerInfoProvider$2: java.lang.String val$host
org.conscrypt.NativeCrypto: java.lang.String[] TLSV1_PROTOCOLS
org.conscrypt.ct.CTConstants: int VERSION_LENGTH
de.javakaffee.kryoserializers.guava.ImmutableSetSerializer: boolean IMMUTABLE
org.conscrypt.AbstractConscryptSocket: org.conscrypt.PeerInfoProvider peerInfoProvider
org.conscrypt.OpenSSLAeadCipher: byte[] previousKey
org.conscrypt.EmptyArray: char[] CHAR
org.conscrypt.OAEPParameters: java.lang.String PSPECIFIED_OID
org.conscrypt.OpenSSLX509CertificateFactory: int PUSHBACK_SIZE
org.conscrypt.ConscryptFileDescriptorSocket: org.conscrypt.ConscryptFileDescriptorSocket$SSLInputStream is
android.support.v4.media.session.ParcelableVolumeInfo: android.os.Parcelable$Creator CREATOR
com.esotericsoftware.reflectasm.MethodAccess: java.lang.Class[] returnTypes
androidx.recyclerview.widget.RecyclerView: int[] mScrollOffset
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
org.conscrypt.NativeConstants: int EXFLAG_CA
org.conscrypt.NativeConstants: int SSL_ERROR_WANT_WRITE
org.conscrypt.OpenSSLEvpCipherAES: int AES_BLOCK_SIZE
org.conscrypt.ct.CertificateEntry: org.conscrypt.ct.CertificateEntry$LogEntryType entryType
com.esotericsoftware.reflectasm.MethodAccess: java.lang.Class[][] parameterTypes
com.esotericsoftware.kryo.util.UnsafeUtil: sun.misc.Unsafe _unsafe
com.esotericsoftware.kryo.Kryo: boolean autoReset
com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.serializers.FieldSerializerConfig fieldSerializerConfig
com.esotericsoftware.kryo.serializers.BeanSerializer$CachedProperty: int setterAccessIndex
org.conscrypt.OpenSSLEvpCipherAES$1: int[] $SwitchMap$org$conscrypt$OpenSSLCipher$Mode
com.esotericsoftware.minlog.Log$Logger: long firstLogTime
com.google.android.material.textfield.TextInputLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.esotericsoftware.kryo.io.Input: long total
com.esotericsoftware.kryo.serializers.FieldSerializerConfig: boolean serializeTransient
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$SavedState mPendingSavedState
org.conscrypt.ct.DigitallySigned$SignatureAlgorithm: org.conscrypt.ct.DigitallySigned$SignatureAlgorithm[] values
org.conscrypt.Conscrypt: org.conscrypt.Conscrypt$Version VERSION
org.conscrypt.OpenSSLSignature$RSAPSSPadding: int TRAILER_FIELD_BC_ID
com.esotericsoftware.kryo.serializers.ObjectField: com.esotericsoftware.kryo.Kryo kryo
de.javakaffee.kryoserializers.jodatime.JodaDateTimeSerializer: java.lang.String DATE_TIME
org.conscrypt.CertificatePriorityComparator: java.util.Map ALGORITHM_OID_PRIORITY_MAP
org.conscrypt.FileClientSessionCache$Impl: java.io.File directory
com.esotericsoftware.kryo.util.ObjectMap: int pushIterations
org.conscrypt.ct.DigitallySigned: org.conscrypt.ct.DigitallySigned$HashAlgorithm hashAlgorithm
com.esotericsoftware.kryo.util.IntMap: int mask
org.conscrypt.EvpMdRef$SHA512: java.lang.String JCA_NAME
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnItemTouchListener mInterceptingOnItemTouchListener
org.conscrypt.AbstractConscryptSocket: boolean autoClose
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: android.os.Parcelable$Creator CREATOR
com.esotericsoftware.kryo.serializers.FieldSerializer: com.esotericsoftware.kryo.serializers.Generics genericsScope
com.esotericsoftware.kryo.util.ObjectMap: int capacity
org.conscrypt.EvpMdRef$MD5: java.lang.String OID
androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow
org.conscrypt.ct.SignedCertificateTimestamp: org.conscrypt.ct.DigitallySigned signature
org.conscrypt.OpenSSLCipherRSA$OAEP: org.conscrypt.NativeRef$EVP_PKEY_CTX pkeyCtx
com.esotericsoftware.kryo.util.IntMap: int PRIME4
org.conscrypt.OpenSSLCipherRSA: int padding
org.conscrypt.GCMParameters: byte[] iv
org.conscrypt.TrustManagerImpl: org.conscrypt.ConscryptHostnameVerifier defaultHostnameVerifier
org.conscrypt.ct.CTVerificationResult: java.util.ArrayList validSCTs
org.conscrypt.TrustManagerImpl: org.conscrypt.CertPinManager pinManager
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer: boolean elementsAreSameType
com.esotericsoftware.kryo.serializers.CollectionSerializer: java.lang.Class elementClass
org.conscrypt.SSLNullSession: java.lang.String INVALID_CIPHER
org.conscrypt.OpenSSLAeadCipher: boolean mustInitialize
io.paperdb.DbStoragePlainFile: java.util.HashMap mCustomSerializers
org.conscrypt.AllocatedBuffer$1: java.nio.ByteBuffer val$buffer
com.esotericsoftware.kryo.util.IdentityObjectIntMap: int stashSize
org.conscrypt.BuildConfig: java.lang.String BUILD_TYPE
com.esotericsoftware.kryo.Kryo$DefaultInstantiatorStrategy$1: com.esotericsoftware.kryo.Kryo$DefaultInstantiatorStrategy this$0
org.conscrypt.OpenSSLAeadCipher: long evpAead
androidx.recyclerview.widget.RecyclerView: android.graphics.RectF mTempRectF
org.conscrypt.ConscryptEngine: org.conscrypt.BufferAllocator defaultBufferAllocator
com.esotericsoftware.kryo.serializers.FieldSerializerConfig: boolean ignoreSyntheticFields
com.esotericsoftware.kryo.io.ByteBufferInput: java.nio.ByteOrder byteOrder
org.conscrypt.SSLUtils$SessionType: org.conscrypt.SSLUtils$SessionType[] $VALUES
org.conscrypt.EvpMdRef$SHA384: int SIZE_BYTES
io.paperdb.KeyLocker: java.util.concurrent.ConcurrentMap semaphoreMap
com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.serializers.GenericsResolver genericsResolver
de.javakaffee.kryoserializers.SubListSerializers$ArrayListSubListSerializer: java.lang.reflect.Field _sizeField
com.esotericsoftware.kryo.KryoException: java.lang.StringBuffer trace
org.conscrypt.SessionSnapshot: long creationTime
com.esotericsoftware.minlog.Log: int LEVEL_TRACE
org.conscrypt.NativeCrypto: java.lang.String OBSOLETE_PROTOCOL_SSLV3
com.esotericsoftware.kryo.util.ObjectMap$MapIterator: com.esotericsoftware.kryo.util.ObjectMap map
org.conscrypt.ct.SignedCertificateTimestamp$Origin: org.conscrypt.ct.SignedCertificateTimestamp$Origin[] $VALUES
de.javakaffee.kryoserializers.guava.ArrayListMultimapSerializer: boolean IMMUTABLE
de.javakaffee.kryoserializers.jodatime.IdentifiableChronology: de.javakaffee.kryoserializers.jodatime.IdentifiableChronology COPTIC
org.conscrypt.ConscryptEngine: org.conscrypt.NativeSsl ssl
com.esotericsoftware.kryo.util.IdentityMap$MapIterator: boolean hasNext
org.conscrypt.OpenSSLRSAPublicKey: long serialVersionUID
org.conscrypt.OAEPParameters: java.lang.String MGF1_OID
com.esotericsoftware.kryo.serializers.TaggedFieldSerializer: boolean[] annexed
org.conscrypt.ActiveSession: javax.security.cert.X509Certificate[] peerCertificateChain
de.javakaffee.kryoserializers.DateSerializer: java.lang.reflect.Constructor _constructor
org.conscrypt.NativeConstants: int SSL_TLSEXT_ERR_NOACK
com.esotericsoftware.kryo.serializers.CompatibleFieldSerializer: int THRESHOLD_BINARY_SEARCH
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
org.conscrypt.NativeCrypto: int PKCS7_CERTS
org.conscrypt.OpenSSLMessageDigestJDK: boolean digestInitializedInContext
com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField: long offset
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer: java.lang.reflect.Field SOURCE_COLLECTION_FIELD
org.conscrypt.CertificatePriorityComparator: java.lang.Integer PRIORITY_SHA224
org.conscrypt.OpenSSLCipherChaCha20: int currentBlockConsumedBytes
com.esotericsoftware.kryo.util.IdentityMap$Entry: java.lang.Object value
org.conscrypt.TrustManagerImpl: java.security.cert.X509Certificate[] acceptedIssuers
org.conscrypt.ApplicationProtocolSelectorAdapter: javax.net.ssl.SSLSocket socket
android.support.v4.media.MediaDescriptionCompat: android.os.Parcelable$Creator CREATOR
org.conscrypt.OAEPParameters: java.util.Map NAME_TO_OID
androidx.recyclerview.widget.RecyclerView: int SCROLL_STATE_IDLE
androidx.appcompat.app.AppCompatViewInflater: java.lang.Class[] sConstructorSignature
org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker: java.lang.String EKU_OID
android.support.v4.media.RatingCompat: android.os.Parcelable$Creator CREATOR
com.esotericsoftware.kryo.util.IdentityMap: int size
org.conscrypt.ct.SignedCertificateTimestamp$Version: org.conscrypt.ct.SignedCertificateTimestamp$Version[] $VALUES
com.esotericsoftware.kryo.pool.KryoPool$Builder: com.esotericsoftware.kryo.pool.KryoFactory factory
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
org.conscrypt.SSLParametersImpl: org.conscrypt.ApplicationProtocolSelectorAdapter applicationProtocolSelector
org.conscrypt.ConscryptEngineSocket$3: int[] $SwitchMap$javax$net$ssl$SSLEngineResult$Status
org.conscrypt.OpenSSLSignature$EngineType: org.conscrypt.OpenSSLSignature$EngineType RSA
org.conscrypt.Java8FileDescriptorSocket$1: java.util.function.BiFunction val$selector
org.conscrypt.NativeCrypto: java.lang.String[] TLSV11_PROTOCOLS
com.esotericsoftware.kryo.Kryo: org.objenesis.strategy.InstantiatorStrategy strategy
com.esotericsoftware.kryo.Kryo$DefaultInstantiatorStrategy$2: com.esotericsoftware.kryo.Kryo$DefaultInstantiatorStrategy this$0
androidx.recyclerview.widget.RecyclerView: int mLastTouchY
org.conscrypt.Java8EngineWrapper: org.conscrypt.ConscryptEngine delegate
org.conscrypt.OpenSSLMessageDigestJDK: int size
de.javakaffee.kryoserializers.jodatime.IdentifiableChronology: de.javakaffee.kryoserializers.jodatime.IdentifiableChronology GJ
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnScrollListener mScrollListener
org.conscrypt.ConscryptEngine: org.conscrypt.HandshakeListener handshakeListener
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: org.conscrypt.AbstractConscryptSocket delegate
org.conscrypt.SSLParametersImpl: java.util.Collection sniMatchers
org.conscrypt.NativeCrypto: java.util.Set SUPPORTED_LEGACY_CIPHER_SUITES_SET
org.conscrypt.ct.CTLogInfo: byte[] logId
com.esotericsoftware.minlog.Log: int LEVEL_INFO
com.esotericsoftware.kryo.Kryo: boolean copyShallow
org.conscrypt.OpenSSLBIOSource$ByteBufferInputStream: java.nio.ByteBuffer source
org.conscrypt.ConscryptFileDescriptorSocket: org.conscrypt.OpenSSLKey channelIdPrivateKey
io.paperdb.Paper: java.util.concurrent.ConcurrentHashMap mBookMap
org.conscrypt.SSLParametersImpl: boolean useSessionTickets
com.esotericsoftware.kryo.serializers.FieldSerializerConfig: boolean useAsm
com.esotericsoftware.kryo.serializers.FieldSerializer$CachedFieldNameStrategy: com.esotericsoftware.kryo.serializers.FieldSerializer$CachedFieldNameStrategy EXTENDED
org.conscrypt.OpenSSLCipher$Padding: org.conscrypt.OpenSSLCipher$Padding NOPADDING
org.conscrypt.OpenSSLSignatureRawRSA: boolean inputIsTooLong
org.conscrypt.OpenSSLCipherChaCha20: int blockCounter
com.esotericsoftware.kryo.Kryo$DefaultSerializerEntry: java.lang.Class type
org.conscrypt.AbstractSessionContext: int DEFAULT_SESSION_TIMEOUT_SECONDS
org.conscrypt.TrustManagerImpl$GlobalHostnameVerifierAdapter: org.conscrypt.TrustManagerImpl$GlobalHostnameVerifierAdapter INSTANCE
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_HANDLE_ADAPTER_UPDATES_TAG
org.conscrypt.SSLUtils$SessionType: org.conscrypt.SSLUtils$SessionType OPEN_SSL_WITH_OCSP
org.conscrypt.NativeConstants: int SSL_SIGN_RSA_PKCS1_SHA384
com.esotericsoftware.kryo.util.IdentityMap$Entries: com.esotericsoftware.kryo.util.IdentityMap$Entry entry
org.conscrypt.OpenSSLCipher: int blockSize
org.conscrypt.NativeCrypto: java.util.Set SUPPORTED_TLS_1_2_CIPHER_SUITES_SET
org.conscrypt.OpenSSLSignature: long evpMdRef
de.javakaffee.kryoserializers.KryoReflectionFactorySupport: java.util.Map _constructors
de.javakaffee.kryoserializers.dexx.ListSerializer: boolean IMMUTABLE
org.conscrypt.TrustManagerImpl$TrustAnchorComparator: org.conscrypt.CertificatePriorityComparator CERT_COMPARATOR
org.conscrypt.ConscryptEngine: javax.net.ssl.SSLEngineResult NEED_WRAP_CLOSED
org.conscrypt.OpenSSLRandom: long serialVersionUID
org.conscrypt.SSLUtils: java.lang.String KEY_TYPE_RSA
org.conscrypt.ct.DigitallySigned$SignatureAlgorithm: org.conscrypt.ct.DigitallySigned$SignatureAlgorithm ANONYMOUS
org.conscrypt.NativeConstants: int SSL_VERIFY_PEER
org.conscrypt.ct.DigitallySigned$HashAlgorithm: org.conscrypt.ct.DigitallySigned$HashAlgorithm SHA256
org.conscrypt.NativeConstants: int SSL_SENT_SHUTDOWN
androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect2
de.javakaffee.kryoserializers.guava.ImmutableMapSerializer: boolean IMMUTABLE
androidx.recyclerview.widget.RecyclerView: int mInitialTouchY
org.conscrypt.OpenSSLMac: int size
com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField: java.lang.Class valueClass
org.conscrypt.ApplicationProtocolSelectorAdapter: org.conscrypt.ApplicationProtocolSelector selector
de.javakaffee.kryoserializers.dexx.MapSerializer: boolean IMMUTABLE
org.conscrypt.FileClientSessionCache: java.util.Map caches
com.esotericsoftware.kryo.util.MapReferenceResolver: com.esotericsoftware.kryo.Kryo kryo
org.conscrypt.OpenSSLSignature: org.conscrypt.OpenSSLKey key
org.conscrypt.OAEPParameters: java.util.Map OID_TO_NAME
org.conscrypt.OpenSSLSignature$RSAPSSPadding: int saltSizeBytes
org.conscrypt.NativeConstants: int SSL_VERIFY_FAIL_IF_NO_PEER_CERT
org.conscrypt.GCMParameters: int tLen
org.conscrypt.OpenSSLCipher$Mode: org.conscrypt.OpenSSLCipher$Mode ECB
org.conscrypt.ConscryptEngineSocket$SSLInputStream: java.lang.Object readLock
org.conscrypt.ConscryptFileDescriptorSocket: int state
com.esotericsoftware.kryo.io.UnsafeMemoryOutput: boolean isLittleEndian
org.conscrypt.OpenSSLCipher: byte[] encodedKey
com.esotericsoftware.kryo.io.Input: byte[] buffer
org.conscrypt.NativeConstants: int SSL_SIGN_RSA_PKCS1_SHA1
androidx.recyclerview.widget.RecyclerView: int mEatenAccessibilityChangeFlags
de.javakaffee.kryoserializers.SubListSerializers$JavaUtilSubListSerializer: java.lang.reflect.Field _listField
org.conscrypt.OpenSSLCipher$Mode: org.conscrypt.OpenSSLCipher$Mode CTR
org.conscrypt.OpenSSLCipherRSA$OAEP: byte[] label
androidx.recyclerview.widget.RecyclerView: boolean mDispatchItemsChangedEvent
de.javakaffee.kryoserializers.guava.ImmutableListSerializer: boolean IMMUTABLE
org.conscrypt.OpenSSLECKeyPairGenerator: int DEFAULT_KEY_SIZE
org.conscrypt.Java8EngineSocket$1: java.util.function.BiFunction val$selector
com.esotericsoftware.kryo.util.Util: boolean IS_ANDROID
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection: de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection SET
org.conscrypt.OpenSSLCipher$Mode: org.conscrypt.OpenSSLCipher$Mode GCM_SIV
de.javakaffee.kryoserializers.guava.ImmutableMapSerializer$DummyEnum: de.javakaffee.kryoserializers.guava.ImmutableMapSerializer$DummyEnum VALUE2
org.conscrypt.EvpMdRef$SHA224: java.lang.String OID
io.paperdb.DbStoragePlainFile: boolean mPaperDirIsCreated
org.conscrypt.SSLParametersImpl: java.lang.Boolean useSni
org.conscrypt.BuildConfig: java.lang.String FLAVOR
com.esotericsoftware.kryo.util.IntMap$MapIterator: int INDEX_ZERO
org.conscrypt.OpenSSLContextImpl: org.conscrypt.SSLParametersImpl sslParameters
org.conscrypt.ct.CTConstants: int SERIALIZED_SCT_LENGTH_BYTES
org.conscrypt.ActiveSession: java.security.cert.X509Certificate[] localCertificates
io.paperdb.Book: io.paperdb.DbStoragePlainFile mStorage
org.conscrypt.NativeConstants: int SSL3_RT_MAX_PACKET_SIZE
org.conscrypt.OpenSSLCipherRSA: boolean usingPrivateKey
org.conscrypt.ClientSessionContext$HostAndPort: java.lang.String host
io.paperdb.BuildConfig: boolean DEBUG
org.conscrypt.AbstractSessionContext: java.util.Map sessions
de.javakaffee.kryoserializers.guava.ImmutableMapSerializer$DummyEnum: de.javakaffee.kryoserializers.guava.ImmutableMapSerializer$DummyEnum[] $VALUES
org.conscrypt.TrustManagerImpl: java.security.cert.CertPathValidator validator
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
com.esotericsoftware.kryo.util.IntMap: int stashCapacity
org.conscrypt.OpenSSLX509CertificateFactory: org.conscrypt.OpenSSLX509CertificateFactory$Parser crlParser
org.conscrypt.NativeConstants: int SSL_ERROR_NONE
org.conscrypt.OpenSSLECPrivateKey: org.conscrypt.OpenSSLKey key
org.conscrypt.OpenSSLProvider: java.lang.String PREFIX
com.esotericsoftware.kryo.serializers.BeanSerializer$1: com.esotericsoftware.kryo.serializers.BeanSerializer this$0
org.conscrypt.ConscryptFileDescriptorSocket$SSLInputStream: org.conscrypt.ConscryptFileDescriptorSocket this$0
org.conscrypt.NativeConstants: int SSL_OP_CIPHER_SERVER_PREFERENCE
org.conscrypt.OpenSSLECDHKeyAgreement: byte[] mResult
com.esotericsoftware.kryo.util.IdentityMap: int PRIME2
io.paperdb.Paper: java.util.HashMap mCustomSerializers
org.conscrypt.ct.VerifiedSCT$Status: org.conscrypt.ct.VerifiedSCT$Status[] $VALUES
org.conscrypt.BuildConfig: int VERSION_CODE
org.conscrypt.OpenSSLX509CertPath$Encoding: org.conscrypt.OpenSSLX509CertPath$Encoding[] $VALUES
org.conscrypt.PSKKeyManager: int MAX_IDENTITY_HINT_LENGTH_BYTES
androidx.recyclerview.widget.RecyclerView: boolean mPostedAnimatorRunner
org.conscrypt.OpenSSLECPublicKey: org.conscrypt.OpenSSLECGroupContext group
org.conscrypt.SSLUtils: java.nio.charset.Charset US_ASCII
com.esotericsoftware.kryo.serializers.DeflateSerializer: int compressionLevel
de.javakaffee.kryoserializers.guava.ReverseListSerializer: com.esotericsoftware.kryo.serializers.CollectionSerializer serializer
com.esotericsoftware.kryo.Kryo: boolean references
org.conscrypt.OpenSSLX509CertificateFactory$2: org.conscrypt.OpenSSLX509CertificateFactory this$0
org.conscrypt.ct.CTConstants: java.lang.String X509_SCT_LIST_OID
org.conscrypt.OpenSSLSignature$RSAPSSPadding: long mgf1EvpMdRef
androidx.recyclerview.widget.RecyclerView: int[] mMinMaxLayoutPositions
org.conscrypt.ct.VerifiedSCT: org.conscrypt.ct.VerifiedSCT$Status status
android.support.v4.media.MediaMetadataCompat: android.os.Parcelable$Creator CREATOR
org.conscrypt.Java8EngineWrapper$1: java.util.function.BiFunction val$selector
org.conscrypt.FileClientSessionCache$Impl: int size
org.conscrypt.GCMParameters: int DEFAULT_TLEN
com.esotericsoftware.kryo.util.DefaultClassResolver: int nextNameId
org.conscrypt.ct.DigitallySigned$SignatureAlgorithm: org.conscrypt.ct.DigitallySigned$SignatureAlgorithm RSA
org.conscrypt.ActiveSession: org.conscrypt.NativeSsl ssl
org.conscrypt.EvpMdRef$SHA256: java.lang.String JCA_NAME
org.conscrypt.OpenSSLCipher$Mode: org.conscrypt.OpenSSLCipher$Mode POLY1305
androidx.recyclerview.widget.RecyclerView: boolean DEBUG
com.esotericsoftware.kryo.util.IntArray: boolean ordered
com.esotericsoftware.kryo.util.IdentityObjectIntMap: int PRIME2
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: android.os.Parcelable$Creator CREATOR
org.conscrypt.ConscryptEngine$2: org.conscrypt.ConscryptEngine this$0
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler
org.conscrypt.NativeConstants: int SSL_SIGN_RSA_PSS_RSAE_SHA256
org.conscrypt.ApplicationProtocolSelectorAdapter: javax.net.ssl.SSLEngine engine
org.conscrypt.CertificatePriorityComparator: java.lang.Integer PRIORITY_SHA256
org.conscrypt.OpenSSLECKeyPairGenerator: java.lang.String ALGORITHM
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection: de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection SORTED_SET
de.javakaffee.kryoserializers.guava.ImmutableMapSerializer: boolean DOES_NOT_ACCEPT_NULL
com.google.android.material.datepicker.CalendarConstraints: android.os.Parcelable$Creator CREATOR
com.esotericsoftware.kryo.serializers.ObjectField: java.lang.Class[] generics
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mItemAnimatorListener
org.conscrypt.OpenSSLMessageDigestJDK: byte[] singleByte
org.conscrypt.NativeConstants: int TLS_CT_ECDSA_SIGN
org.conscrypt.OpenSSLSignatureRawRSA: org.conscrypt.OpenSSLKey key
org.conscrypt.ConscryptServerSocket: boolean useEngineSocket
org.conscrypt.Java7ExtendedSSLSession: java.lang.String[] PEER_SUPPORTED_SIGNATURE_ALGORITHMS
de.javakaffee.kryoserializers.jodatime.IdentifiableChronology: de.javakaffee.kryoserializers.jodatime.IdentifiableChronology BUDDHIST
com.esotericsoftware.kryo.io.Input: char[] chars
org.conscrypt.NativeCrypto: int EXTENSION_TYPE_NON_CRITICAL
org.conscrypt.EvpMdRef$MD5: int SIZE_BYTES
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection: de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection MAP
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeRegionField: long len
org.conscrypt.Java7ExtendedSSLSession: org.conscrypt.ExternalSession delegate
io.paperdb.DbStoragePlainFile: io.paperdb.KeyLocker keyLocker
com.esotericsoftware.kryo.serializers.FieldSerializer: com.esotericsoftware.kryo.serializers.FieldSerializer$CachedFieldFactory unsafeFieldFactory
org.conscrypt.ConscryptEngineSocket$2: org.conscrypt.ConscryptEngineSocket val$socket
org.conscrypt.OpenSSLCipherRSA$OAEP: int oaepMdSizeBytes
org.conscrypt.OpenSSLCipherChaCha20: int BLOCK_SIZE_BYTES
org.conscrypt.ApplicationProtocolSelectorAdapter: int NO_PROTOCOL_SELECTED
com.esotericsoftware.kryo.io.Output: byte[] buffer
io.paperdb.DbStoragePlainFile: java.lang.String BACKUP_EXTENSION
org.conscrypt.ConscryptEngine: javax.net.ssl.SSLEngineResult NEED_WRAP_OK
org.conscrypt.AbstractConscryptSocket$1: org.conscrypt.AbstractConscryptSocket this$0
org.conscrypt.SSLParametersImpl: boolean client_mode
com.esotericsoftware.kryo.util.IdentityObjectIntMap: int mask
org.conscrypt.NativeConstants: int SSL_SIGN_RSA_PKCS1_SHA256
com.esotericsoftware.kryo.util.ObjectMap$Entries: com.esotericsoftware.kryo.util.ObjectMap$Entry entry
org.conscrypt.OpenSSLProvider: long serialVersionUID
org.conscrypt.ct.VerifiedSCT$Status: org.conscrypt.ct.VerifiedSCT$Status INVALID_SIGNATURE
org.conscrypt.ECParameters: org.conscrypt.OpenSSLECGroupContext curve
com.esotericsoftware.kryo.Kryo: java.lang.Thread thread
org.conscrypt.ct.CertificateEntry: byte[] certificate
de.javakaffee.kryoserializers.guava.LinkedListMultimapSerializer: boolean IMMUTABLE
org.conscrypt.OpenSSLBIOSource: org.conscrypt.OpenSSLBIOInputStream source
org.conscrypt.EvpMdRef: java.lang.String MGF1_OID
org.conscrypt.PeerInfoProvider$2: int val$port
org.conscrypt.SSLUtils$SessionType: org.conscrypt.SSLUtils$SessionType OPEN_SSL_WITH_TLS_SCT
org.conscrypt.OpenSSLX509CRL: long mContext
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection: de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection SORTED_SET
org.conscrypt.OpenSSLCipher$Mode: org.conscrypt.OpenSSLCipher$Mode CBC
com.esotericsoftware.kryo.util.IdentityMap: java.lang.Object[] valueTable
org.conscrypt.NativeSslSession$Impl: java.lang.String protocol
com.esotericsoftware.minlog.Log: int LEVEL_DEBUG
com.esotericsoftware.kryo.serializers.BeanSerializer$CachedProperty: com.esotericsoftware.kryo.Serializer serializer
de.javakaffee.kryoserializers.SubListSerializers$JavaUtilSubListSerializer: java.lang.Class SUBLIST_CLASS
androidx.recyclerview.widget.RecyclerView: java.lang.String TAG
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer: java.lang.Class type
androidx.recyclerview.widget.RecyclerView: int[] mNestedOffsets
com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField: int accessIndex
org.conscrypt.OpenSSLCipherRSA: boolean inputTooLarge
com.esotericsoftware.kryo.io.Output: int position
com.esotericsoftware.kryo.serializers.BeanSerializer$CachedProperty: java.lang.String name
com.esotericsoftware.kryo.serializers.FieldSerializer: com.esotericsoftware.kryo.serializers.FieldSerializerGenericsUtil genericsUtil
com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.util.IntArray readReferenceIds
com.esotericsoftware.kryo.util.IdentityObjectIntMap: int pushIterations
org.conscrypt.NativeCrypto: int EXTENSION_TYPE_CRITICAL
org.conscrypt.OpenSSLRSAKeyPairGenerator: int modulusBits
com.esotericsoftware.kryo.serializers.FieldSerializer: boolean varIntsEnabled
com.esotericsoftware.kryo.Kryo$DefaultInstantiatorStrategy$2: java.lang.Class val$type
org.conscrypt.ct.DigitallySigned$SignatureAlgorithm: org.conscrypt.ct.DigitallySigned$SignatureAlgorithm[] $VALUES
org.conscrypt.NativeConstants: int SSL_SIGN_ECDSA_SECP256R1_SHA256
androidx.recyclerview.widget.RecyclerView: int mDispatchScrollCounter
org.conscrypt.ConscryptFileDescriptorSocket$2: org.conscrypt.ConscryptFileDescriptorSocket this$0
org.conscrypt.SSLParametersImpl: boolean need_client_auth
org.conscrypt.NativeConstants: int EXFLAG_CRITICAL
org.conscrypt.ct.Serialization: int DER_TAG_MASK
org.conscrypt.EmptyArray: int[] INT
androidx.recyclerview.widget.RecyclerView: int UNDEFINED_DURATION
android.support.v4.media.session.MediaSessionCompat$Token: android.os.Parcelable$Creator CREATOR
org.conscrypt.NativeSsl$BioWrapper: long bio
com.esotericsoftware.kryo.serializers.BeanSerializer$CachedProperty: com.esotericsoftware.kryo.serializers.BeanSerializer this$0
com.esotericsoftware.kryo.Kryo: boolean copyReferences
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_ON_LAYOUT_TAG
org.conscrypt.OpenSSLSignature$EngineType: org.conscrypt.OpenSSLSignature$EngineType[] $VALUES
org.conscrypt.NativeCrypto: int PKCS7_CRLS
org.conscrypt.OpenSSLCipher$Padding: org.conscrypt.OpenSSLCipher$Padding PKCS7PADDING
com.esotericsoftware.kryo.util.ObjectMap: int stashSize
org.conscrypt.PSKKeyManager: int MAX_KEY_LENGTH_BYTES
de.javakaffee.kryoserializers.guava.UnmodifiableNavigableSetSerializer: java.lang.reflect.Field delegate
com.google.android.material.bottomappbar.BottomAppBar$SavedState: android.os.Parcelable$Creator CREATOR
com.esotericsoftware.kryo.serializers.EnumNameSerializer: com.esotericsoftware.kryo.Serializer stringSerializer
com.esotericsoftware.kryo.serializers.ObjectField: com.esotericsoftware.kryo.serializers.FieldSerializer fieldSerializer
org.conscrypt.OpenSSLX509CRLEntry: long mContext
androidx.recyclerview.widget.RecyclerView: android.view.accessibility.AccessibilityManager mAccessibilityManager
org.conscrypt.SSLUtils$EngineStates: int STATE_CLOSED_INBOUND
com.esotericsoftware.kryo.io.KryoDataInput: com.esotericsoftware.kryo.io.Input input
org.conscrypt.OpenSSLMac: long evp_md
de.javakaffee.kryoserializers.jodatime.IdentifiableChronology: de.javakaffee.kryoserializers.jodatime.IdentifiableChronology ISLAMIC
org.conscrypt.TrustManagerImpl: org.conscrypt.CertBlacklist blacklist
org.conscrypt.FileClientSessionCache$Impl: java.util.Map accessOrder
org.conscrypt.TrustManagerImpl: java.util.logging.Logger logger
com.esotericsoftware.minlog.Log: int LEVEL_NONE
org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: long serialVersionUID
org.conscrypt.ct.SignedCertificateTimestamp: org.conscrypt.ct.SignedCertificateTimestamp$Origin origin
androidx.recyclerview.widget.RecyclerView: int mMaxFlingVelocity
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
org.conscrypt.OpenSSLMessageDigestJDK: long evp_md
androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations
de.javakaffee.kryoserializers.guava.ImmutableSetSerializer$SomeEnum: de.javakaffee.kryoserializers.guava.ImmutableSetSerializer$SomeEnum A
org.conscrypt.OpenSSLX509CertPath$1: int[] $SwitchMap$org$conscrypt$OpenSSLX509CertPath$Encoding
org.conscrypt.BuildConfig: java.lang.String APPLICATION_ID
org.conscrypt.Conscrypt$Version: int major
com.esotericsoftware.kryo.serializers.FieldSerializer: java.lang.Object access
com.esotericsoftware.kryo.serializers.ExternalizableSerializer: com.esotericsoftware.kryo.io.KryoObjectOutput objectOutput
org.conscrypt.ct.DigitallySigned: byte[] signature
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
com.esotericsoftware.kryo.util.ObjectMap: int stashCapacity
androidx.recyclerview.widget.RecyclerView: boolean mFirstLayoutComplete
org.conscrypt.NativeSsl: long ssl
com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.util.ObjectMap graphContext
org.conscrypt.OpenSSLCipher: org.conscrypt.OpenSSLCipher$Mode mode
com.esotericsoftware.kryo.util.UnsafeUtil: long shortArrayBaseOffset
com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField: boolean canBeNull
org.conscrypt.OpenSSLCipherRSA: boolean encrypting
com.esotericsoftware.kryo.Registration: java.lang.Class type
com.esotericsoftware.kryo.util.UnsafeUtil: long floatArrayBaseOffset
androidx.recyclerview.widget.RecyclerView: java.util.List mPendingAccessibilityImportanceChange
androidx.recyclerview.widget.RecyclerView: int mInitialTouchX
org.conscrypt.OpenSSLSignature$EngineType: org.conscrypt.OpenSSLSignature$EngineType EC
org.conscrypt.ct.CTConstants: int TIMESTAMP_LENGTH
de.javakaffee.kryoserializers.guava.ImmutableSortedSetSerializer: boolean DOES_NOT_ACCEPT_NULL
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection: java.lang.Class type
org.conscrypt.ActiveSession: long creationTime
com.esotericsoftware.kryo.util.IdentityMap$MapIterator: int nextIndex
com.esotericsoftware.kryo.serializers.FieldSerializer: boolean unsafeAvailable
com.esotericsoftware.kryo.serializers.BlowfishSerializer$1: com.esotericsoftware.kryo.serializers.BlowfishSerializer this$0
com.esotericsoftware.kryo.util.DefaultClassResolver: com.esotericsoftware.kryo.util.IntMap nameIdToClass
org.conscrypt.OpenSSLCipher$Mode: org.conscrypt.OpenSSLCipher$Mode[] $VALUES
androidx.appcompat.app.AppCompatViewInflater: java.lang.Object[] mConstructorArgs
de.javakaffee.kryoserializers.ArraysAsListSerializer: java.lang.reflect.Field _arrayField
com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.util.IdentityMap originalToCopy
com.esotericsoftware.kryo.util.IntMap: int hashShift
de.javakaffee.kryoserializers.jodatime.IdentifiableChronology: de.javakaffee.kryoserializers.jodatime.IdentifiableChronology ISO
org.conscrypt.CertificatePriorityComparator: java.lang.Integer PRIORITY_MD5
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.AdapterHelper mAdapterHelper
com.esotericsoftware.kryo.serializers.FieldSerializerConfig: boolean fixedFieldTypes
com.esotericsoftware.kryo.util.DefaultClassResolver: com.esotericsoftware.kryo.Registration memoizedClassValue
com.esotericsoftware.kryo.io.Output: long total
org.conscrypt.SSLParametersImpl: org.conscrypt.SSLParametersImpl defaultParameters
org.conscrypt.ConscryptEngine: int state
androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mOnItemTouchListeners
org.conscrypt.ct.SignedCertificateTimestamp$Origin: org.conscrypt.ct.SignedCertificateTimestamp$Origin OCSP_RESPONSE
com.esotericsoftware.kryo.serializers.FieldSerializer: com.esotericsoftware.kryo.serializers.FieldSerializer$CachedFieldFactory objectFieldFactory
com.esotericsoftware.kryo.serializers.TaggedFieldSerializer: java.util.Comparator TAGGED_VALUE_COMPARATOR
com.esotericsoftware.kryo.util.UnsafeUtil: long charArrayBaseOffset
org.conscrypt.ConscryptEngineSocket$SSLOutputStream: java.io.OutputStream socketOutputStream
org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker: java.lang.String EKU_nsSGC
org.conscrypt.SSLParametersImpl: byte[] sctExtension
org.conscrypt.ct.VerifiedSCT$Status: org.conscrypt.ct.VerifiedSCT$Status INVALID_SCT
org.conscrypt.OpenSSLRSAPrivateCrtKey: java.math.BigInteger primeExponentQ
com.esotericsoftware.kryo.pool.KryoPool$Builder: boolean softReferences
org.conscrypt.SSLUtils: int MAX_PROTOCOL_LENGTH
org.conscrypt.FileClientSessionCache$CacheFile: java.lang.String name
de.javakaffee.kryoserializers.guava.HashMultimapSerializer: boolean DOES_NOT_ACCEPT_NULL
com.esotericsoftware.kryo.util.DefaultClassResolver: com.esotericsoftware.kryo.util.IntMap idToRegistration
com.esotericsoftware.kryo.io.UnsafeOutput: boolean supportVarInts
de.javakaffee.kryoserializers.KryoReflectionFactorySupport: java.lang.Object[] INITARGS
org.conscrypt.SessionSnapshot: int peerPort
org.conscrypt.NativeCrypto: java.lang.String[] DEFAULT_PROTOCOLS
org.conscrypt.NativeSsl$BioWrapper: org.conscrypt.NativeSsl this$0
com.esotericsoftware.reflectasm.AccessClassLoader: java.util.WeakHashMap accessClassLoaders
com.esotericsoftware.kryo.util.IntMap: int capacity
org.conscrypt.EvpMdRef$SHA384: long EVP_MD
org.conscrypt.SessionSnapshot: java.util.List statusResponses
com.esotericsoftware.kryo.util.IdentityMap: java.lang.Object[] keyTable
org.conscrypt.ct.SignedCertificateTimestamp$Origin: org.conscrypt.ct.SignedCertificateTimestamp$Origin TLS_EXTENSION
org.conscrypt.AbstractSessionContext$2: java.util.Iterator val$iter
org.conscrypt.ct.SignedCertificateTimestamp$SignatureType: org.conscrypt.ct.SignedCertificateTimestamp$SignatureType CERTIFICATE_TIMESTAMP
com.esotericsoftware.kryo.serializers.FieldSerializer: boolean hasObjectFields
androidx.recyclerview.widget.RecyclerView: boolean mEnableFastScroller
com.esotericsoftware.kryo.util.ObjectMap: int PRIME2
org.conscrypt.OpenSSLCipher: byte[] iv
org.conscrypt.OpenSSLSignature: boolean signing
com.esotericsoftware.kryo.serializers.BeanSerializer$CachedProperty: java.lang.reflect.Method setMethod
com.esotericsoftware.kryo.util.IntMap: java.lang.Object zeroValue
com.esotericsoftware.kryo.Kryo$DefaultInstantiatorStrategy$1: java.lang.Class val$type
com.esotericsoftware.kryo.serializers.BeanSerializer: java.lang.Object access
org.conscrypt.ct.DigitallySigned$HashAlgorithm: org.conscrypt.ct.DigitallySigned$HashAlgorithm SHA384
com.esotericsoftware.minlog.Log: int LEVEL_ERROR
com.esotericsoftware.kryo.util.ObjectMap: int PRIME3
org.conscrypt.OpenSSLRSAKeyPairGenerator: byte[] publicExponent
org.conscrypt.ActiveSession: org.conscrypt.AbstractSessionContext sessionContext
org.conscrypt.OpenSSLAeadCipher: byte[] previousIv
com.esotericsoftware.kryo.serializers.MapSerializer: java.lang.Class keyClass
org.conscrypt.OpenSSLRSAPrivateCrtKey: java.math.BigInteger publicExponent
de.javakaffee.kryoserializers.jodatime.IdentifiableChronology: org.joda.time.Chronology _chronology
org.conscrypt.NativeConstants: int SSL_MODE_ENABLE_FALSE_START
org.conscrypt.NativeConstants: int SSL_MODE_CBC_RECORD_SPLITTING
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate mAccessibilityDelegate
androidx.appcompat.app.AppCompatViewInflater: java.util.Map sConstructorMap
org.conscrypt.ct.VerifiedSCT$Status: org.conscrypt.ct.VerifiedSCT$Status UNKNOWN_LOG
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout
org.conscrypt.EvpMdRef$SHA224: int SIZE_BYTES
org.conscrypt.ConscryptFileDescriptorSocket: org.conscrypt.SSLParametersImpl sslParameters
org.conscrypt.ChainStrengthAnalyzer: int MIN_DSA_P_LEN_BITS
org.conscrypt.OpenSSLCipherRSA$OAEP: long mgf1Md
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: android.os.Parcelable$Creator CREATOR
org.conscrypt.ct.CertificateEntry$LogEntryType: org.conscrypt.ct.CertificateEntry$LogEntryType PRECERT_ENTRY
com.esotericsoftware.kryo.serializers.FieldSerializer: com.esotericsoftware.kryo.serializers.FieldSerializerUnsafeUtil unsafeUtil
org.conscrypt.EmptyArray: byte[] BYTE
org.conscrypt.EvpMdRef$SHA512: java.lang.String OID
org.conscrypt.Java8FileDescriptorSocket: java.util.function.BiFunction selector
org.conscrypt.SSLParametersImpl: boolean want_client_auth
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver mObserver
org.conscrypt.ActiveSession: byte[] peerCertificateOcspData
org.conscrypt.NativeSsl: org.conscrypt.SSLParametersImpl$AliasChooser aliasChooser
org.conscrypt.OpenSSLECPrivateKey: java.lang.String ALGORITHM
org.conscrypt.NativeConstants: int SSL_SIGN_ECDSA_SECP384R1_SHA384
org.conscrypt.NativeCrypto: boolean HAS_AES_HARDWARE
com.esotericsoftware.kryo.Kryo: boolean registrationRequired
com.esotericsoftware.kryo.pool.KryoPoolQueueImpl: java.util.Queue queue
de.javakaffee.kryoserializers.dexx.SetSerializer: boolean DOES_NOT_ACCEPT_NULL
org.conscrypt.NativeConstants: int SSL3_RT_MAX_PLAIN_LENGTH
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory mEdgeEffectFactory
org.conscrypt.NativeConstants: int SSL_MODE_SEND_FALLBACK_SCSV
org.conscrypt.ConscryptFileDescriptorSocket: org.conscrypt.ConscryptFileDescriptorSocket$SSLOutputStream os
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
org.conscrypt.OpenSSLCipherRSA$OAEP: long oaepMd
com.esotericsoftware.kryo.util.ObjectMap$Entry: java.lang.Object value
com.esotericsoftware.kryo.util.ListReferenceResolver: com.esotericsoftware.kryo.Kryo kryo
org.conscrypt.ct.CertificateEntry: byte[] issuerKeyHash
org.conscrypt.ConscryptEngineSocket$SSLOutputStream: int targetArrayOffset
com.esotericsoftware.kryo.util.ObjectMap: int hashShift
com.esotericsoftware.kryo.serializers.FieldSerializerGenericsUtil: com.esotericsoftware.kryo.serializers.FieldSerializer serializer
org.conscrypt.OpenSSLCipherChaCha20: int NONCE_SIZE_BYTES
com.esotericsoftware.kryo.serializers.MapSerializer: java.lang.Class valueGenericType
org.conscrypt.ConscryptFileDescriptorSocket: org.conscrypt.ActiveSession activeSession
org.conscrypt.ConscryptEngineSocket$SSLInputStream: org.conscrypt.AllocatedBuffer allocatedBuffer
com.esotericsoftware.kryo.serializers.FieldSerializer: java.lang.Class componentType
org.conscrypt.SSLUtils: boolean USE_ENGINE_SOCKET_BY_DEFAULT
com.esotericsoftware.kryo.io.KryoDataOutput: com.esotericsoftware.kryo.io.Output output
org.conscrypt.NativeConstants: int SSL3_RT_ALERT
org.conscrypt.AbstractConscryptSocket: int peerPort
org.conscrypt.ConscryptEngine: org.conscrypt.PeerInfoProvider peerInfoProvider
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback
com.esotericsoftware.kryo.serializers.MapSerializer: com.esotericsoftware.kryo.Serializer keySerializer
org.conscrypt.ConscryptEngineSocket: java.nio.ByteBuffer EMPTY_BUFFER
org.conscrypt.NativeSslSession$Impl: int port
com.esotericsoftware.kryo.Kryo: int REF
org.conscrypt.OpenSSLProvider: java.lang.String STANDARD_RSA_PRIVATE_KEY_INTERFACE_CLASS_NAME
de.javakaffee.kryoserializers.guava.TreeMultimapSerializer: boolean DOES_NOT_ACCEPT_NULL
com.esotericsoftware.kryo.serializers.FieldSerializer: com.esotericsoftware.kryo.serializers.FieldSerializerConfig config
org.conscrypt.EmptyArray: java.lang.Class[] CLASS
de.javakaffee.kryoserializers.guava.LinkedListMultimapSerializer: boolean DOES_NOT_ACCEPT_NULL
org.conscrypt.EvpMdRef$SHA384: java.lang.String OID
com.esotericsoftware.kryo.util.ObjectMap: int PRIME4
com.esotericsoftware.kryo.serializers.FieldSerializerUnsafeUtil$Factory: java.lang.reflect.Constructor fieldSerializerUnsafeUtilConstructor
com.esotericsoftware.kryo.util.IntMap: boolean isBigTable
org.conscrypt.TrustManagerImpl$GlobalHostnameVerifierAdapter: org.conscrypt.TrustManagerImpl$GlobalHostnameVerifierAdapter[] $VALUES
org.conscrypt.ct.DigitallySigned$HashAlgorithm: org.conscrypt.ct.DigitallySigned$HashAlgorithm SHA1
org.conscrypt.NativeSsl: java.util.concurrent.locks.ReadWriteLock lock
de.javakaffee.kryoserializers.jodatime.JodaDateTimeSerializer: java.lang.String MILLIS
org.conscrypt.Conscrypt$ProviderBuilder: java.lang.String defaultTlsProtocol
org.conscrypt.OpenSSLAeadCipher: int tagLengthInBytes
androidx.recyclerview.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker
org.conscrypt.OpenSSLSignature: long evpPkeyCtx
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer: java.lang.reflect.Field SOURCE_COLLECTION_FIELD
com.esotericsoftware.kryo.util.ObjectMap: int threshold
com.esotericsoftware.kryo.Kryo: boolean warnUnregisteredClasses
org.conscrypt.NativeCrypto: java.lang.String[] DEFAULT_PSK_CIPHER_SUITES
org.conscrypt.PSSParameters: java.security.spec.PSSParameterSpec spec
de.javakaffee.kryoserializers.dexx.ListSerializer: boolean DOES_NOT_ACCEPT_NULL
org.conscrypt.ct.SignedCertificateTimestamp: byte[] extensions
org.conscrypt.ConscryptEngine: javax.net.ssl.SSLEngineResult NEED_UNWRAP_OK
org.conscrypt.SSLParametersImpl: boolean channelIdEnabled
de.javakaffee.kryoserializers.SubListSerializers$ArrayListSubListSerializer: java.lang.reflect.Field _parentField
org.conscrypt.AddressUtils: java.util.regex.Pattern ipPattern
com.esotericsoftware.kryo.util.IdentityObjectIntMap: java.lang.Object[] keyTable
org.conscrypt.ConscryptEngineSocket$SSLInputStream: java.nio.ByteBuffer fromEngine
com.esotericsoftware.kryo.Kryo: java.lang.ClassLoader classLoader
org.conscrypt.OpenSSLX509CertificateFactory$1: org.conscrypt.OpenSSLX509CertificateFactory this$0
org.conscrypt.SSLParametersImpl: javax.net.ssl.X509KeyManager defaultX509KeyManager
org.conscrypt.OpenSSLX509CRL: java.util.Date nextUpdate
org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker: java.lang.String EKU_clientAuth
org.conscrypt.KeyManagerFactoryImpl: java.security.KeyStore keyStore
org.conscrypt.NativeConstants: int SSL_SIGN_ED25519
com.esotericsoftware.kryo.util.IdentityMap$Entry: java.lang.Object key
de.javakaffee.kryoserializers.guava.ArrayListMultimapSerializer: boolean DOES_NOT_ACCEPT_NULL
org.conscrypt.NativeConstants: int TLS1_3_VERSION
org.conscrypt.OpenSSLSocketFactoryImpl: java.io.IOException instantiationException
org.conscrypt.NativeConstants: int SSL_ERROR_WANT_READ
androidx.recyclerview.widget.RecyclerView: java.util.List mScrollListeners
de.javakaffee.kryoserializers.guava.HashMultimapSerializer: boolean IMMUTABLE
com.esotericsoftware.kryo.util.IntMap$MapIterator: com.esotericsoftware.kryo.util.IntMap map
com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.serializers.TaggedFieldSerializerConfig taggedFieldSerializerConfig
org.conscrypt.EvpMdRef$SHA512: int SIZE_BYTES
androidx.recyclerview.widget.RecyclerView: java.lang.Runnable mUpdateChildViewsRunnable
de.javakaffee.kryoserializers.jodatime.IdentifiableChronology: de.javakaffee.kryoserializers.jodatime.IdentifiableChronology ETHIOPIC
org.conscrypt.ConscryptEngine: org.conscrypt.NativeSsl$BioWrapper networkBio
org.conscrypt.NativeConstants: int RSA_NO_PADDING
org.conscrypt.ConscryptEngineSocket$SSLInputStream: java.io.InputStream socketInputStream
org.conscrypt.EvpMdRef$SHA256: java.lang.String OID
org.conscrypt.TrustManagerImpl: org.conscrypt.TrustManagerImpl$TrustAnchorComparator TRUST_ANCHOR_COMPARATOR
org.conscrypt.OpenSSLEvpCipherDESEDE: int DES_BLOCK_SIZE
org.conscrypt.NativeRef: long address
io.paperdb.DbStoragePlainFile: java.lang.String mDbPath
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState
com.esotericsoftware.kryo.util.FastestStreamFactory: boolean isUnsafe
com.google.android.material.theme.MaterialComponentsViewInflater: int floatingToolbarItemBackgroundResId
org.conscrypt.OpenSSLX509Certificate: long mContext
org.conscrypt.PSKKeyManager: int MAX_IDENTITY_LENGTH_BYTES
com.esotericsoftware.kryo.util.UnsafeUtil: long doubleArrayBaseOffset
org.conscrypt.NativeConstants: int SSL_CB_HANDSHAKE_DONE
androidx.recyclerview.widget.RecyclerView: boolean POST_UPDATES_ON_ANIMATION
org.conscrypt.ConscryptEngineSocket$SSLInputStream: java.nio.ByteBuffer fromSocket
org.conscrypt.ct.SignedCertificateTimestamp$SignatureType: org.conscrypt.ct.SignedCertificateTimestamp$SignatureType TREE_HASH
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
org.conscrypt.ct.CTConstants: int CERTIFICATE_LENGTH_BYTES
org.conscrypt.ChainStrengthAnalyzer: java.lang.String[] SIGNATURE_ALGORITHM_OID_BLACKLIST
org.conscrypt.OpenSSLSignature$1: int[] $SwitchMap$org$conscrypt$OpenSSLSignature$EngineType
com.esotericsoftware.kryo.serializers.DefaultSerializers$LocaleSerializer: java.util.Locale SPAIN
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_NESTED_PREFETCH_TAG
com.esotericsoftware.kryo.util.IdentityMap: float loadFactor
org.conscrypt.OpenSSLX509Certificate: java.util.Date notBefore
androidx.recyclerview.widget.RecyclerView: boolean mClipToPadding
org.conscrypt.SSLUtils$EngineStates: int STATE_CLOSED_OUTBOUND
org.conscrypt.NativeCrypto: java.lang.UnsatisfiedLinkError loadError
com.esotericsoftware.minlog.Log: boolean INFO
com.esotericsoftware.kryo.util.IdentityMap: int PRIME3
org.conscrypt.OpenSSLEvpCipher: int modeBlockSize
de.javakaffee.kryoserializers.wicket.MiniMapSerializer: java.lang.reflect.Field KEYS_FIELD
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: org.conscrypt.AbstractConscryptSocket delegate
androidx.recyclerview.widget.RecyclerView: int HORIZONTAL
org.conscrypt.OpenSSLECKeyPairGenerator: java.util.Map SIZE_TO_CURVE_NAME
androidx.recyclerview.widget.RecyclerView: int SCROLL_STATE_SETTLING
org.conscrypt.ct.CTLogInfo: java.lang.String description
org.conscrypt.EmptyArray: java.lang.Throwable[] THROWABLE
org.conscrypt.SessionSnapshot: java.lang.String peerHost
com.esotericsoftware.kryo.util.ObjectMap: java.util.Random random
org.conscrypt.SSLParametersImpl: org.conscrypt.PSKKeyManager pskKeyManager
org.conscrypt.ct.SignedCertificateTimestamp$SignatureType: org.conscrypt.ct.SignedCertificateTimestamp$SignatureType[] $VALUES
org.conscrypt.ConscryptEngineSocket$2: javax.net.ssl.X509ExtendedTrustManager val$extendedDelegate
com.esotericsoftware.kryo.serializers.FieldSerializerConfig: boolean setFieldsAsAccessible
org.conscrypt.OpenSSLX509CertPath: java.util.List ALL_ENCODINGS
de.javakaffee.kryoserializers.EnumMapSerializer: java.lang.reflect.Field TYPE_FIELD
org.conscrypt.OpenSSLProvider: java.lang.String STANDARD_EC_PRIVATE_KEY_INTERFACE_CLASS_NAME
org.conscrypt.NativeConstants: int TLS_CT_RSA_SIGN
com.esotericsoftware.kryo.util.IntMap: int PRIME3
org.conscrypt.ct.DigitallySigned$HashAlgorithm: org.conscrypt.ct.DigitallySigned$HashAlgorithm MD5
org.conscrypt.EvpMdRef$MD5: long EVP_MD
org.conscrypt.SSLUtils$EngineStates: int STATE_NEW
org.conscrypt.SSLUtils$EngineStates: int STATE_MODE_SET
com.esotericsoftware.kryo.util.IntMap$Entry: int key
org.conscrypt.SSLParametersImpl: javax.net.ssl.X509KeyManager x509KeyManager
org.conscrypt.AbstractConscryptSocket: java.util.List listeners
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeRegionField: boolean bulkReadsSupported
org.conscrypt.OpenSSLContextImpl: org.conscrypt.ClientSessionContext clientSessionContext
org.conscrypt.SessionSnapshot: byte[] id
org.conscrypt.NativeCrypto: java.lang.String TLS_EMPTY_RENEGOTIATION_INFO_SCSV
com.google.android.material.internal.CheckableImageButton$SavedState: android.os.Parcelable$Creator CREATOR
androidx.recyclerview.widget.RecyclerView: boolean FORCE_ABS_FOCUS_SEARCH_DIRECTION
com.esotericsoftware.kryo.util.IntMap: int threshold
org.conscrypt.NativeConstants: int RSA_PKCS1_OAEP_PADDING
org.conscrypt.SSLParametersImpl: java.lang.String[] EMPTY_STRING_ARRAY
org.conscrypt.ConscryptFileDescriptorSocket: org.conscrypt.NativeSsl ssl
org.conscrypt.OpenSSLRSAPrivateKey: org.conscrypt.OpenSSLKey key
org.conscrypt.AbstractConscryptSocket: java.lang.String peerHostname
com.esotericsoftware.kryo.serializers.VersionFieldSerializer: boolean compatible
org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker: java.lang.String EKU_msSGC
org.conscrypt.ct.CTVerifier: org.conscrypt.ct.CTLogStore store
com.esotericsoftware.minlog.Log: int LEVEL_WARN
org.conscrypt.OpenSSLAeadCipher: byte[] aad
com.esotericsoftware.kryo.util.UnsafeUtil: long byteArrayBaseOffset
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection: de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection COLLECTION
org.conscrypt.ct.SignedCertificateTimestamp$Version: org.conscrypt.ct.SignedCertificateTimestamp$Version V1
androidx.appcompat.app.AppCompatViewInflater: int[] sOnClickAttrs
org.conscrypt.OpenSSLCipher$Padding: org.conscrypt.OpenSSLCipher$Padding[] $VALUES
androidx.recyclerview.widget.RecyclerView: int TOUCH_SLOP_DEFAULT
org.conscrypt.OpenSSLSignature: byte[] singleByte
org.conscrypt.SSLParametersImpl: javax.net.ssl.X509TrustManager defaultX509TrustManager
com.esotericsoftware.kryo.io.InputChunked: int chunkSize
com.esotericsoftware.kryo.util.ObjectMap: java.lang.Object[] keyTable
com.esotericsoftware.kryo.Serializer: boolean immutable
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection: de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection MAP
androidx.recyclerview.widget.RecyclerView: int NO_POSITION
androidx.recyclerview.widget.RecyclerView: boolean mItemsChanged
org.conscrypt.NativeSslSession$Impl: org.conscrypt.AbstractSessionContext context
org.conscrypt.OpenSSLX509CRL: java.util.Date thisUpdate
org.conscrypt.DefaultSSLContextImpl: javax.net.ssl.KeyManager[] KEY_MANAGERS
org.conscrypt.OpenSSLBIOSink: java.io.ByteArrayOutputStream buffer
org.conscrypt.OpenSSLX509CertPath$Encoding: java.lang.String apiName
androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed
org.conscrypt.OpenSSLX509Certificate: long serialVersionUID
org.conscrypt.OpenSSLRSAPrivateCrtKey: java.math.BigInteger primeExponentP
org.conscrypt.SSLUtils$EngineStates: int STATE_READY
org.conscrypt.OpenSSLCipher$Mode: org.conscrypt.OpenSSLCipher$Mode NONE
io.paperdb.Paper: java.lang.String TAG
com.esotericsoftware.kryo.serializers.FieldSerializerConfig: boolean optimizedGenerics
org.conscrypt.ConscryptEngineSocket$3: int[] $SwitchMap$javax$net$ssl$SSLEngineResult$HandshakeStatus
com.esotericsoftware.kryo.io.ByteBufferOutput: java.nio.ByteOrder nativeOrder
org.conscrypt.NativeConstants: int RSA_PKCS1_PADDING
com.google.android.material.stateful.ExtendableSavedState: android.os.Parcelable$Creator CREATOR
de.javakaffee.kryoserializers.cglib.CGLibProxySerializer: java.lang.String DEFAULT_NAMING_MARKER
org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker: boolean clientAuth
org.conscrypt.OpenSSLX509Certificate: java.util.Date notAfter
com.esotericsoftware.kryo.serializers.BeanSerializer: java.lang.Object[] noArgs
androidx.recyclerview.widget.RecyclerView: java.util.List mOnChildAttachStateListeners
com.esotericsoftware.kryo.serializers.FieldSerializer$CachedFieldNameStrategy: com.esotericsoftware.kryo.serializers.FieldSerializer$CachedFieldNameStrategy DEFAULT
com.esotericsoftware.kryo.util.Util: java.util.concurrent.ConcurrentHashMap classAvailabilities
com.esotericsoftware.kryo.Kryo: byte NULL
com.esotericsoftware.kryo.util.IntMap: float loadFactor
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection: de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection COLLECTION
androidx.recyclerview.widget.RecyclerView: boolean ALLOW_SIZE_IN_UNSPECIFIED_SPEC
com.esotericsoftware.kryo.serializers.TaggedFieldSerializer: int[] tags
org.conscrypt.X509PublicKey: java.lang.String algorithm
org.conscrypt.ConscryptFileDescriptorSocket: int handshakeTimeoutMilliseconds
de.javakaffee.kryoserializers.jodatime.IdentifiableChronology: de.javakaffee.kryoserializers.jodatime.IdentifiableChronology JULIAN
com.esotericsoftware.kryo.serializers.BlowfishSerializer: javax.crypto.spec.SecretKeySpec keySpec
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
org.conscrypt.ConscryptEngineSocket$SSLInputStream: org.conscrypt.ConscryptEngineSocket this$0
com.esotericsoftware.kryo.io.ByteBufferOutputStream: java.nio.ByteBuffer byteBuffer
org.conscrypt.NativeSslSession$Impl: org.conscrypt.NativeRef$SSL_SESSION ref
de.javakaffee.kryoserializers.KryoReflectionFactorySupport: sun.reflect.ReflectionFactory REFLECTION_FACTORY
org.conscrypt.ConscryptEngine: javax.net.ssl.SSLSession externalSession
com.esotericsoftware.kryo.factories.PseudoSerializerFactory: com.esotericsoftware.kryo.Serializer serializer
org.conscrypt.OpenSSLSignature: org.conscrypt.NativeRef$EVP_MD_CTX ctx
org.conscrypt.OpenSSLCipherRSA: byte[] buffer
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
org.conscrypt.NativeConstants: int SSL_ERROR_ZERO_RETURN
com.esotericsoftware.kryo.serializers.GenericsResolver: java.util.LinkedList stack
org.conscrypt.ConscryptEngine: org.conscrypt.OpenSSLKey channelIdPrivateKey
org.conscrypt.OpenSSLECPrivateKey: org.conscrypt.OpenSSLECGroupContext group
org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker: java.security.cert.X509Certificate leaf
org.conscrypt.CertificatePriorityComparator: java.lang.Integer PRIORITY_SHA512
org.conscrypt.ct.CTLogInfo: java.security.PublicKey publicKey
com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.factories.SerializerFactory defaultSerializer
org.conscrypt.OpenSSLX509CertificateFactory: byte[] PKCS7_MARKER
androidx.recyclerview.widget.RecyclerView: java.lang.Runnable mItemAnimatorRunner
androidx.recyclerview.widget.RecyclerView: boolean ALLOW_THREAD_GAP_WORK
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_SCROLL_TAG
org.conscrypt.OpenSSLSocketFactoryImpl: org.conscrypt.SSLParametersImpl sslParameters
androidx.recyclerview.widget.RecyclerView: boolean mIsAttached
com.esotericsoftware.kryo.util.UnsafeUtil: long intArrayBaseOffset
org.conscrypt.EvpMdRef: java.lang.String MGF1_ALGORITHM_NAME
com.esotericsoftware.kryo.serializers.FieldSerializer: java.util.HashSet removedFields
com.esotericsoftware.kryo.io.ByteBufferOutput: boolean varIntsEnabled
org.conscrypt.X509PublicKey: byte[] encoded
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection: de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection SORTED_MAP
com.esotericsoftware.kryo.util.MapReferenceResolver: com.esotericsoftware.kryo.util.IdentityObjectIntMap writtenObjects
com.esotericsoftware.kryo.util.ObjectMap$MapIterator: int currentIndex
io.paperdb.BuildConfig: java.lang.String APPLICATION_ID
de.javakaffee.kryoserializers.guava.ImmutableSortedSetSerializer: boolean IMMUTABLE
org.conscrypt.NativeSsl: org.conscrypt.SSLParametersImpl$PSKCallbacks pskCallbacks
org.conscrypt.ConscryptEngine: int maxSealOverhead
com.esotericsoftware.kryo.io.UnsafeMemoryOutput: long bufaddress
org.conscrypt.OAEPParameters: javax.crypto.spec.OAEPParameterSpec spec
org.conscrypt.ActiveSession: java.lang.String protocol
org.conscrypt.ct.DigitallySigned$HashAlgorithm: org.conscrypt.ct.DigitallySigned$HashAlgorithm NONE
androidx.recyclerview.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout
com.esotericsoftware.kryo.util.IntMap: boolean hasZeroValue
com.esotericsoftware.kryo.serializers.BeanSerializer$CachedProperty: java.lang.Class setMethodType
de.javakaffee.kryoserializers.jodatime.JodaDateTimeSerializer: java.lang.String CHRONOLOGY
org.conscrypt.ConscryptFileDescriptorSocket: javax.net.ssl.SSLSession externalSession
org.conscrypt.OpenSSLRSAPrivateCrtKey: java.math.BigInteger crtCoefficient
org.conscrypt.ConscryptFileDescriptorSocket: java.lang.Object guard
de.javakaffee.kryoserializers.protobuf.ProtobufSerializer: java.lang.reflect.Method parseFromMethod
org.conscrypt.OpenSSLServerSocketFactoryImpl: boolean useEngineSocketByDefault
org.conscrypt.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
org.conscrypt.ConscryptEngine: org.conscrypt.ActiveSession activeSession
androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
org.conscrypt.NativeCrypto: java.lang.String[] TLSV13_PROTOCOLS
org.conscrypt.KeyGeneratorImpl: int keySizeBits
org.conscrypt.TrustManagerImpl: org.conscrypt.TrustedCertificateIndex trustedCertificateIndex
org.conscrypt.OpenSSLSignatureRawECDSA: java.io.ByteArrayOutputStream buffer
org.conscrypt.SSLUtils: java.lang.String KEY_TYPE_EC
org.conscrypt.SSLParametersImpl: boolean isEnabledProtocolsFiltered
org.conscrypt.SSLParametersImpl: java.security.AlgorithmConstraints algorithmConstraints
org.conscrypt.KeyGeneratorImpl: java.security.SecureRandom secureRandom
org.conscrypt.OpenSSLECDHKeyAgreement: org.conscrypt.OpenSSLKey mOpenSslPrivateKey
org.conscrypt.SSLParametersImpl: javax.net.ssl.X509TrustManager x509TrustManager
org.conscrypt.SSLUtils$EngineStates: int STATE_READY_HANDSHAKE_CUT_THROUGH
com.esotericsoftware.kryo.Kryo: int copyDepth
com.esotericsoftware.kryo.util.ObjectMap$Entry: java.lang.Object key
org.conscrypt.SessionSnapshot: java.lang.String protocol
org.conscrypt.SSLParametersImpl: boolean useCipherSuitesOrder
com.esotericsoftware.kryo.serializers.FieldSerializer: com.esotericsoftware.kryo.serializers.FieldSerializer$CachedFieldFactory asmFieldFactory
com.esotericsoftware.kryo.util.IntMap: int PRIME2
androidx.recyclerview.widget.RecyclerView: int INVALID_POINTER
org.conscrypt.OpenSSLSignatureRawRSA: byte[] inputBuffer
com.esotericsoftware.reflectasm.AccessClassLoader: java.lang.reflect.Method defineClassMethod
org.conscrypt.EvpMdRef$SHA224: long EVP_MD
org.conscrypt.NativeCrypto: int GN_STACK_SUBJECT_ALT_NAME
org.conscrypt.ConscryptEngineSocket: org.conscrypt.ConscryptEngineSocket$SSLInputStream in
org.conscrypt.OpenSSLRSAPublicKey: java.math.BigInteger publicExponent
org.conscrypt.ConscryptEngine: boolean handshakeFinished
org.conscrypt.EvpMdRef$SHA256: long EVP_MD
com.esotericsoftware.kryo.serializers.FieldSerializer: com.esotericsoftware.kryo.serializers.FieldSerializerAnnotationsUtil annotationsUtil
com.esotericsoftware.kryo.io.Util: int MAX_SAFE_ARRAY_SIZE
com.esotericsoftware.minlog.Log: com.esotericsoftware.minlog.Log$Logger logger
com.esotericsoftware.kryo.Kryo: int NO_REF
org.conscrypt.FileClientSessionCache$Impl: java.lang.String[] initialFiles
org.conscrypt.OpenSSLCipher$Mode: org.conscrypt.OpenSSLCipher$Mode GCM
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_BIND_VIEW_TAG
org.conscrypt.ConscryptEngine: java.nio.ByteBuffer[] singleSrcBuffer
org.conscrypt.ConscryptEngineSocket$SSLOutputStream: java.lang.Object writeLock
org.conscrypt.OpenSSLX509CertPath: java.util.List mCertificates
com.esotericsoftware.kryo.util.UnsafeUtil: java.lang.reflect.Constructor directByteBufferConstr
com.esotericsoftware.kryo.io.Input: int limit
org.conscrypt.NativeConstants: int SSL_SIGN_RSA_PSS_RSAE_SHA512
org.conscrypt.ct.CTConstants: int SIGNATURE_TYPE_LENGTH
com.esotericsoftware.kryo.util.IdentityMap: int stashCapacity
org.conscrypt.ChainStrengthAnalyzer: int MIN_EC_FIELD_SIZE_BITS
androidx.recyclerview.widget.RecyclerView: boolean mItemsAddedOrRemoved
com.esotericsoftware.kryo.serializers.ExternalizableSerializer: com.esotericsoftware.kryo.io.KryoObjectInput objectInput
com.esotericsoftware.kryo.Kryo: java.util.ArrayList defaultSerializers
io.paperdb.KeyLocker: java.util.concurrent.Semaphore global
org.conscrypt.NativeConstants: int SSL_CB_HANDSHAKE_START
org.conscrypt.ConscryptEngine$1: org.conscrypt.ConscryptEngine this$0
org.conscrypt.OidData: java.util.Map OID_TO_NAME_MAP
com.esotericsoftware.kryo.util.IdentityObjectIntMap: int stashCapacity
org.conscrypt.OpenSSLECPublicKey: long serialVersionUID
org.conscrypt.NativeCrypto: java.lang.String TLS_FALLBACK_SCSV
com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField: com.esotericsoftware.reflectasm.FieldAccess access
androidx.recyclerview.widget.RecyclerView: int mScrollState
org.conscrypt.OpenSSLRSAPrivateKey: java.math.BigInteger privateExponent
org.conscrypt.ClientSessionContext: org.conscrypt.SSLClientSessionCache persistentCache
com.esotericsoftware.kryo.Kryo$DefaultInstantiatorStrategy$2: java.lang.reflect.Constructor val$constructor
org.conscrypt.ct.Serialization: int DER_LENGTH_LONG_FORM_FLAG
org.conscrypt.ConscryptEngine: java.nio.ByteBuffer lazyDirectBuffer
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
com.esotericsoftware.kryo.util.IntMap$MapIterator: boolean hasNext
com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField: boolean varIntsEnabled
org.conscrypt.EvpMdRef$SHA256: int SIZE_BYTES
org.conscrypt.ByteArray: int hashCode
androidx.customview.widget.ExploreByTouchHelper: int mHoveredVirtualViewId
org.conscrypt.NativeCrypto: java.lang.String[] SUPPORTED_PROTOCOLS
com.esotericsoftware.kryo.serializers.DefaultSerializers$CalendarSerializer: com.esotericsoftware.kryo.serializers.DefaultSerializers$TimeZoneSerializer timeZoneSerializer
org.conscrypt.OpenSSLProvider: java.lang.String STANDARD_RSA_PUBLIC_KEY_INTERFACE_CLASS_NAME
com.esotericsoftware.kryo.util.DefaultClassResolver: com.esotericsoftware.kryo.Kryo kryo
org.conscrypt.ConscryptEngineSocket: org.conscrypt.ConscryptEngineSocket$SSLOutputStream out
androidx.recyclerview.widget.RecyclerView: int VERTICAL
com.esotericsoftware.kryo.io.ByteBufferInput: boolean varIntsEnabled
org.conscrypt.OpenSSLRSAPrivateKey: boolean fetchedParams
org.conscrypt.OpenSSLKey: boolean wrapped
org.conscrypt.ConscryptServerSocket: org.conscrypt.SSLParametersImpl sslParameters
org.conscrypt.ConscryptEngineSocket$SSLOutputStream: org.conscrypt.ConscryptEngineSocket this$0
org.conscrypt.SessionSnapshot: java.lang.String requestedServerName
com.esotericsoftware.kryo.serializers.MapSerializer: java.lang.Class valueClass
androidx.recyclerview.widget.RecyclerView: int DEFAULT_ORIENTATION
androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow
com.esotericsoftware.kryo.util.DefaultClassResolver: byte NAME
com.esotericsoftware.kryo.io.UnsafeInput: boolean varIntsEnabled
org.conscrypt.NativeConstants: int SSL_SIGN_ECDSA_SHA1
org.conscrypt.CertificatePriorityComparator: java.lang.Integer PRIORITY_SHA384
org.conscrypt.ct.CertificateEntry$LogEntryType: org.conscrypt.ct.CertificateEntry$LogEntryType X509_ENTRY
androidx.recyclerview.widget.RecyclerView: boolean FORCE_INVALIDATE_DISPLAY_LIST
android.support.v4.os.ResultReceiver: android.os.Parcelable$Creator CREATOR
org.conscrypt.NativeCrypto: java.lang.String SUPPORTED_PROTOCOL_TLSV1_2
org.conscrypt.ct.SignedCertificateTimestamp: org.conscrypt.ct.SignedCertificateTimestamp$Version version
org.conscrypt.TrustManagerImpl: org.conscrypt.ConscryptHostnameVerifier hostnameVerifier
org.conscrypt.OpenSSLX509CertPath$Encoding: org.conscrypt.OpenSSLX509CertPath$Encoding PKI_PATH
com.esotericsoftware.kryo.util.DefaultClassResolver: java.lang.Class memoizedClass
org.conscrypt.SSLUtils: int MAX_ENCRYPTION_OVERHEAD_DIFF
org.conscrypt.ct.SignedCertificateTimestamp: long timestamp
org.conscrypt.ct.CTConstants: int ISSUER_KEY_HASH_LENGTH
org.conscrypt.ConscryptEngine: java.lang.String peerHostname
com.esotericsoftware.kryo.serializers.DefaultSerializers$BigDecimalSerializer: com.esotericsoftware.kryo.serializers.DefaultSerializers$BigIntegerSerializer bigIntegerSerializer
de.javakaffee.kryoserializers.GregorianCalendarSerializer: java.lang.reflect.Field _zoneField
com.esotericsoftware.kryo.util.MapReferenceResolver: java.util.ArrayList readObjects
org.conscrypt.ConscryptEngineSocket: org.conscrypt.BufferAllocator bufferAllocator
com.esotericsoftware.minlog.Log: boolean ERROR
org.conscrypt.NativeConstants: int SSL3_RT_APPLICATION_DATA
com.esotericsoftware.kryo.serializers.FieldSerializer: java.lang.Class unsafeUtilClass
androidx.recyclerview.widget.RecyclerView: float mScaledHorizontalScrollFactor
org.conscrypt.ConscryptFileDescriptorSocket: org.conscrypt.SessionSnapshot closedSession
com.esotericsoftware.kryo.serializers.FieldSerializerConfig: boolean fieldsCanBeNull
org.conscrypt.OpenSSLECGroupContext: org.conscrypt.NativeRef$EC_GROUP groupCtx
com.esotericsoftware.kryo.io.KryoObjectInput: com.esotericsoftware.kryo.Kryo kryo
org.conscrypt.OpenSSLX509CertPath: int PUSHBACK_SIZE
org.conscrypt.EvpMdRef$SHA224: java.lang.String JCA_NAME
org.conscrypt.NativeSslSession$Impl: java.lang.String cipherSuite
org.conscrypt.ActiveSession: java.lang.String peerHost
org.conscrypt.TrustedCertificateIndex: java.util.Map subjectToTrustAnchors
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection: de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection LIST
com.esotericsoftware.kryo.util.IntMap$Entry: java.lang.Object value
org.conscrypt.NativeCrypto: java.lang.String SUPPORTED_PROTOCOL_TLSV1
com.esotericsoftware.kryo.serializers.DeflateSerializer: com.esotericsoftware.kryo.Serializer serializer
org.conscrypt.ConscryptFileDescriptorSocket$1: org.conscrypt.ConscryptFileDescriptorSocket this$0
com.esotericsoftware.kryo.io.ByteBufferInputStream: java.nio.ByteBuffer byteBuffer
com.esotericsoftware.kryo.util.UnsafeUtil: long longArrayBaseOffset
org.conscrypt.NativeConstants: int EVP_PKEY_EC
org.conscrypt.Platform: java.lang.reflect.Method m_getCurveName
org.conscrypt.OpenSSLAeadCipherAES: int AES_BLOCK_SIZE
com.esotericsoftware.kryo.util.IntMap$MapIterator: int INDEX_ILLEGAL
de.javakaffee.kryoserializers.guava.ImmutableListSerializer: boolean DOES_NOT_ACCEPT_NULL
androidx.transition.ChangeBounds$7: androidx.transition.ChangeBounds$ViewBounds mViewBounds
com.esotericsoftware.kryo.serializers.Generics: java.util.Map typeVar2class
com.esotericsoftware.kryo.util.ObjectMap: int size
org.conscrypt.TrustManagerImpl: org.conscrypt.TrustedCertificateIndex intermediateIndex
org.conscrypt.EmptyArray: double[] DOUBLE
org.conscrypt.NativeConstants: int SSL3_RT_HANDSHAKE
org.conscrypt.SSLParametersImpl: java.lang.String[] enabledCipherSuites
org.conscrypt.EmptyArray: java.lang.Object[] OBJECT
org.conscrypt.PeerInfoProvider: org.conscrypt.PeerInfoProvider NULL_PEER_INFO_PROVIDER
org.conscrypt.CertificatePriorityComparator: java.lang.Integer PRIORITY_UNKNOWN
androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow
org.conscrypt.SessionSnapshot: byte[] peerTlsSctData
com.esotericsoftware.kryo.serializers.VersionFieldSerializer: int[] fieldVersion
com.esotericsoftware.kryo.serializers.DefaultSerializers$EnumSerializer: java.lang.Object[] enumConstants
org.conscrypt.NativeCrypto$Range: java.lang.String min
org.conscrypt.ConscryptFileDescriptorSocket: boolean DBG_STATE
org.conscrypt.Conscrypt$Version: int minor
android.support.v4.media.session.PlaybackStateCompat: android.os.Parcelable$Creator CREATOR
com.esotericsoftware.kryo.io.ByteBufferInput: java.nio.ByteOrder nativeOrder
org.conscrypt.Conscrypt$ProviderBuilder: boolean provideTrustManager
com.esotericsoftware.kryo.serializers.FieldSerializerConfig: com.esotericsoftware.kryo.serializers.FieldSerializer$CachedFieldNameStrategy cachedFieldNameStrategy
org.conscrypt.ByteArray: byte[] bytes
com.esotericsoftware.kryo.io.Output: int capacity
org.conscrypt.ChainStrengthAnalyzer: int MIN_RSA_MODULUS_LEN_BITS
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: android.os.Parcelable$Creator CREATOR
org.conscrypt.EvpMdRef$MD5: java.lang.String JCA_NAME
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection: java.lang.Class type
android.support.v4.media.session.PlaybackStateCompat$CustomAction: android.os.Parcelable$Creator CREATOR
com.esotericsoftware.minlog.Log: int level
org.conscrypt.OpenSSLCipherRSA: org.conscrypt.OpenSSLKey key
com.esotericsoftware.kryo.serializers.BeanSerializer$CachedProperty: java.lang.reflect.Method getMethod
org.conscrypt.SSLNullSession: long lastAccessedTime
androidx.appcompat.app.AppCompatViewInflater: java.lang.String[] sClassPrefixList
com.esotericsoftware.kryo.Kryo: int nextRegisterID
com.esotericsoftware.kryo.Kryo: java.lang.Object needsCopyReference
org.conscrypt.EvpMdRef$SHA512: long EVP_MD
org.conscrypt.ct.SignedCertificateTimestamp$Origin: org.conscrypt.ct.SignedCertificateTimestamp$Origin EMBEDDED
org.conscrypt.NativeConstants: int SSL_SIGN_ECDSA_SECP521R1_SHA512
org.conscrypt.SSLUtils: int MAX_ENCRYPTION_OVERHEAD_LENGTH
androidx.recyclerview.widget.RecyclerView: boolean mHasFixedSize
com.esotericsoftware.kryo.pool.SoftReferenceQueue: java.util.Queue delegate
org.conscrypt.ConscryptEngine: org.conscrypt.BufferAllocator bufferAllocator
org.conscrypt.SSLUtils$EngineStates: int STATE_CLOSED
org.conscrypt.OpenSSLECPublicKey: java.lang.String ALGORITHM
com.esotericsoftware.kryo.Registration: int id
com.esotericsoftware.reflectasm.MethodAccess: java.lang.String[] methodNames
org.conscrypt.ConscryptEngine: javax.net.ssl.SSLEngineResult NEED_UNWRAP_CLOSED
io.paperdb.BuildConfig: java.lang.String VERSION_NAME
com.esotericsoftware.kryo.io.Output: int maxCapacity
org.conscrypt.ct.SignedCertificateTimestamp: byte[] logId
org.conscrypt.AddressUtils: java.lang.String IP_PATTERN
org.conscrypt.ConscryptServerSocket: boolean channelIdEnabled
org.conscrypt.NativeSslSession$Impl: byte[] peerSignedCertificateTimestamp
org.conscrypt.ct.CertificateEntry$LogEntryType: org.conscrypt.ct.CertificateEntry$LogEntryType[] $VALUES
org.conscrypt.ct.DigitallySigned$SignatureAlgorithm: org.conscrypt.ct.DigitallySigned$SignatureAlgorithm ECDSA
org.conscrypt.TrustManagerImpl: org.conscrypt.ct.CTPolicy ctPolicy
org.conscrypt.ct.VerifiedSCT$Status: org.conscrypt.ct.VerifiedSCT$Status VALID
com.esotericsoftware.kryo.serializers.MapSerializer: boolean valuesCanBeNull
org.conscrypt.AbstractSessionContext: long sslCtxNativePointer
com.esotericsoftware.kryo.util.IdentityMap: int mask
com.esotericsoftware.kryo.util.IntMap: int EMPTY
com.esotericsoftware.kryo.serializers.BeanSerializer: com.esotericsoftware.kryo.serializers.BeanSerializer$CachedProperty[] properties
com.esotericsoftware.kryo.util.ObjectMap: boolean isBigTable
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection: java.lang.reflect.Field sourceCollectionField
org.conscrypt.ct.CTConstants: int SIGNATURE_ALGORITHM_LENGTH
org.conscrypt.ActiveSession: int peerPort
com.esotericsoftware.kryo.util.ListReferenceResolver: java.util.ArrayList seenObjects
org.conscrypt.ct.CTConstants: int HASH_ALGORITHM_LENGTH
org.conscrypt.OpenSSLRSAPrivateKey: java.math.BigInteger modulus
org.conscrypt.OpenSSLX509CertificateFactory: org.conscrypt.OpenSSLX509CertificateFactory$Parser certificateParser
com.esotericsoftware.kryo.serializers.JavaSerializer$ObjectInputStreamWithKryoClassLoader: java.lang.ClassLoader loader
org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker: java.util.Set SUPPORTED_EXTENSIONS
org.conscrypt.ConscryptEngine: javax.net.ssl.SSLEngineResult CLOSED_NOT_HANDSHAKING
org.conscrypt.ConscryptEngineSocket: java.lang.Object handshakeLock
org.conscrypt.NativeSslSession$Impl: java.security.cert.X509Certificate[] peerCertificates
de.javakaffee.kryoserializers.FieldAnnotationAwareSerializer$Factory: java.util.Collection marked
org.conscrypt.SSLNullSession: long creationTime
io.paperdb.DbStoragePlainFile$1: io.paperdb.DbStoragePlainFile this$0
androidx.recyclerview.widget.RecyclerView: int TOUCH_SLOP_PAGING
org.conscrypt.FileClientSessionCache: java.util.logging.Logger logger
com.esotericsoftware.kryo.serializers.MapSerializer: java.lang.Class keyGenericType
org.conscrypt.OpenSSLCipherRSA: int bufferOffset
org.conscrypt.KeyGeneratorImpl: java.lang.String algorithm
org.conscrypt.OpenSSLX509CertPath: byte[] PKCS7_MARKER
com.esotericsoftware.kryo.serializers.VersionFieldSerializer: int typeVersion
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper
com.google.android.material.datepicker.Month: android.os.Parcelable$Creator CREATOR
org.conscrypt.NativeCrypto: java.lang.String[] SUPPORTED_TLS_1_3_CIPHER_SUITES
org.conscrypt.NativeSslSession$Impl: byte[] peerOcspStapledResponse
org.conscrypt.KeyManagerImpl: java.util.HashMap hash
com.esotericsoftware.kryo.util.IntMap: int size
org.conscrypt.ct.CTConstants: java.lang.String OCSP_SCT_LIST_OID
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore mViewInfoStore
org.conscrypt.NativeCrypto: java.util.Set SUPPORTED_TLS_1_3_CIPHER_SUITES_SET
com.esotericsoftware.kryo.serializers.TaggedFieldSerializer: boolean[] deprecated
org.conscrypt.OpenSSLBIOSink: int position
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer: java.lang.reflect.Field SOURCE_MAP_FIELD
androidx.recyclerview.widget.RecyclerView: int[] NESTED_SCROLLING_ATTRS
org.conscrypt.ActiveSession: byte[] peerTlsSctData
org.conscrypt.OpenSSLBIOSink: long ctx
de.javakaffee.kryoserializers.FieldAnnotationAwareSerializer: boolean disregarding
org.conscrypt.TrustManagerImpl: java.security.cert.CertificateFactory factory
de.javakaffee.kryoserializers.guava.ImmutableMapSerializer$DummyEnum: de.javakaffee.kryoserializers.guava.ImmutableMapSerializer$DummyEnum VALUE1
org.conscrypt.AbstractSessionContext$2: org.conscrypt.NativeSslSession next
org.conscrypt.OpenSSLSignature: org.conscrypt.OpenSSLSignature$EngineType engineType
org.conscrypt.ConscryptEngineSocket$SSLOutputStream: java.nio.ByteBuffer target
android.support.v4.media.MediaBrowserCompat$MediaItem: android.os.Parcelable$Creator CREATOR
org.conscrypt.OpenSSLKey: org.conscrypt.NativeRef$EVP_PKEY ctx
com.esotericsoftware.kryo.util.IdentityObjectIntMap: int size
org.conscrypt.NativeConstants: int SSL_SIGN_RSA_PKCS1_SHA512
com.esotericsoftware.minlog.Log: boolean WARN
org.conscrypt.NativeSslSession$Impl: java.lang.String host
org.conscrypt.OpenSSLServerSocketFactoryImpl: java.io.IOException instantiationException
com.esotericsoftware.kryo.Kryo$DefaultInstantiatorStrategy: org.objenesis.strategy.InstantiatorStrategy fallbackStrategy
org.conscrypt.OpenSSLEvpCipherDESEDE$1: int[] $SwitchMap$org$conscrypt$OpenSSLCipher$Padding
com.esotericsoftware.kryo.serializers.TaggedFieldSerializerConfig: boolean skipUnknownTags
com.esotericsoftware.kryo.util.DefaultClassResolver: int memoizedClassId
com.esotericsoftware.kryo.util.DefaultClassResolver: com.esotericsoftware.kryo.util.IdentityObjectIntMap classToNameId
io.paperdb.Paper: java.lang.String DEFAULT_DB_NAME
org.conscrypt.SessionSnapshot: java.lang.String cipherSuite
org.conscrypt.KeyManagerFactoryImpl: char[] pwd
androidx.recyclerview.widget.RecyclerView: float mScaledVerticalScrollFactor
io.paperdb.Paper: android.content.Context mContext
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection: de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection RANDOM_ACCESS_LIST
org.conscrypt.SSLParametersImpl: org.conscrypt.ClientSessionContext clientSessionContext
androidx.recyclerview.widget.RecyclerView: int mLastTouchX
org.conscrypt.OpenSSLRSAPrivateCrtKey: long serialVersionUID
com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField: com.esotericsoftware.kryo.Serializer serializer
org.conscrypt.NativeCrypto: java.lang.String[] SUPPORTED_TLS_1_2_CIPHER_SUITES
org.conscrypt.AbstractSessionContext$1: org.conscrypt.AbstractSessionContext this$0
com.esotericsoftware.kryo.Kryo: int depth
org.conscrypt.NativeConstants: int SSL_OP_NO_TICKET
org.conscrypt.OpenSSLSocketFactoryImpl: boolean useEngineSocket
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer: boolean elementsCanBeNull
org.conscrypt.ClientSessionContext: java.util.Map sessionsByHostAndPort
org.conscrypt.ConscryptEngine: org.conscrypt.SessionSnapshot closedSession
com.esotericsoftware.kryo.util.Util: boolean isAndroid
com.esotericsoftware.kryo.serializers.EnumNameSerializer: java.lang.Class enumType
com.esotericsoftware.reflectasm.ConstructorAccess: boolean isNonStaticMemberClass
org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker: java.lang.String EKU_anyExtendedKeyUsage
org.conscrypt.SSLUtils$EngineStates: int STATE_HANDSHAKE_COMPLETED
com.esotericsoftware.kryo.serializers.FieldSerializer: java.lang.reflect.Method sortFieldsByOffsetMethod
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_CREATE_VIEW_TAG
androidx.recyclerview.widget.RecyclerView: boolean mIgnoreMotionEventTillDown
org.conscrypt.IvParameters: byte[] iv
org.conscrypt.ConscryptFileDescriptorSocket$SSLOutputStream: org.conscrypt.ConscryptFileDescriptorSocket this$0
org.conscrypt.BuildConfig: boolean DEBUG
org.conscrypt.ct.CTConstants: int LOGID_LENGTH
org.conscrypt.OpenSSLECPointContext: org.conscrypt.NativeRef$EC_POINT pointCtx
org.conscrypt.OpenSSLCipher$Padding: org.conscrypt.OpenSSLCipher$Padding PKCS5PADDING
com.esotericsoftware.kryo.serializers.FieldSerializer: com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField[] transientFields
org.conscrypt.OpenSSLMessageDigestJDK: org.conscrypt.NativeRef$EVP_MD_CTX ctx
org.conscrypt.X509PublicKey: long serialVersionUID
io.paperdb.DbStoragePlainFile: java.lang.ThreadLocal mKryo
org.conscrypt.OpenSSLMac: byte[] singleByte
org.conscrypt.ct.DigitallySigned$HashAlgorithm: org.conscrypt.ct.DigitallySigned$HashAlgorithm SHA512
org.conscrypt.OpenSSLECPointContext: org.conscrypt.OpenSSLECGroupContext group
com.esotericsoftware.kryo.serializers.FieldSerializerUnsafeUtilImpl: com.esotericsoftware.kryo.serializers.FieldSerializer serializer
com.esotericsoftware.kryo.util.IdentityMap: int hashShift
org.conscrypt.NativeConstants: int TLS1_1_VERSION
com.esotericsoftware.kryo.io.ByteBufferInput: java.nio.ByteBuffer niobuffer
com.esotericsoftware.kryo.serializers.BlowfishSerializer: com.esotericsoftware.kryo.Serializer serializer
org.conscrypt.EvpMdRef$SHA1: long EVP_MD
com.esotericsoftware.kryo.util.ObjectMap$MapIterator: boolean hasNext
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
org.conscrypt.BufferAllocator: org.conscrypt.BufferAllocator UNPOOLED
com.esotericsoftware.minlog.Log: boolean DEBUG
org.conscrypt.OpenSSLECPublicKey: org.conscrypt.OpenSSLKey key
de.javakaffee.kryoserializers.jodatime.IdentifiableChronology: de.javakaffee.kryoserializers.jodatime.IdentifiableChronology GREGORIAN
org.conscrypt.ct.Serialization: int DER_TAG_OCTET_STRING
com.esotericsoftware.kryo.Kryo: int lowPriorityDefaultSerializerCount
com.esotericsoftware.kryo.io.Input: int position
org.conscrypt.ExternalSession: org.conscrypt.ExternalSession$Provider provider
de.javakaffee.kryoserializers.guava.ImmutableSetSerializer$SomeEnum: de.javakaffee.kryoserializers.guava.ImmutableSetSerializer$SomeEnum C
org.conscrypt.SSLParametersImpl: byte[] ocspResponse
de.javakaffee.kryoserializers.guava.ImmutableMultimapSerializer: boolean DOES_NOT_ACCEPT_NULL
androidx.recyclerview.widget.RecyclerView: void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration,int)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
com.esotericsoftware.kryo.serializers.ObjectField: ObjectField(com.esotericsoftware.kryo.serializers.FieldSerializer)
org.conscrypt.ConscryptFileDescriptorSocket: void verifyCertificateChain(byte[][],java.lang.String)
androidx.recyclerview.widget.RecyclerView: boolean hasNestedScrollingParent()
com.esotericsoftware.kryo.serializers.DefaultSerializers$CollectionsSingletonMapSerializer: java.util.Map read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
de.javakaffee.kryoserializers.guava.ArrayListMultimapSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.ConscryptEngine: org.conscrypt.ConscryptSession access$000(org.conscrypt.ConscryptEngine)
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedScroll(int,int,int,int,int[],int)
org.conscrypt.KeyGeneratorImpl: javax.crypto.SecretKey engineGenerateKey()
org.conscrypt.OpenSSLCipherRSA: int engineGetBlockSize()
io.paperdb.DbStoragePlainFile: com.esotericsoftware.kryo.Kryo access$000(io.paperdb.DbStoragePlainFile,boolean)
androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()
org.conscrypt.Platform: dalvik.system.CloseGuard closeGuardGet()
org.conscrypt.NativeCrypto: boolean SSL_SESSION_should_be_single_use(long)
androidx.appcompat.widget.AppCompatButton: AppCompatButton(android.content.Context,android.util.AttributeSet)
org.conscrypt.ClientSessionContext: int size()
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: int getSoWriteTimeout()
com.esotericsoftware.kryo.util.IntArray: int pop()
org.conscrypt.OpenSSLMac: int engineGetMacLength()
com.esotericsoftware.kryo.serializers.TimeSerializers$ZoneIdSerializer: java.time.ZoneId read(com.esotericsoftware.kryo.io.Input)
com.esotericsoftware.kryo.util.ListReferenceResolver: ListReferenceResolver()
org.conscrypt.AbstractConscryptSocket: void connect(java.net.SocketAddress)
com.esotericsoftware.kryo.util.FastestStreamFactory: FastestStreamFactory()
org.conscrypt.OpenSSLX509Certificate: void checkValidity()
com.google.android.material.chip.Chip: void setCheckedIcon(android.graphics.drawable.Drawable)
de.javakaffee.kryoserializers.CollectionsSingletonSetSerializer: java.util.Set read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean)
com.esotericsoftware.kryo.io.Input: int readVarInt(boolean)
com.esotericsoftware.kryo.util.IdentityMap: boolean containsValue(java.lang.Object,boolean)
com.esotericsoftware.kryo.io.UnsafeOutput: void writeShorts(short[])
org.conscrypt.NativeCrypto: int EVP_MD_CTX_copy_ex(org.conscrypt.NativeRef$EVP_MD_CTX,org.conscrypt.NativeRef$EVP_MD_CTX)
com.esotericsoftware.kryo.io.UnsafeInput: int[] readInts(int)
com.esotericsoftware.kryo.serializers.TimeSerializers$LocalTimeSerializer: java.time.LocalTime read(com.esotericsoftware.kryo.io.Input)
org.conscrypt.SSLUtils: byte[] encodeProtocols(java.lang.String[])
de.javakaffee.kryoserializers.EnumMapSerializer: EnumMapSerializer()
org.conscrypt.OpenSSLSignature$EngineType: org.conscrypt.OpenSSLSignature$EngineType valueOf(java.lang.String)
com.esotericsoftware.kryo.serializers.FieldSerializer: com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField newMatchingCachedField(java.lang.reflect.Field,int,java.lang.Class,java.lang.reflect.Type,java.lang.Class[])
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeByteField: void read(com.esotericsoftware.kryo.io.Input,java.lang.Object)
com.esotericsoftware.kryo.serializers.DefaultSerializers$KryoSerializableSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setUseCompatPadding(boolean)
com.esotericsoftware.kryo.util.IdentityMap$Keys: void remove()
com.esotericsoftware.kryo.io.UnsafeInput: short[] readShorts(int)
org.conscrypt.NativeCrypto: int EVP_PKEY_decrypt(org.conscrypt.NativeRef$EVP_PKEY_CTX,byte[],int,byte[],int,int)
org.conscrypt.OpenSSLAeadCipherAES$GCM_SIV: long getEVP_AEAD(int)
com.esotericsoftware.kryo.util.IdentityMap$MapIterator: void remove()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: int getCollapsedSize()
org.conscrypt.OpenSSLCipherRSA$OAEP: void engineInit(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom)
org.conscrypt.OpenSSLRSAPrivateKey: java.lang.String toString()
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
org.conscrypt.ConscryptEngineSocket: javax.net.ssl.X509TrustManager getDelegatingTrustManager(javax.net.ssl.X509TrustManager,org.conscrypt.ConscryptEngineSocket)
org.conscrypt.ct.VerifiedSCT$Status: org.conscrypt.ct.VerifiedSCT$Status[] values()
com.esotericsoftware.kryo.serializers.DefaultSerializers$EnumSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
de.javakaffee.kryoserializers.dexx.SetSerializer: SetSerializer()
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
com.esotericsoftware.kryo.serializers.FieldSerializer: void setFixedFieldTypes(boolean)
com.esotericsoftware.kryo.serializers.OptionalSerializers$OptionalLongSerializer: OptionalSerializers$OptionalLongSerializer()
org.conscrypt.OpenSSLX509Certificate: boolean[] getKeyUsage()
com.esotericsoftware.kryo.serializers.FieldSerializerUnsafeUtilImpl: long getObjectFieldOffset(java.lang.reflect.Field)
com.google.android.material.chip.Chip: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
org.conscrypt.ct.Serialization: byte[] readFixedBytes(java.io.InputStream,int)
org.conscrypt.OpenSSLMessageDigestJDK: int engineGetDigestLength()
org.conscrypt.Conscrypt: java.lang.String getApplicationProtocol(javax.net.ssl.SSLSocket)
org.conscrypt.NativeRef$EVP_PKEY: NativeRef$EVP_PKEY(long)
com.esotericsoftware.kryo.util.DefaultClassResolver: void writeName(com.esotericsoftware.kryo.io.Output,java.lang.Class,com.esotericsoftware.kryo.Registration)
de.javakaffee.kryoserializers.guava.ReverseListSerializer: java.lang.Object copy(com.esotericsoftware.kryo.Kryo,java.lang.Object)
org.conscrypt.OpenSSLEvpCipherDESEDE: void checkSupportedKeySize(int)
com.esotericsoftware.kryo.serializers.OptionalSerializers$OptionalSerializer: OptionalSerializers$OptionalSerializer()
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmStringField: void read(com.esotericsoftware.kryo.io.Input,java.lang.Object)
org.conscrypt.SSLUtils: java.lang.String toProtocolString(byte[])
org.conscrypt.ConscryptEngineSocket$SSLOutputStream: void access$300(org.conscrypt.ConscryptEngineSocket$SSLOutputStream)
org.conscrypt.DefaultSSLContextImpl$TLSv13: DefaultSSLContextImpl$TLSv13()
com.esotericsoftware.kryo.util.MapReferenceResolver: void setReadObject(int,java.lang.Object)
com.esotericsoftware.kryo.serializers.DefaultSerializers$LocaleSerializer: boolean isSameLocale(java.util.Locale,java.lang.String,java.lang.String,java.lang.String)
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior(android.content.Context,android.util.AttributeSet)
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmLongField: AsmCacheFields$AsmLongField()
org.conscrypt.ApplicationProtocolSelectorAdapter: ApplicationProtocolSelectorAdapter(javax.net.ssl.SSLEngine,org.conscrypt.ApplicationProtocolSelector)
com.esotericsoftware.kryo.serializers.ObjectField$ObjectBooleanField: ObjectField$ObjectBooleanField(com.esotericsoftware.kryo.serializers.FieldSerializer)
com.google.android.material.button.MaterialButton: void setIconResource(int)
org.conscrypt.DuckTypedPSKKeyManager: java.lang.String chooseServerKeyIdentityHint(javax.net.ssl.SSLEngine)
org.conscrypt.NativeCrypto: byte[] HMAC_Final(org.conscrypt.NativeRef$HMAC_CTX)
androidx.appcompat.app.AppCompatViewInflater: android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean)
org.conscrypt.ConscryptFileDescriptorSocket: void finalize()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeLongField: void copy(java.lang.Object,java.lang.Object)
com.esotericsoftware.kryo.io.ByteBufferInput: ByteBufferInput(java.nio.ByteBuffer)
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
androidx.recyclerview.widget.RecyclerView: void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean)
io.paperdb.DbStoragePlainFile: void writeTableFile(java.lang.String,io.paperdb.PaperTable,java.io.File,java.io.File)
org.conscrypt.Conscrypt: org.conscrypt.OpenSSLServerSocketFactoryImpl toConscrypt(javax.net.ssl.SSLServerSocketFactory)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$DoubleArraySerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.serializers.VersionFieldSerializer: void removeField(com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField)
com.esotericsoftware.kryo.io.InputChunked: void setInputStream(java.io.InputStream)
org.conscrypt.NativeSsl: org.conscrypt.NativeSsl newInstance(org.conscrypt.SSLParametersImpl,org.conscrypt.NativeCrypto$SSLHandshakeCallbacks,org.conscrypt.SSLParametersImpl$AliasChooser,org.conscrypt.SSLParametersImpl$PSKCallbacks)
com.esotericsoftware.kryo.io.ByteBufferInput: char[] readChars(int)
org.conscrypt.NativeCrypto: int RSA_public_encrypt(int,byte[],byte[],org.conscrypt.NativeRef$EVP_PKEY,int)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
org.conscrypt.OpenSSLCipherRSA$OAEP: OpenSSLCipherRSA$OAEP(long,int)
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection$3: SynchronizedCollectionsSerializer$SynchronizedCollection$3(java.lang.String,int,java.lang.Class,java.lang.reflect.Field)
org.conscrypt.CertificatePriorityComparator: int compare(java.security.cert.X509Certificate,java.security.cert.X509Certificate)
org.conscrypt.Java8EngineWrapper: byte[] exportKeyingMaterial(java.lang.String,byte[],int)
org.conscrypt.SSLParametersImpl: byte[] getOCSPResponse()
com.esotericsoftware.kryo.serializers.TimeSerializers$ZoneIdSerializer: void write(com.esotericsoftware.kryo.io.Output,java.time.ZoneId)
org.conscrypt.NativeCrypto: void SSL_free(long,org.conscrypt.NativeSsl)
org.conscrypt.ExternalSession: void putValue(javax.net.ssl.SSLSession,java.lang.String,java.lang.Object)
org.conscrypt.PeerInfoProvider$1: PeerInfoProvider$1()
com.esotericsoftware.kryo.io.UnsafeMemoryInput: UnsafeMemoryInput(java.nio.ByteBuffer)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.esotericsoftware.kryo.serializers.DefaultSerializers$DoubleSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.util.IdentityMap$Entries: void reset()
de.javakaffee.kryoserializers.DateSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.recyclerview.widget.RecyclerView: long getNanoTime()
org.conscrypt.NativeCrypto: java.lang.String EC_GROUP_get_curve_name(org.conscrypt.NativeRef$EC_GROUP)
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
org.conscrypt.OpenSSLServerSocketFactoryImpl: java.net.ServerSocket createServerSocket(int,int,java.net.InetAddress)
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection: java.lang.reflect.Field access$000(de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection)
org.conscrypt.Java7ExtendedSSLSession: int getPacketBufferSize()
org.conscrypt.Java8EngineWrapper: javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer[],int,int,java.nio.ByteBuffer[],int,int)
com.esotericsoftware.kryo.io.UnsafeInput: UnsafeInput(byte[],int,int)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: void setTcpNoDelay(boolean)
org.conscrypt.SSLNullSession: boolean isValid()
org.conscrypt.Platform: org.conscrypt.ConscryptEngineSocket createEngineSocket(java.net.Socket,java.lang.String,int,boolean,org.conscrypt.SSLParametersImpl)
org.conscrypt.AbstractConscryptSocket: org.conscrypt.PeerInfoProvider peerInfoProvider()
com.esotericsoftware.reflectasm.FieldAccess: long getLong(java.lang.Object,int)
org.conscrypt.NativeCrypto: void SSL_set_connect_state(long,org.conscrypt.NativeSsl)
org.conscrypt.AbstractConscryptSocket: void setReuseAddress(boolean)
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.serializers.TaggedFieldSerializerConfig getTaggedFieldSerializerConfig()
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.esotericsoftware.kryo.serializers.OptionalSerializers$OptionalIntSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.util.OptionalInt)
com.esotericsoftware.kryo.serializers.TimeSerializers$MonthDaySerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.time.MonthDay)
com.esotericsoftware.kryo.util.IdentityMap: java.lang.String toString()
androidx.recyclerview.widget.RecyclerView: void clearOnScrollListeners()
org.conscrypt.ActiveSession: boolean isValid()
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.esotericsoftware.kryo.util.IdentityMap$Entries: IdentityMap$Entries(com.esotericsoftware.kryo.util.IdentityMap)
org.conscrypt.SSLParametersImpl: org.conscrypt.ApplicationProtocolSelectorAdapter getApplicationProtocolSelector()
androidx.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
org.conscrypt.NativeCrypto: long EVP_PKEY_new_EC_KEY(org.conscrypt.NativeRef$EC_GROUP,org.conscrypt.NativeRef$EC_POINT,byte[])
org.conscrypt.NativeCrypto: java.lang.String[] checkEnabledCipherSuites(java.lang.String[])
org.conscrypt.TrustManagerImpl: void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String,java.net.Socket)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipDrawable()
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
com.esotericsoftware.kryo.StreamFactory: com.esotericsoftware.kryo.io.Output getOutput(byte[])
org.conscrypt.ConscryptEngine: int writeEncryptedDataHeap(java.nio.ByteBuffer,int,int)
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer: void registerSerializers(com.esotericsoftware.kryo.Kryo)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$IntArraySerializer: int[] copy(com.esotericsoftware.kryo.Kryo,int[])
org.conscrypt.AbstractSessionContext: void finalize()
de.javakaffee.kryoserializers.ArraysAsListSerializer: java.lang.Class getPrimitiveWrapperClass(java.lang.Class)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZ(float)
org.conscrypt.AbstractConscryptSocket: javax.net.ssl.SSLSession getActiveSession()
org.conscrypt.OpenSSLECPrivateKey: OpenSSLECPrivateKey(java.security.spec.ECPrivateKeySpec)
com.esotericsoftware.kryo.DefaultSerializer: java.lang.Class value()
org.conscrypt.OpenSSLSignature: void checkEngineType(org.conscrypt.OpenSSLKey)
org.conscrypt.SSLNullSession$DefaultHolder: SSLNullSession$DefaultHolder()
org.conscrypt.SSLParametersImpl: void setApplicationProtocols(java.lang.String[])
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection$6: SynchronizedCollectionsSerializer$SynchronizedCollection$6(java.lang.String,int,java.lang.Class,java.lang.reflect.Field)
de.javakaffee.kryoserializers.dexx.ListSerializer: com.github.andrewoma.dexx.collection.List read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.OpenSSLBIOSource: void release()
androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
org.conscrypt.ConscryptSession: java.security.cert.X509Certificate[] getPeerCertificates()
com.esotericsoftware.kryo.io.Output: void writeAscii_slow(java.lang.String,int)
com.esotericsoftware.reflectasm.FieldAccess: void insertGetString(org.objectweb.asm.ClassWriter,java.lang.String,java.util.ArrayList)
org.conscrypt.NativeSsl: void enablePSKKeyManagerIfRequested()
org.conscrypt.OpenSSLEvpCipherDESEDE$CBC$PKCS5Padding: OpenSSLEvpCipherDESEDE$CBC$PKCS5Padding()
org.conscrypt.ct.SignedCertificateTimestamp$Version: SignedCertificateTimestamp$Version(java.lang.String,int)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.google.android.material.chip.Chip: void setMinLines(int)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCheckedIconTint()
com.google.android.material.internal.NavigationMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.esotericsoftware.kryo.util.IdentityMap$Entries: java.util.Iterator iterator()
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundMode(int)
org.conscrypt.Conscrypt: org.conscrypt.Conscrypt$ProviderBuilder newProviderBuilder()
org.conscrypt.NativeCrypto$SSLHandshakeCallbacks: void serverCertificateRequested()
org.conscrypt.Platform: org.conscrypt.ConscryptFileDescriptorSocket createFileDescriptorSocket(org.conscrypt.SSLParametersImpl)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28)
com.google.android.material.internal.FlowLayout: int getLineSpacing()
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(android.graphics.drawable.Drawable)
androidx.cardview.widget.CardView: void setCardBackgroundColor(android.content.res.ColorStateList)
org.conscrypt.OpenSSLX509CertificateFactory$2: org.conscrypt.OpenSSLX509CRL fromX509DerInputStream(java.io.InputStream)
com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSizeDimension()
com.google.android.material.card.MaterialCardView: int getStrokeColor()
com.esotericsoftware.kryo.serializers.DefaultSerializers$LocaleSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextAppearance(int)
org.conscrypt.OpenSSLSocketFactoryImpl: OpenSSLSocketFactoryImpl(org.conscrypt.SSLParametersImpl)
org.conscrypt.ConscryptFileDescriptorSocket: boolean getWantClientAuth()
com.google.android.material.internal.NavigationMenuItemView: void setChecked(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevation(float)
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
org.conscrypt.OpenSSLProvider: void putMacImplClass(java.lang.String,java.lang.String)
de.javakaffee.kryoserializers.KryoReflectionFactorySupport: java.lang.Object newInstanceFrom(java.lang.reflect.Constructor)
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.OpenSSLSignature: void engineSetParameter(java.lang.String,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(int)
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontal(int)
org.conscrypt.Conscrypt: boolean isConscrypt(javax.net.ssl.TrustManager)
org.conscrypt.OpenSSLECPrivateKey: int hashCode()
com.esotericsoftware.kryo.KryoException: KryoException()
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: void setSSLParameters(javax.net.ssl.SSLParameters)
org.conscrypt.AbstractSessionContext: javax.net.ssl.SSLSession getSession(byte[])
org.conscrypt.OpenSSLSocketImpl: void setReceiveBufferSize(int)
org.conscrypt.Platform: org.conscrypt.GCMParameters fromGCMParameterSpec(java.security.spec.AlgorithmParameterSpec)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
org.conscrypt.NativeCrypto: long RSA_generate_key_ex(int,byte[])
org.conscrypt.DefaultSSLContextImpl: void engineInit(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
org.conscrypt.ExternalSession: java.lang.String[] getValueNames()
com.google.android.material.card.MaterialCardView: void setChecked(boolean)
org.conscrypt.ConscryptEngine: javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer[],java.nio.ByteBuffer[])
androidx.recyclerview.widget.RecyclerView: boolean didChildRangeChange(int,int)
com.esotericsoftware.kryo.util.IdentityMap$Entry: java.lang.String toString()
org.conscrypt.ConscryptEngineSocket: javax.net.ssl.SSLSession getActiveSession()
com.esotericsoftware.kryo.util.FastestStreamFactory: com.esotericsoftware.kryo.io.Input getInput(java.io.InputStream)
com.esotericsoftware.kryo.serializers.VersionFieldSerializer: void removeField(java.lang.String)
com.esotericsoftware.kryo.serializers.DefaultSerializers$TreeMapSerializer: java.util.TreeMap createTreeMap(java.lang.Class,java.util.Comparator)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: void setAlpnProtocols(byte[])
org.conscrypt.OidData: java.lang.String oidToAlgorithmName(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setErrorTextColor(android.content.res.ColorStateList)
org.conscrypt.NativeCrypto: byte[] X509_get_subject_name(long,org.conscrypt.OpenSSLX509Certificate)
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: void setTcpNoDelay(boolean)
org.conscrypt.NativeCrypto: long SSL_set_timeout(long,org.conscrypt.NativeSsl,long)
com.esotericsoftware.kryo.serializers.OptionalSerializers$OptionalLongSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
androidx.recyclerview.widget.RecyclerView: void fillRemainingScrollValues(androidx.recyclerview.widget.RecyclerView$State)
org.conscrypt.OpenSSLAeadCipherAES$GCM$AES_256: void checkSupportedKeySize(int)
io.paperdb.Paper: io.paperdb.Book book()
androidx.cardview.widget.CardView: float getRadius()
org.conscrypt.TrustedCertificateIndex: TrustedCertificateIndex(java.util.Set)
com.esotericsoftware.kryo.serializers.OptionalSerializers$OptionalDoubleSerializer: OptionalSerializers$OptionalDoubleSerializer()
org.conscrypt.NativeCrypto: void SSL_enable_tls_channel_id(long,org.conscrypt.NativeSsl)
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
org.conscrypt.AbstractConscryptSocket: void setHostname(java.lang.String)
org.conscrypt.OpenSSLX509CertificateFactory$2: java.lang.Object fromX509DerInputStream(java.io.InputStream)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
com.esotericsoftware.kryo.util.UnsafeUtil: sun.misc.Unsafe unsafe()
org.conscrypt.Java8EngineWrapper: java.lang.String[] getEnabledCipherSuites()
org.conscrypt.OpenSSLX509CertificateFactory$Parser: OpenSSLX509CertificateFactory$Parser(org.conscrypt.OpenSSLX509CertificateFactory$1)
org.conscrypt.SSLParametersImpl$AliasChooser: java.lang.String chooseServerAlias(javax.net.ssl.X509KeyManager,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
androidx.appcompat.widget.Toolbar: void setTitle(int)
org.conscrypt.Conscrypt: org.conscrypt.OpenSSLSocketFactoryImpl toConscrypt(javax.net.ssl.SSLSocketFactory)
org.conscrypt.OpenSSLAeadCipher: int engineDoFinal(byte[],int,int,byte[],int)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: int getTrafficClass()
org.conscrypt.NativeSslSession: byte[] getPeerOcspStapledResponse()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatAutoCompleteTextView createAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
org.conscrypt.OpenSSLRSAKeyFactory: OpenSSLRSAKeyFactory()
org.conscrypt.SSLParametersImpl: java.lang.String getEndpointIdentificationAlgorithm()
com.google.android.material.textfield.TextInputLayout: int getHelperTextCurrentTextColor()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.recyclerview.widget.RecyclerView: java.lang.String getFullClassName(android.content.Context,java.lang.String)
org.conscrypt.OpenSSLX509CertificateFactory$Parser: java.lang.Object fromX509PemInputStream(java.io.InputStream)
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeDoubleField: void copy(java.lang.Object,java.lang.Object)
org.conscrypt.OpenSSLCipher: int engineGetKeySize(java.security.Key)
com.google.android.material.card.MaterialCardView: void setPreventCornerOverlap(boolean)
org.conscrypt.NativeSslSession: byte[] getOcspResponse(org.conscrypt.ConscryptSession)
org.conscrypt.SessionSnapshot: java.lang.String[] getValueNames()
com.esotericsoftware.kryo.util.DefaultStreamFactory: void setKryo(com.esotericsoftware.kryo.Kryo)
com.esotericsoftware.kryo.serializers.DefaultSerializers$URLSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.AbstractConscryptSocket: int getPort()
org.conscrypt.ConscryptEngine: javax.net.ssl.SSLEngineResult$HandshakeStatus getHandshakeStatus()
com.esotericsoftware.kryo.util.IdentityMap: void clear()
org.conscrypt.NativeCrypto: void EVP_DigestSignUpdateDirect(org.conscrypt.NativeRef$EVP_MD_CTX,long,int)
com.esotericsoftware.kryo.serializers.FieldSerializerConfig: boolean isFixedFieldTypes()
com.esotericsoftware.kryo.io.Input: short readShort()
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: boolean getWantClientAuth()
com.esotericsoftware.kryo.util.IdentityObjectIntMap: int hash3(int)
org.conscrypt.ConscryptServerSocket: boolean getNeedClientAuth()
com.esotericsoftware.kryo.serializers.FieldSerializerUnsafeUtil: long getObjectFieldOffset(java.lang.reflect.Field)
org.conscrypt.BufferAllocator: org.conscrypt.BufferAllocator unpooled()
org.conscrypt.ActiveSession: java.lang.String[] getValueNames()
org.conscrypt.OpenSSLCipher$Padding: org.conscrypt.OpenSSLCipher$Padding[] values()
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection: de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection[] values()
org.conscrypt.OpenSSLSignature: void engineUpdate(byte)
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
com.esotericsoftware.kryo.serializers.DefaultSerializers$LongSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.google.android.material.chip.Chip: void setChipTextResource(int)
com.esotericsoftware.kryo.Kryo$DefaultSerializerEntry: Kryo$DefaultSerializerEntry(java.lang.Class,com.esotericsoftware.kryo.factories.SerializerFactory)
com.esotericsoftware.kryo.serializers.DefaultSerializers$StringBufferSerializer: DefaultSerializers$StringBufferSerializer()
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScroll(boolean)
org.conscrypt.Java8EngineWrapper: java.util.function.BiFunction getHandshakeApplicationProtocolSelector()
com.esotericsoftware.kryo.serializers.TaggedFieldSerializer: void initializeCachedFields()
com.esotericsoftware.kryo.io.ByteBufferOutput: void writeShorts(short[])
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
de.javakaffee.kryoserializers.BitSetSerializer: java.util.BitSet read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.ConscryptEngine: void setChannelIdEnabled(boolean)
org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker: TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker(boolean,java.security.cert.X509Certificate)
com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.util.ObjectMap getGraphContext()
org.conscrypt.OpenSSLX509CertPath: java.security.cert.CertPath fromPkcs7Encoding(java.io.InputStream)
org.conscrypt.Conscrypt: javax.net.ssl.SSLEngineResult unwrap(javax.net.ssl.SSLEngine,java.nio.ByteBuffer[],java.nio.ByteBuffer[])
com.google.android.material.internal.NavigationMenuItemView: void setTitle(java.lang.CharSequence)
org.conscrypt.AbstractConscryptSocket: int getSoTimeout()
org.conscrypt.DefaultSSLContextImpl: DefaultSSLContextImpl(java.lang.String[],org.conscrypt.DefaultSSLContextImpl$1)
com.google.android.material.chip.Chip: void setSingleLine(boolean)
org.conscrypt.OpenSSLECPrivateKey: OpenSSLECPrivateKey(org.conscrypt.OpenSSLKey)
org.conscrypt.CertificatePriorityComparator: int compareKeySize(java.security.PublicKey,java.security.PublicKey)
com.esotericsoftware.kryo.io.ByteBufferOutput: boolean isNativeOrder()
org.conscrypt.Java8EngineWrapper: boolean getEnableSessionCreation()
org.conscrypt.ConscryptEngine: javax.net.ssl.SSLParameters getSSLParameters()
org.conscrypt.OpenSSLRSAPublicKey: java.math.BigInteger getModulus()
org.conscrypt.NativeCrypto: byte[][] get_RSA_public_params(org.conscrypt.NativeRef$EVP_PKEY)
com.esotericsoftware.reflectasm.FieldAccess: int getFieldCount()
org.conscrypt.NativeSsl: org.conscrypt.NativeSsl$BioWrapper newBio()
org.conscrypt.SSLClientSessionCache: void putSessionData(javax.net.ssl.SSLSession,byte[])
de.javakaffee.kryoserializers.CopyForIterateCollectionSerializer: CopyForIterateCollectionSerializer()
com.esotericsoftware.kryo.util.ObjectMap$MapIterator: void reset()
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ByteArraySerializer: DefaultArraySerializers$ByteArraySerializer()
com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleRoundedCornerRadius()
org.conscrypt.OpenSSLContextImpl: javax.net.ssl.SSLEngine engineCreateSSLEngine()
com.esotericsoftware.kryo.Kryo: org.objenesis.strategy.InstantiatorStrategy getInstantiatorStrategy()
io.paperdb.PaperDbException: PaperDbException(java.lang.String)
com.esotericsoftware.kryo.io.UnsafeOutput: boolean supportVarInts()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(int)
org.conscrypt.ConscryptEngineSocket: java.io.InputStream getInputStream()
org.conscrypt.AbstractConscryptSocket: boolean isConnected()
com.esotericsoftware.kryo.serializers.DefaultSerializers$CharSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.serializers.OptionalSerializers$OptionalLongSerializer: OptionalSerializers$OptionalLongSerializer(com.esotericsoftware.kryo.serializers.OptionalSerializers$1)
org.conscrypt.NativeCrypto: byte[] asn1_write_finish(long)
com.esotericsoftware.kryo.util.ListReferenceResolver: int addWrittenObject(java.lang.Object)
com.esotericsoftware.kryo.io.InputChunked: void rewind()
com.esotericsoftware.kryo.io.Input: java.lang.String readAscii_slow()
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.RecyclerView: void offsetPositionRecordsForRemove(int,int,boolean)
com.esotericsoftware.kryo.util.ObjectMap: java.lang.Object removeStash(java.lang.Object)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet)
com.esotericsoftware.kryo.util.IdentityMap: void resize(int)
com.esotericsoftware.kryo.serializers.VersionFieldSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageDrawable(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable()
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
org.conscrypt.Java8EngineWrapper: int maxSealOverhead()
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getStrokeColorStateList()
org.conscrypt.NativeSsl$BioWrapper: NativeSsl$BioWrapper(org.conscrypt.NativeSsl,org.conscrypt.NativeSsl$1)
org.conscrypt.ConscryptEngine: void setDefaultBufferAllocator(org.conscrypt.BufferAllocator)
com.google.android.material.appbar.AppBarLayout: int getMinimumHeightForVisibleOverlappingContent()
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: java.net.SocketAddress getLocalSocketAddress()
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior()
com.esotericsoftware.kryo.io.Output: void writeAscii(java.lang.String)
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeFloatField: void copy(java.lang.Object,java.lang.Object)
com.esotericsoftware.kryo.io.ByteBufferOutput: void writeAscii(java.lang.String)
org.conscrypt.Platform: void setParametersSniHostname(javax.net.ssl.SSLParameters,org.conscrypt.SSLParametersImpl,org.conscrypt.ConscryptEngine)
com.esotericsoftware.kryo.ReferenceResolver: void setKryo(com.esotericsoftware.kryo.Kryo)
io.paperdb.serializer.NoArgCollectionSerializer: NoArgCollectionSerializer()
com.esotericsoftware.kryo.io.ByteBufferOutput: void writeInts(int[])
com.esotericsoftware.kryo.util.IdentityMap: void shrink(int)
org.conscrypt.NativeCrypto$SSLHandshakeCallbacks: int selectApplicationProtocol(byte[])
org.conscrypt.ConscryptFileDescriptorSocket$SSLOutputStream: void awaitPendingOps()
com.esotericsoftware.kryo.io.ByteBufferOutput: ByteBufferOutput(java.io.OutputStream)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: int getTrafficClass()
org.conscrypt.OpenSSLSignatureRawECDSA: void engineUpdate(byte[],int,int)
de.javakaffee.kryoserializers.FieldAnnotationAwareSerializer: void rebuildCachedFields()
de.javakaffee.kryoserializers.guava.LinkedHashMultimapSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,com.google.common.collect.LinkedHashMultimap)
com.esotericsoftware.kryo.Kryo: java.lang.Object readClassAndObject(com.esotericsoftware.kryo.io.Input)
com.esotericsoftware.kryo.util.ObjectMap$Keys: java.lang.Object next()
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: void setSoWriteTimeout(int)
de.javakaffee.kryoserializers.guava.ImmutableMultimapSerializer: com.google.common.collect.ImmutableMultimap read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
androidx.recyclerview.widget.RecyclerView: void requestDisallowInterceptTouchEvent(boolean)
com.esotericsoftware.kryo.pool.SoftReferenceQueue: void clear()
org.conscrypt.OpenSSLSignatureRawECDSA: void engineUpdate(byte)
com.esotericsoftware.kryo.pool.KryoPool$Builder: java.lang.String toString()
com.esotericsoftware.reflectasm.FieldAccess: void insertSetObject(org.objectweb.asm.ClassWriter,java.lang.String,java.util.ArrayList)
org.conscrypt.ct.Serialization: byte[][] readList(byte[],int,int)
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmCharField: void copy(java.lang.Object,java.lang.Object)
org.conscrypt.Java8EngineSocket$1: java.lang.String selectApplicationProtocol(javax.net.ssl.SSLEngine,java.util.List)
org.conscrypt.OpenSSLKey: org.conscrypt.OpenSSLKey fromKeyMaterial(java.security.PrivateKey)
org.conscrypt.OpenSSLEvpCipherDESEDE: java.lang.String getBaseCipherName()
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeCharField: void write(com.esotericsoftware.kryo.io.Output,java.lang.Object)
de.javakaffee.kryoserializers.EnumSetSerializer: EnumSetSerializer()
org.conscrypt.Java8EngineWrapper: java.lang.Runnable getDelegatedTask()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintList(android.content.res.ColorStateList)
org.conscrypt.ConscryptEngineSocket: java.lang.String[] getSupportedCipherSuites()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemDecoration getItemDecorationAt(int)
org.conscrypt.Java8EngineWrapper: void setEnabledProtocols(java.lang.String[])
androidx.recyclerview.widget.RecyclerView: void requestLayout()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
org.conscrypt.Conscrypt: java.lang.String[] getApplicationProtocols(javax.net.ssl.SSLEngine)
com.esotericsoftware.kryo.util.IntMap: java.lang.Object getStash(int,java.lang.Object)
org.conscrypt.NativeSsl: int writeDirectByteBuffer(long,int)
org.conscrypt.ConscryptFileDescriptorSocket: void setUseClientMode(boolean)
com.google.android.material.textfield.TextInputLayout: int getEndIconMode()
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer: java.lang.Object copy(com.esotericsoftware.kryo.Kryo,java.lang.Object)
org.conscrypt.OpenSSLAeadCipherAES: java.security.spec.AlgorithmParameterSpec getParameterSpec(java.security.AlgorithmParameters)
de.javakaffee.kryoserializers.URISerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.util.IntMap: boolean containsKeyStash(int)
org.conscrypt.SessionSnapshot: java.util.List getStatusResponses()
org.conscrypt.NativeCrypto: void X509_REVOKED_print(long,long)
org.conscrypt.OpenSSLEvpCipher: void reset()
org.conscrypt.CryptoUpcalls: CryptoUpcalls()
com.esotericsoftware.kryo.serializers.ExternalizableSerializer: java.io.ObjectInput getObjectInput(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input)
org.conscrypt.NativeCrypto: int ENGINE_SSL_write_BIO_direct(long,org.conscrypt.NativeSsl,long,long,int,org.conscrypt.NativeCrypto$SSLHandshakeCallbacks)
com.google.android.material.chip.Chip: void setCloseIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
com.esotericsoftware.kryo.io.ByteBufferInput: ByteBufferInput(int)
com.esotericsoftware.kryo.serializers.OptionalSerializers: void addDefaultSerializers(com.esotericsoftware.kryo.Kryo)
org.conscrypt.AbstractConscryptSocket: java.io.OutputStream getOutputStream()
com.google.android.material.chip.Chip: void setTextAppearanceResource(int)
org.conscrypt.ConscryptEngineSocket$SSLInputStream: boolean isHandshaking(javax.net.ssl.SSLEngineResult$HandshakeStatus)
org.conscrypt.TrustManagerImpl: void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String)
com.google.android.material.chip.Chip: void setCloseIconPressed(boolean)
io.paperdb.DbStoragePlainFile: boolean existsInternal(java.lang.String)
org.conscrypt.Conscrypt: void checkAvailability()
org.conscrypt.ExternalSession: java.security.cert.X509Certificate[] getPeerCertificates()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView createMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
org.conscrypt.Java7ExtendedSSLSession: java.lang.String getCipherSuite()
org.conscrypt.AbstractConscryptSocket: void setApplicationProtocolSelector(org.conscrypt.ApplicationProtocolSelector)
org.conscrypt.AbstractConscryptEngine: void setApplicationProtocolSelector(org.conscrypt.ApplicationProtocolSelector)
org.conscrypt.KeyGeneratorImpl$ARC4: void checkKeySize(int)
org.conscrypt.OpenSSLAeadCipher: void checkSupportedTagLength(int)
com.esotericsoftware.kryo.serializers.VersionFieldSerializer: VersionFieldSerializer(com.esotericsoftware.kryo.Kryo,java.lang.Class,boolean)
com.esotericsoftware.kryo.io.UnsafeOutput: UnsafeOutput(int)
org.conscrypt.ct.SerializationException: SerializationException(java.lang.String)
org.conscrypt.OpenSSLX509Certificate: java.security.Principal getSubjectDN()
org.conscrypt.NativeCrypto: void SSL_shutdown(long,org.conscrypt.NativeSsl,java.io.FileDescriptor,org.conscrypt.NativeCrypto$SSLHandshakeCallbacks)
org.conscrypt.NativeCrypto: byte[] EC_GROUP_get_order(org.conscrypt.NativeRef$EC_GROUP)
org.conscrypt.NativeCrypto: byte[] SSL_SESSION_session_id(long)
com.google.android.material.snackbar.SnackbarContentLayout: SnackbarContentLayout(android.content.Context,android.util.AttributeSet)
org.conscrypt.ConscryptEngine: java.lang.String chooseServerPSKIdentityHint(org.conscrypt.PSKKeyManager)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getBackgroundTintList()
org.conscrypt.AllocatedBuffer: java.nio.ByteBuffer nioBuffer()
org.conscrypt.ConscryptServerSocket: java.lang.String[] getSupportedCipherSuites()
androidx.recyclerview.widget.RecyclerView: void saveOldPositions()
com.esotericsoftware.kryo.io.Input: byte[] getBuffer()
com.esotericsoftware.reflectasm.ConstructorAccess: void insertNewInstance(org.objectweb.asm.ClassWriter,java.lang.String)
org.conscrypt.CertificatePriorityComparator: int compareKeyAlgorithm(java.security.PublicKey,java.security.PublicKey)
org.conscrypt.DuckTypedPSKKeyManager: java.lang.String chooseClientKeyIdentity(java.lang.String,javax.net.ssl.SSLEngine)
com.esotericsoftware.reflectasm.FieldAccess: int getInt(java.lang.Object,int)
org.conscrypt.PSSParameters: java.lang.String engineToString()
de.javakaffee.kryoserializers.CollectionsEmptyListSerializer: CollectionsEmptyListSerializer()
com.google.android.material.button.MaterialButton: void setIconTintResource(int)
com.google.android.material.chip.Chip: void setTextAppearance(int)
com.esotericsoftware.kryo.util.IntMap: IntMap(int,float)
com.esotericsoftware.kryo.pool.SoftReferenceQueue: java.lang.Object element()
com.esotericsoftware.kryo.io.OutputChunked: void flush()
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$StringArraySerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.String[])
com.esotericsoftware.reflectasm.FieldAccess: double getDouble(java.lang.Object,int)
de.javakaffee.kryoserializers.CollectionsEmptyListSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.serializers.CompatibleFieldSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.io.ByteBufferInputStream: java.nio.ByteBuffer getByteBuffer()
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
androidx.recyclerview.widget.RecyclerView: boolean isPreferredNextFocus(android.view.View,android.view.View,int)
com.esotericsoftware.kryo.io.UnsafeMemoryInput: char[] readChars(int)
com.esotericsoftware.kryo.io.ByteBufferOutput: void flush()
com.esotericsoftware.kryo.Kryo: int readReferenceOrNull(com.esotericsoftware.kryo.io.Input,java.lang.Class,boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleY(float)
com.esotericsoftware.kryo.util.IntMap: int hash3(int)
org.conscrypt.OpenSSLSignature: long getEVP_PKEY_CTX()
com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()
org.conscrypt.OpenSSLECPrivateKey: java.lang.String getFormat()
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ByteArraySerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$LongArraySerializer: java.lang.Object copy(com.esotericsoftware.kryo.Kryo,java.lang.Object)
com.esotericsoftware.kryo.serializers.TimeSerializers$InstantSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.time.Instant)
com.stronger.bankNotification.sms_receiver: sms_receiver()
org.conscrypt.FileClientSessionCache$Impl: java.util.Map newAccessOrder()
org.conscrypt.OpenSSLX509CertificateFactory$Parser: java.util.Collection generateItems(java.io.InputStream)
org.conscrypt.OpenSSLX509CRLEntry: byte[] getExtensionValue(java.lang.String)
org.conscrypt.AbstractConscryptSocket: void setPerformancePreferences(int,int,int)
org.conscrypt.ServerSessionContext: org.conscrypt.NativeSslSession getSessionFromPersistentCache(byte[])
com.esotericsoftware.kryo.io.ByteBufferInput: java.lang.String readAscii_slow()
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
org.conscrypt.PSSParameters: void engineInit(byte[])
org.conscrypt.NativeSsl: java.lang.String getRequestedServerName()
de.javakaffee.kryoserializers.jodatime.IdentifiableChronology: java.lang.String getId()
org.conscrypt.OpenSSLECDHKeyAgreement: javax.crypto.SecretKey engineGenerateSecret(java.lang.String)
org.conscrypt.OpenSSLECPublicKey: org.conscrypt.OpenSSLKey getOpenSSLKey()
org.conscrypt.OpenSSLContextImpl: void engineInit(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmByteField: AsmCacheFields$AsmByteField()
org.conscrypt.NativeRef: NativeRef(long)
com.esotericsoftware.kryo.io.Output: int writeDouble(double,double,boolean)
org.conscrypt.NativeCrypto: java.lang.String asn1_read_oid(long)
androidx.recyclerview.widget.RecyclerView: boolean isComputingLayout()
org.conscrypt.OpenSSLCipherRSA: byte[] engineWrap(java.security.Key)
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
org.conscrypt.NativeSslSession$Impl$1: java.lang.String getPeerHost()
com.esotericsoftware.kryo.serializers.DefaultSerializers$BigIntegerSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.serializers.GenericsResolver getGenericsResolver()
org.conscrypt.OpenSSLX509Certificate: org.conscrypt.OpenSSLX509Certificate fromX509DerInputStream(java.io.InputStream)
org.conscrypt.ConscryptEngine$2: ConscryptEngine$2(org.conscrypt.ConscryptEngine)
org.conscrypt.NativeCrypto: byte[] get_X509_CRL_signature(long,org.conscrypt.OpenSSLX509CRL)
org.conscrypt.OpenSSLRSAPrivateKey: org.conscrypt.OpenSSLKey getOpenSSLKey()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getRippleColorStateList()
com.esotericsoftware.kryo.serializers.UnsafeCachedFieldFactory: UnsafeCachedFieldFactory()
com.esotericsoftware.reflectasm.PublicConstructorAccess: PublicConstructorAccess()
com.esotericsoftware.kryo.factories.PseudoSerializerFactory: PseudoSerializerFactory(com.esotericsoftware.kryo.Serializer)
org.conscrypt.OpenSSLCipher: void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)
org.conscrypt.OpenSSLSocketImpl: java.net.InetAddress getInetAddress()
org.conscrypt.Conscrypt: void setClientSessionCache(javax.net.ssl.SSLContext,org.conscrypt.SSLClientSessionCache)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: void setHelperTextTextAppearance(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setElevation(float)
io.paperdb.DbStoragePlainFile: void destroy()
androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()
com.esotericsoftware.kryo.io.KryoDataInput: char readChar()
com.esotericsoftware.kryo.serializers.TaggedFieldSerializer$1: TaggedFieldSerializer$1()
com.esotericsoftware.kryo.io.Output: void setBuffer(byte[])
androidx.cardview.widget.CardView: int getContentPaddingRight()
com.esotericsoftware.kryo.io.UnsafeMemoryInput: long readLong()
org.conscrypt.ConscryptEngineSocket: void access$1000(org.conscrypt.ConscryptEngineSocket)
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
com.esotericsoftware.kryo.serializers.ObjectField$ObjectIntField: java.lang.Object getField(java.lang.Object)
org.conscrypt.ConscryptFileDescriptorSocket$2: org.conscrypt.ConscryptSession provideSession()
org.conscrypt.ConscryptEngineSocket$SSLInputStream: ConscryptEngineSocket$SSLInputStream(org.conscrypt.ConscryptEngineSocket)
com.esotericsoftware.kryo.util.IdentityMap: java.lang.Object get(java.lang.Object)
de.javakaffee.kryoserializers.GregorianCalendarSerializer: java.util.GregorianCalendar copy(com.esotericsoftware.kryo.Kryo,java.util.GregorianCalendar)
com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.Registration register(java.lang.Class,com.esotericsoftware.kryo.Serializer,int)
org.conscrypt.Java8EngineWrapper: java.lang.String getHostname()
de.javakaffee.kryoserializers.jodatime.IdentifiableChronology: org.joda.time.Chronology readChronology(com.esotericsoftware.kryo.io.Input)
androidx.appcompat.widget.ScrollingTabContainerView: void setTabSelected(int)
org.conscrypt.ConscryptEngine: boolean getUseClientMode()
de.javakaffee.kryoserializers.dexx.SetSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.serializers.DefaultSerializers$TreeMapSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.util.Map)
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
org.conscrypt.SSLParametersImpl: boolean getEnableSessionCreation()
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector[] values()
com.esotericsoftware.kryo.serializers.DefaultSerializers$BooleanSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.SessionSnapshot: int getPeerPort()
org.conscrypt.KeyManagerImpl: java.lang.String chooseClientAlias(java.lang.String[],java.security.Principal[],java.net.Socket)
androidx.recyclerview.widget.RecyclerView: void resetScroll()
de.javakaffee.kryoserializers.guava.ReverseListSerializer$ReverseList: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.OpenSSLRSAPublicKey: org.conscrypt.OpenSSLKey getInstance(java.security.interfaces.RSAPublicKey)
org.conscrypt.NativeSslSession$Impl$1: java.security.Principal getPeerPrincipal()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatSpinner createSpinner(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
org.conscrypt.NativeCrypto: long EVP_CIPHER_CTX_new()
com.esotericsoftware.kryo.util.ObjectMap: void putResize(java.lang.Object,java.lang.Object)
org.conscrypt.NativeCrypto: int SSL_get_signature_algorithm_key_type(int)
org.conscrypt.SSLParametersImpl: org.conscrypt.SSLParametersImpl getDefault()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
com.esotericsoftware.kryo.io.InputChunked: int fill(byte[],int,int)
org.conscrypt.OpenSSLSocketImpl: void setUseSessionTickets(boolean)
de.javakaffee.kryoserializers.CollectionsEmptySetSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.serializers.FieldSerializerConfig: void setIgnoreSyntheticFields(boolean)
org.conscrypt.NativeCrypto: long EC_GROUP_get_generator(org.conscrypt.NativeRef$EC_GROUP)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$BooleanArraySerializer: DefaultArraySerializers$BooleanArraySerializer()
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
com.esotericsoftware.kryo.serializers.FieldSerializerConfig: void setCopyTransient(boolean)
org.conscrypt.TrustedCertificateIndex: java.util.Set findAllByIssuerAndSignature(java.security.cert.X509Certificate)
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer: java.lang.reflect.Field access$300()
com.esotericsoftware.kryo.serializers.FieldSerializer: boolean getCopyTransient()
org.conscrypt.TrustManagerImpl: void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String)
org.conscrypt.AbstractConscryptEngine: javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[],int,int)
org.conscrypt.NativeSsl: byte[] getPeerTlsSctData()
org.conscrypt.OpenSSLX509CertificateFactory: java.util.Iterator engineGetCertPathEncodings()
org.conscrypt.OpenSSLECKeyPairGenerator: OpenSSLECKeyPairGenerator()
com.esotericsoftware.kryo.io.UnsafeMemoryInput: UnsafeMemoryInput(java.io.InputStream)
org.conscrypt.NativeCrypto: int X509_NAME_hash(javax.security.auth.x500.X500Principal,java.lang.String)
org.conscrypt.OpenSSLMac$HmacSHA224: OpenSSLMac$HmacSHA224()
androidx.recyclerview.widget.RecyclerView: boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
com.esotericsoftware.kryo.serializers.TimeSerializers$DurationSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.ActiveSession: void configurePeer(java.lang.String,int,java.security.cert.X509Certificate[])
com.esotericsoftware.kryo.io.UnsafeInput: UnsafeInput(int)
org.conscrypt.Java8EngineWrapper: javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[],java.nio.ByteBuffer)
org.conscrypt.NativeCrypto: int BIO_read(long,byte[])
org.conscrypt.Java7ExtendedSSLSession: java.lang.String[] getPeerSupportedSignatureAlgorithms()
org.conscrypt.NativeSsl$BioWrapper: int getPendingWrittenBytes()
org.conscrypt.OpenSSLECKeyFactory: java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)
org.conscrypt.TrustManagerFactoryImpl: TrustManagerFactoryImpl()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
org.conscrypt.Conscrypt$Version: Conscrypt$Version(int,int,int,org.conscrypt.Conscrypt$1)
org.conscrypt.SessionSnapshot: java.security.Principal getPeerPrincipal()
org.conscrypt.OpenSSLSignature$RSAPSSPadding: void configureEVP_PKEY_CTX(long)
org.conscrypt.NativeSsl: boolean isClosed()
androidx.recyclerview.widget.RecyclerView: void swapAdapter(androidx.recyclerview.widget.RecyclerView$Adapter,boolean)
org.conscrypt.OpenSSLContextImpl: javax.net.ssl.SSLSessionContext engineGetClientSessionContext()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShadowPaddingEnabled(boolean)
com.esotericsoftware.kryo.io.UnsafeOutput: UnsafeOutput(java.io.OutputStream,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationX(float)
org.conscrypt.ConscryptEngineSocket$SSLOutputStream: void writeToSocket()
com.esotericsoftware.kryo.KryoException: KryoException(java.lang.String,java.lang.Throwable)
com.esotericsoftware.kryo.serializers.FieldSerializerConfig: boolean isSerializeTransient()
de.javakaffee.kryoserializers.guava.ReverseListSerializer$RandomAccessReverseList: ReverseListSerializer$RandomAccessReverseList()
org.conscrypt.NativeSsl: org.conscrypt.NativeCrypto$SSLHandshakeCallbacks access$200(org.conscrypt.NativeSsl)
com.esotericsoftware.kryo.util.ObjectMap: void putAll(com.esotericsoftware.kryo.util.ObjectMap)
org.conscrypt.NativeSsl: void shutdown(java.io.FileDescriptor)
org.conscrypt.Platform: void setup()
org.conscrypt.NativeSsl: long getTime()
org.conscrypt.Conscrypt: org.conscrypt.ConscryptHostnameVerifier getHostnameVerifier(javax.net.ssl.TrustManager)
com.google.android.material.internal.CheckableImageButton: void setChecked(boolean)
de.javakaffee.kryoserializers.guava.ImmutableMultimapSerializer: void registerSerializers(com.esotericsoftware.kryo.Kryo)
com.esotericsoftware.kryo.serializers.DefaultSerializers$StringSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.String)
org.conscrypt.OpenSSLX509Certificate: byte[] getSignature()
org.conscrypt.ConscryptEngine: int calcDstsLength(java.nio.ByteBuffer[],int,int)
org.conscrypt.AbstractConscryptSocket: void setTcpNoDelay(boolean)
com.esotericsoftware.kryo.io.UnsafeInput: UnsafeInput(java.io.InputStream,int)
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmLongField: void copy(java.lang.Object,java.lang.Object)
org.conscrypt.NativeCrypto: int X509_NAME_hash(javax.security.auth.x500.X500Principal)
com.google.android.material.chip.ChipGroup: void setCheckedId(int)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatImageView createImageView(android.content.Context,android.util.AttributeSet)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: void sendUrgentData(int)
org.conscrypt.OpenSSLSignature: void engineInitSign(java.security.PrivateKey)
org.conscrypt.OpenSSLX509CertificateFactory: OpenSSLX509CertificateFactory()
androidx.recyclerview.widget.RecyclerView: void access$300(androidx.recyclerview.widget.RecyclerView,int,int)
org.conscrypt.ct.VerifiedSCT$Status: VerifiedSCT$Status(java.lang.String,int)
org.conscrypt.OpenSSLX509CRL: java.util.Set getCriticalExtensionOIDs()
com.esotericsoftware.kryo.io.Output: int writeFloat(float,float,boolean)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: boolean getEnableSessionCreation()
org.conscrypt.OpenSSLECKeyPairGenerator: java.security.KeyPair generateKeyPair()
com.esotericsoftware.kryo.serializers.GenericsResolver: java.lang.Class getConcreteClass(java.lang.String)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: void bind(java.net.SocketAddress)
com.esotericsoftware.kryo.io.ByteBufferInput: ByteBufferInput()
de.javakaffee.kryoserializers.CollectionsSingletonListSerializer: CollectionsSingletonListSerializer()
de.javakaffee.kryoserializers.guava.ReverseListSerializer: ReverseListSerializer()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatCheckedTextView createCheckedTextView(android.content.Context,android.util.AttributeSet)
com.esotericsoftware.kryo.util.IdentityObjectIntMap: void removeStashIndex(int)
com.google.android.material.internal.FlowLayout: int getItemSpacing()
org.conscrypt.OpenSSLBIOSink: void reset()
org.conscrypt.ConscryptEngine: java.lang.String chooseClientAlias(javax.net.ssl.X509KeyManager,javax.security.auth.x500.X500Principal[],java.lang.String[])
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior()
de.javakaffee.kryoserializers.CollectionsEmptyMapSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.NativeCrypto: byte[] X509_CRL_get_ext_oid(long,org.conscrypt.OpenSSLX509CRL,java.lang.String)
de.javakaffee.kryoserializers.guava.TreeMultimapSerializer: com.google.common.collect.TreeMultimap read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.OpenSSLSignature$SHA224RSA: OpenSSLSignature$SHA224RSA()
com.esotericsoftware.kryo.serializers.DefaultSerializers$TimeZoneSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.util.TimeZone)
org.conscrypt.OpenSSLX509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()
androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int)
org.conscrypt.TrustManagerImpl: java.util.List checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String,java.lang.String)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
org.conscrypt.TrustedCertificateIndex: void reset()
org.conscrypt.ConscryptEngineSocket: byte[] getTlsUnique()
org.conscrypt.OAEPParameters: void engineInit(byte[])
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
org.conscrypt.OpenSSLProvider: void putSymmetricCipherImplClass(java.lang.String,java.lang.String)
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection: java.lang.Object create(java.lang.Object)
org.conscrypt.ConscryptEngine: void setApplicationProtocolSelector(org.conscrypt.ApplicationProtocolSelector)
de.javakaffee.kryoserializers.guava.ReverseListSerializer$RandomAccessReverseList: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.Java8EngineWrapper: void setUseClientMode(boolean)
com.esotericsoftware.kryo.StreamFactory: void setKryo(com.esotericsoftware.kryo.Kryo)
org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker: void check(java.security.cert.Certificate,java.util.Collection)
io.paperdb.Paper: void clear(android.content.Context)
de.javakaffee.kryoserializers.dexx.ListSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.util.ObjectMap: com.esotericsoftware.kryo.util.ObjectMap$Entries entries()
androidx.recyclerview.widget.RecyclerView: void removeOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener)
de.javakaffee.kryoserializers.guava.ArrayListMultimapSerializer: void registerSerializers(com.esotericsoftware.kryo.Kryo)
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
com.google.android.material.textfield.TextInputLayout: void setHintAnimationEnabled(boolean)
org.conscrypt.OpenSSLSocketImpl: void bind(java.net.SocketAddress)
org.conscrypt.NativeCrypto$SSLHandshakeCallbacks: int clientPSKKeyRequested(java.lang.String,byte[],byte[])
com.esotericsoftware.kryo.io.Output: byte[] getBuffer()
org.conscrypt.AbstractConscryptEngine: javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer[],java.nio.ByteBuffer[])
com.google.android.material.textfield.TextInputLayout: void setCounterMaxLength(int)
org.conscrypt.ConscryptEngine: java.lang.String[] getSupportedProtocols()
de.javakaffee.kryoserializers.guava.ImmutableMapSerializer$DummyEnum: ImmutableMapSerializer$DummyEnum(java.lang.String,int)
androidx.recyclerview.widget.RecyclerView: boolean hasPendingAdapterUpdates()
org.conscrypt.NativeCrypto: long X509_CRL_get0_by_cert(long,org.conscrypt.OpenSSLX509CRL,long,org.conscrypt.OpenSSLX509Certificate)
org.conscrypt.OpenSSLCipherRSA: int doCryptoOperation(byte[],byte[])
org.conscrypt.OpenSSLCipher$Mode: org.conscrypt.OpenSSLCipher$Mode valueOf(java.lang.String)
org.conscrypt.NativeCrypto: void EVP_CIPHER_CTX_free(long)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpecResource(int)
com.google.android.material.chip.ChipGroup: void setChipSpacing(int)
org.conscrypt.ct.CTVerifier: java.util.List getSCTsFromTLSExtension(byte[])
com.esotericsoftware.kryo.io.Input: boolean canReadLong()
org.conscrypt.SessionSnapshot: long getCreationTime()
com.esotericsoftware.kryo.util.DefaultClassResolver: java.lang.Class getTypeByName(java.lang.String)
com.esotericsoftware.kryo.io.Input: char readChar()
com.esotericsoftware.kryo.util.Util: long swapLong(long)
com.google.android.material.chip.ChipGroup: void setSingleSelection(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
com.esotericsoftware.kryo.io.UnsafeMemoryOutput: void writeFloat(float)
com.esotericsoftware.kryo.serializers.DefaultSerializers$StringBuilderSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.io.Input: long readLong_slow(boolean)
androidx.recyclerview.widget.RecyclerView: void offsetChildrenHorizontal(int)
com.esotericsoftware.kryo.serializers.DefaultSerializers$BooleanSerializer: java.lang.Boolean read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.google.android.material.chip.Chip: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
org.conscrypt.NativeCrypto: int EVP_PKEY_encrypt(org.conscrypt.NativeRef$EVP_PKEY_CTX,byte[],int,byte[],int,int)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$FloatArraySerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,float[])
com.esotericsoftware.kryo.serializers.OptionalSerializers$OptionalIntSerializer: OptionalSerializers$OptionalIntSerializer()
de.javakaffee.kryoserializers.JdkProxySerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.OpenSSLKey: org.conscrypt.OpenSSLKey fromPublicKey(java.security.PublicKey)
com.google.android.material.card.MaterialCardView: void setCheckedIconResource(int)
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet)
com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField: void setClass(java.lang.Class)
org.conscrypt.NativeCrypto: void SSL_accept_renegotiations(long,org.conscrypt.NativeSsl)
org.conscrypt.Conscrypt: void setUseEngineSocket(javax.net.ssl.SSLServerSocketFactory,boolean)
com.esotericsoftware.kryo.util.DefaultStreamFactory: com.esotericsoftware.kryo.io.Input getInput()
com.esotericsoftware.kryo.serializers.DefaultSerializers$CalendarSerializer: java.lang.Object copy(com.esotericsoftware.kryo.Kryo,java.lang.Object)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ByteArraySerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,byte[])
org.conscrypt.ct.CTLogInfo: java.lang.String getDescription()
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
org.conscrypt.Java7ExtendedSSLSession: javax.net.ssl.SSLSessionContext getSessionContext()
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: void setHostname(java.lang.String)
org.conscrypt.Platform: java.security.KeyStore getDefaultCertKeyStore()
com.esotericsoftware.kryo.io.FastOutput: FastOutput(byte[],int)
com.esotericsoftware.kryo.serializers.ClosureSerializer: ClosureSerializer()
org.conscrypt.Conscrypt$Version: int patch()
com.google.android.material.internal.CheckableImageButton: CheckableImageButton(android.content.Context,android.util.AttributeSet)
de.javakaffee.kryoserializers.guava.MultimapSerializerBase: void readMultimap(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,com.google.common.collect.Multimap)
org.conscrypt.ActiveSession: java.util.List getStatusResponses()
androidx.recyclerview.widget.RecyclerView: void removeDetachedView(android.view.View,boolean)
com.esotericsoftware.kryo.StreamFactory: com.esotericsoftware.kryo.io.Input getInput(byte[],int,int)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: void verifyCertificateChain(byte[][],java.lang.String)
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
org.conscrypt.AbstractSessionContext: org.conscrypt.NativeSslSession getSessionFromCache(byte[])
org.conscrypt.DESEDESecretKeyFactory: java.security.spec.KeySpec engineGetKeySpec(javax.crypto.SecretKey,java.lang.Class)
de.javakaffee.kryoserializers.guava.ReverseListSerializer: com.esotericsoftware.kryo.serializers.CollectionSerializer access$200()
org.conscrypt.OpenSSLCipherRSA$DirectRSA: OpenSSLCipherRSA$DirectRSA(int)
com.esotericsoftware.kryo.util.IdentityObjectIntMap: boolean containsValue(int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: RecyclerView$LayoutManager()
org.conscrypt.ct.SignedCertificateTimestamp$SignatureType: org.conscrypt.ct.SignedCertificateTimestamp$SignatureType[] values()
org.conscrypt.NativeRef$EVP_PKEY_CTX: void doFree(long)
com.esotericsoftware.kryo.io.Output: void setOutputStream(java.io.OutputStream)
org.conscrypt.NativeCrypto: int EVP_has_aes_hardware()
org.conscrypt.ECParameters: void engineInit(java.security.spec.AlgorithmParameterSpec)
com.esotericsoftware.kryo.io.KryoDataInput: short readShort()
de.javakaffee.kryoserializers.jodatime.JodaLocalDateSerializer: org.joda.time.LocalDate read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.ct.DigitallySigned: DigitallySigned(int,int,byte[])
com.esotericsoftware.kryo.util.IdentityMap$Keys: boolean hasNext()
org.conscrypt.DESEDESecretKeyFactory: DESEDESecretKeyFactory()
org.conscrypt.OpenSSLCipherChaCha20: int getOutputSizeForFinal(int)
com.google.android.material.chip.Chip: void setOnCloseIconClickListener(android.view.View$OnClickListener)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: void setEnableSessionCreation(boolean)
org.conscrypt.OpenSSLECPublicKey: void readObject(java.io.ObjectInputStream)
org.conscrypt.OpenSSLCipherChaCha20: int getOutputSizeForUpdate(int)
com.esotericsoftware.kryo.util.IdentityObjectIntMap: void push(java.lang.Object,int,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object)
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection: java.lang.Class access$400(de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection)
com.google.android.material.internal.BaselineLayout: BaselineLayout(android.content.Context,android.util.AttributeSet)
org.conscrypt.ActiveSession: int getPacketBufferSize()
org.conscrypt.NativeSsl: int readDirectByteBuffer(long,int)
androidx.recyclerview.widget.RecyclerView: void removeOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener)
org.conscrypt.NativeCrypto: void SSL_write(long,org.conscrypt.NativeSsl,java.io.FileDescriptor,org.conscrypt.NativeCrypto$SSLHandshakeCallbacks,byte[],int,int,int)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.recyclerview.widget.RecyclerView: void onExitLayoutOrScroll()
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
org.conscrypt.OpenSSLRSAPublicKey: java.math.BigInteger getPublicExponent()
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior()
de.javakaffee.kryoserializers.protobuf.ProtobufSerializer: com.google.protobuf.GeneratedMessage read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection$4: java.lang.Object create(java.lang.Object)
com.google.android.material.chip.Chip: void setChipText(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.esotericsoftware.reflectasm.FieldAccess: void setChar(java.lang.Object,int,char)
com.esotericsoftware.kryo.io.KryoDataInput: int readInt()
com.esotericsoftware.minlog.Log: void debug(java.lang.String,java.lang.String,java.lang.Throwable)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
androidx.cardview.widget.CardView: boolean getPreventCornerOverlap()
org.conscrypt.NativeCrypto: byte[] EVP_marshal_public_key(org.conscrypt.NativeRef$EVP_PKEY)
org.conscrypt.OpenSSLX509CRL: boolean hasUnsupportedCriticalExtension()
com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()
com.esotericsoftware.kryo.util.MapReferenceResolver: void reset()
com.esotericsoftware.kryo.io.ByteBufferOutput: java.nio.ByteOrder order()
org.conscrypt.NativeSsl: NativeSsl(long,org.conscrypt.SSLParametersImpl,org.conscrypt.NativeCrypto$SSLHandshakeCallbacks,org.conscrypt.SSLParametersImpl$AliasChooser,org.conscrypt.SSLParametersImpl$PSKCallbacks)
org.conscrypt.ActiveSession: void onPeerCertificateAvailable(java.lang.String,int)
org.conscrypt.NativeSsl: java.security.cert.X509Certificate[] getLocalCertificates()
com.esotericsoftware.kryo.util.IntMap$Entries: java.util.Iterator iterator()
org.conscrypt.Platform: void getSSLParametersFromImpl(javax.net.ssl.SSLParameters,org.conscrypt.SSLParametersImpl)
org.conscrypt.OpenSSLEvpCipherAES$AES_128$ECB: OpenSSLEvpCipherAES$AES_128$ECB(org.conscrypt.OpenSSLCipher$Padding)
androidx.recyclerview.widget.RecyclerView: void onRestoreInstanceState(android.os.Parcelable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.Serializer getDefaultSerializer(java.lang.Class)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
com.esotericsoftware.kryo.serializers.ObjectField$ObjectBooleanField: java.lang.Object getField(java.lang.Object)
org.conscrypt.OpenSSLCipher: boolean isEncrypting()
com.esotericsoftware.kryo.io.UnsafeInput: float readFloat()
com.esotericsoftware.kryo.io.UnsafeInput: void setVarIntsEnabled(boolean)
com.esotericsoftware.kryo.io.UnsafeOutput: void writeDouble(double)
androidx.appcompat.app.AppCompatViewInflater: void verifyNotNull(android.view.View,java.lang.String)
de.javakaffee.kryoserializers.guava.ImmutableSetSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,com.google.common.collect.ImmutableSet)
org.conscrypt.OpenSSLBIOSink: void finalize()
com.esotericsoftware.kryo.util.IdentityMap$Values: boolean hasNext()
org.conscrypt.KeyGeneratorImpl$HmacMD5: KeyGeneratorImpl$HmacMD5()
com.esotericsoftware.kryo.serializers.GenericsResolver: GenericsResolver()
org.conscrypt.OpenSSLECDHKeyAgreement: java.security.Key engineDoPhase(java.security.Key,boolean)
com.esotericsoftware.kryo.serializers.ObjectField$ObjectIntField: void write(com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.io.UnsafeMemoryInput: UnsafeMemoryInput(byte[])
org.conscrypt.ConscryptFileDescriptorSocket: org.conscrypt.ConscryptSession provideHandshakeSession()
com.esotericsoftware.kryo.io.ByteBufferInput: long readLong_slow(boolean)
com.esotericsoftware.kryo.util.FastestStreamFactory: com.esotericsoftware.kryo.io.Output getOutput(int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior()
org.conscrypt.OpenSSLServerSocketFactoryImpl: java.lang.String[] getDefaultCipherSuites()
com.esotericsoftware.kryo.serializers.TimeSerializers$ZoneOffsetSerializer: java.time.ZoneOffset read(com.esotericsoftware.kryo.io.Input)
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
org.conscrypt.TrustManagerImpl: void setCTPolicy(org.conscrypt.ct.CTPolicy)
com.esotericsoftware.kryo.serializers.ExternalizableSerializer: boolean isJavaSerializerRequired(java.lang.Class)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: java.net.InetAddress getLocalAddress()
com.esotericsoftware.kryo.serializers.FieldSerializer: boolean getUseMemRegions()
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.NativeCrypto: java.lang.String cipherSuiteToJava(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
org.conscrypt.NativeSsl: byte[] getTlsUnique()
org.conscrypt.AbstractConscryptSocket: void removeHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener)
com.esotericsoftware.kryo.serializers.BlowfishSerializer$1: void close()
org.conscrypt.PeerInfoProvider: org.conscrypt.PeerInfoProvider nullProvider()
com.esotericsoftware.kryo.util.IntMap$Values: java.util.Iterator iterator()
org.conscrypt.GCMParameters: void engineInit(byte[])
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: void addHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener)
de.javakaffee.kryoserializers.guava.HashMultimapSerializer: HashMultimapSerializer()
org.conscrypt.OpenSSLBIOSource$ByteBufferInputStream: OpenSSLBIOSource$ByteBufferInputStream(java.nio.ByteBuffer)
org.conscrypt.EvpMdRef$MD5: EvpMdRef$MD5()
org.conscrypt.Platform: boolean provideTrustManagerByDefault()
org.conscrypt.Platform: void closeGuardClose(java.lang.Object)
org.conscrypt.NativeCrypto: void asn1_write_octetstring(long,byte[])
com.esotericsoftware.kryo.io.Input: void setInputStream(java.io.InputStream)
org.conscrypt.Java8FileDescriptorSocket: Java8FileDescriptorSocket(java.lang.String,int,java.net.InetAddress,int,org.conscrypt.SSLParametersImpl)
org.conscrypt.Java8EngineWrapper: void setUseSessionTickets(boolean)
com.esotericsoftware.kryo.io.ByteBufferOutput: java.io.OutputStream getOutputStream()
com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.serializers.FieldSerializerConfig getFieldSerializerConfig()
com.esotericsoftware.kryo.io.ByteBufferInput: ByteBufferInput(long,int)
com.google.android.material.circularreveal.CircularRevealFrameLayout: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
org.conscrypt.SSLNullSession: SSLNullSession(org.conscrypt.SSLNullSession$1)
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmLongField: void read(com.esotericsoftware.kryo.io.Input,java.lang.Object)
com.google.android.material.chip.ChipGroup: int getChipSpacingVertical()
com.esotericsoftware.kryo.io.Output: void write(byte[],int,int)
com.esotericsoftware.kryo.ReferenceResolver: boolean useReferences(java.lang.Class)
com.esotericsoftware.kryo.serializers.JavaSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.util.ObjectMap: boolean containsValue(java.lang.Object,boolean)
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmShortField: void copy(java.lang.Object,java.lang.Object)
com.google.android.material.bottomappbar.BottomAppBar: void setTitle(java.lang.CharSequence)
org.conscrypt.OpenSSLEvpCipherAES$AES: OpenSSLEvpCipherAES$AES(org.conscrypt.OpenSSLCipher$Mode,org.conscrypt.OpenSSLCipher$Padding)
com.esotericsoftware.kryo.serializers.JavaSerializer: JavaSerializer()
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: javax.net.ssl.SSLParameters getSSLParameters()
org.conscrypt.Conscrypt: void setUseEngineSocketByDefault(boolean)
org.conscrypt.NativeSslSession$Impl$1: java.security.cert.Certificate[] getLocalCertificates()
org.conscrypt.TrustManagerImpl: org.conscrypt.ConscryptHostnameVerifier getDefaultHostnameVerifier()
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: void startHandshake()
com.esotericsoftware.reflectasm.ConstructorAccess: void insertNewInstanceInner(org.objectweb.asm.ClassWriter,java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: int getSoLinger()
org.conscrypt.ct.SignedCertificateTimestamp: byte[] getExtensions()
de.javakaffee.kryoserializers.jodatime.JodaLocalDateTimeSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.io.ByteBufferOutput: int writeFloat(float,float,boolean)
com.esotericsoftware.kryo.util.IdentityMap$Values: java.util.Iterator iterator()
com.esotericsoftware.kryo.serializers.VersionFieldSerializer: void initializeCachedFields()
org.conscrypt.AbstractConscryptSocket: byte[] getAlpnSelectedProtocol()
com.esotericsoftware.kryo.util.IntMap$Entries: java.lang.Object next()
com.esotericsoftware.kryo.util.Util: int swapInt(int)
org.conscrypt.ConscryptEngineSocket: ConscryptEngineSocket(java.net.InetAddress,int,org.conscrypt.SSLParametersImpl)
org.conscrypt.NativeSslSession$Impl: java.lang.String getProtocol()
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: void removeHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener)
org.conscrypt.OpenSSLMac: void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)
com.esotericsoftware.kryo.serializers.TimeSerializers$YearSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.time.Year)
org.conscrypt.SSLParametersImpl: boolean getUseCipherSuitesOrder()
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeIntField: void write(com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.OpenSSLX509Certificate: boolean equals(java.lang.Object)
com.esotericsoftware.kryo.io.KryoDataOutput: KryoDataOutput(com.esotericsoftware.kryo.io.Output)
de.javakaffee.kryoserializers.cglib.CGLibProxySerializer: CGLibProxySerializer()
com.esotericsoftware.kryo.serializers.DefaultSerializers$DoubleSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.NativeCrypto: void EVP_PKEY_CTX_set_rsa_oaep_label(long,byte[])
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
com.esotericsoftware.kryo.KryoException: KryoException(java.lang.Throwable)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: boolean isConnected()
com.google.android.material.textfield.TextInputLayout: void setEndIconCheckable(boolean)
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
de.javakaffee.kryoserializers.jodatime.IdentifiableChronology: de.javakaffee.kryoserializers.jodatime.IdentifiableChronology valueOf(java.lang.String)
org.conscrypt.TrustManagerImpl: void setHostnameVerifier(org.conscrypt.ConscryptHostnameVerifier)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
com.google.android.material.textfield.TextInputLayout: void setErrorTextAppearance(int)
androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)
androidx.recyclerview.widget.RecyclerView: void onMeasure(int,int)
com.esotericsoftware.kryo.io.UnsafeMemoryOutput: void writeLong(long)
com.esotericsoftware.kryo.io.ByteBufferOutput: void write(byte[],int,int)
com.esotericsoftware.kryo.serializers.DefaultSerializers$CollectionsSingletonSetSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.Platform: void checkClientTrusted(javax.net.ssl.X509TrustManager,java.security.cert.X509Certificate[],java.lang.String,org.conscrypt.ConscryptEngine)
org.conscrypt.ConscryptEngine: int serverPSKKeyRequested(java.lang.String,java.lang.String,byte[])
org.conscrypt.BaseOpenSSLSocketAdapterFactory: java.net.Socket createSocket()
de.javakaffee.kryoserializers.dexx.SetSerializer: void registerSerializers(com.esotericsoftware.kryo.Kryo)
org.conscrypt.NativeRef$HMAC_CTX: NativeRef$HMAC_CTX(long)
com.esotericsoftware.kryo.util.DefaultStreamFactory: com.esotericsoftware.kryo.io.Output getOutput(byte[],int)
org.conscrypt.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)
com.esotericsoftware.reflectasm.FieldAccess: float getFloat(java.lang.Object,int)
com.google.android.material.chip.Chip: void setEllipsize(android.text.TextUtils$TruncateAt)
com.esotericsoftware.kryo.serializers.ObjectField$ObjectCharField: void copy(java.lang.Object,java.lang.Object)
org.conscrypt.OpenSSLAeadCipher: OpenSSLAeadCipher(org.conscrypt.OpenSSLCipher$Mode)
com.esotericsoftware.kryo.pool.KryoPoolQueueImpl: void clear()
com.esotericsoftware.kryo.util.ObjectMap$Entries: java.lang.Object next()
com.google.android.material.chip.Chip: void setChipCornerRadiusResource(int)
com.google.android.material.card.MaterialCardView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.paperdb.DbStoragePlainFile$1: DbStoragePlainFile$1(io.paperdb.DbStoragePlainFile)
de.javakaffee.kryoserializers.jodatime.JodaLocalDateSerializer: JodaLocalDateSerializer()
com.esotericsoftware.kryo.util.UnsafeUtil$1: int compare(java.lang.reflect.Field,java.lang.reflect.Field)
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmCharField: void read(com.esotericsoftware.kryo.io.Input,java.lang.Object)
androidx.recyclerview.widget.RecyclerView: android.view.View focusSearch(android.view.View,int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
org.conscrypt.ConscryptFileDescriptorSocket: void setHandshakeTimeout(int)
org.conscrypt.ConscryptFileDescriptorSocket: javax.net.ssl.SSLParameters getSSLParameters()
org.conscrypt.ConscryptEngineSocket$2: ConscryptEngineSocket$2(javax.net.ssl.X509ExtendedTrustManager,org.conscrypt.ConscryptEngineSocket)
org.conscrypt.ct.CertificateEntry: org.conscrypt.ct.CertificateEntry createForPrecertificate(org.conscrypt.OpenSSLX509Certificate,org.conscrypt.OpenSSLX509Certificate)
de.javakaffee.kryoserializers.RegexSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.util.regex.Pattern)
org.conscrypt.OpenSSLBIOSource: org.conscrypt.OpenSSLBIOSource wrap(java.nio.ByteBuffer)
de.javakaffee.kryoserializers.CopyForIterateMapSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.io.UnsafeMemoryOutput: UnsafeMemoryOutput(java.io.OutputStream,int)
com.esotericsoftware.kryo.serializers.TaggedFieldSerializer: TaggedFieldSerializer(com.esotericsoftware.kryo.Kryo,java.lang.Class)
com.esotericsoftware.kryo.io.Input: long readLong(boolean)
org.conscrypt.ct.Serialization: long readLong(java.io.InputStream,int)
de.javakaffee.kryoserializers.guava.LinkedHashMultimapSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.io.Input: void readBytes(byte[],int,int)
com.esotericsoftware.kryo.Kryo: void addDefaultSerializer(java.lang.Class,com.esotericsoftware.kryo.Serializer)
com.esotericsoftware.kryo.io.ByteBufferInput: int require(int)
org.conscrypt.Java8EngineWrapper: void closeInbound()
org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: OpenSSLX509CertificateFactory$ParsingException(java.lang.Exception)
org.conscrypt.NativeCrypto: long X509_CRL_get_nextUpdate(long,org.conscrypt.OpenSSLX509CRL)
org.conscrypt.OpenSSLBIOSource$ByteBufferInputStream: int available()
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.floatingactionbutton.FloatingActionButton: boolean getUseCompatPadding()
org.conscrypt.OpenSSLX509Certificate: java.lang.String getSigAlgName()
org.conscrypt.OpenSSLX509Certificate: byte[] getTBSCertificate()
com.esotericsoftware.kryo.serializers.DefaultSerializers$ShortSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.NativeCrypto: byte[] ASN1_seq_pack_X509(long[])
com.esotericsoftware.kryo.serializers.TimeSerializers$ZoneOffsetSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.time.ZoneOffset)
androidx.fragment.app.FragmentActivity: FragmentActivity()
com.google.android.material.textfield.TextInputLayout: float getHintCollapsedTextHeight()
org.conscrypt.OpenSSLX509CertPath: java.security.cert.CertPath fromEncoding(java.io.InputStream,java.lang.String)
androidx.recyclerview.widget.RecyclerView: boolean predictiveItemAnimationsEnabled()
com.google.android.material.button.MaterialButton: void setStrokeColor(android.content.res.ColorStateList)
org.conscrypt.OpenSSLSignatureRawRSA: void engineUpdate(byte)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: void shutdownInput()
com.esotericsoftware.kryo.util.DefaultClassResolver: DefaultClassResolver()
org.conscrypt.OpenSSLCipherRSA$OAEP$SHA384: OpenSSLCipherRSA$OAEP$SHA384()
androidx.core.view.WindowInsetsCompat$Impl: boolean equals(java.lang.Object)
org.conscrypt.OpenSSLCipher: int updateInternal(byte[],int,int,byte[],int,int)
androidx.recyclerview.widget.RecyclerView: android.view.View findContainingItemView(android.view.View)
org.conscrypt.OpenSSLSocketImpl: java.lang.String toString()
org.conscrypt.OpenSSLKey: boolean isWrapped()
org.conscrypt.ConscryptEngine: void setHostname(java.lang.String)
com.esotericsoftware.kryo.io.Input: void setBuffer(byte[],int,int)
org.conscrypt.TrustManagerImpl$TrustAnchorComparator: int compare(java.lang.Object,java.lang.Object)
org.conscrypt.OpenSSLECPrivateKey: org.conscrypt.OpenSSLKey wrapJCAPrivateKeyForTLSStackOnly(java.security.PrivateKey,java.security.PublicKey)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.esotericsoftware.kryo.serializers.CollectionSerializer: java.lang.Object copy(com.esotericsoftware.kryo.Kryo,java.lang.Object)
androidx.recyclerview.widget.RecyclerView: void postAnimationRunner()
org.conscrypt.ConscryptEngineSocket: void onHandshakeFinished()
org.conscrypt.AbstractConscryptEngine: void setApplicationProtocols(java.lang.String[])
com.esotericsoftware.kryo.io.UnsafeMemoryOutput: void writeInts(int[])
org.conscrypt.OpenSSLEvpCipher: void engineInitInternal(byte[],java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)
com.esotericsoftware.kryo.serializers.DefaultSerializers$StringBufferSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.StringBuffer)
de.javakaffee.kryoserializers.CollectionsEmptySetSerializer: CollectionsEmptySetSerializer()
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: java.lang.String[] getSupportedCipherSuites()
com.esotericsoftware.kryo.serializers.MapSerializer: java.lang.Object copy(com.esotericsoftware.kryo.Kryo,java.lang.Object)
com.esotericsoftware.kryo.util.IntMap: IntMap()
org.conscrypt.OpenSSLSignature: void initInternal(org.conscrypt.OpenSSLKey,boolean)
de.javakaffee.kryoserializers.CollectionsSingletonSetSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.OpenSSLCipherRSA$PKCS1: OpenSSLCipherRSA$PKCS1()
com.esotericsoftware.kryo.io.ByteBufferInput: void release()
org.conscrypt.SSLUtils: int unsignedShort(short)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatRatingBar createRatingBar(android.content.Context,android.util.AttributeSet)
com.esotericsoftware.kryo.serializers.DefaultSerializers$CollectionsSingletonMapSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.serializers.DefaultSerializers$TreeSetSerializer: java.util.Collection createCopy(com.esotericsoftware.kryo.Kryo,java.util.Collection)
org.conscrypt.Conscrypt: byte[] getTlsUnique(javax.net.ssl.SSLSocket)
com.esotericsoftware.kryo.serializers.DefaultSerializers$DateSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.util.Date)
de.javakaffee.kryoserializers.KryoReflectionFactorySupport: java.lang.Object newInstance(java.lang.Class)
de.javakaffee.kryoserializers.KryoReflectionFactorySupport: KryoReflectionFactorySupport()
com.esotericsoftware.kryo.util.ObjectMap: void clear()
org.conscrypt.ClientSessionContext$HostAndPort: int hashCode()
org.conscrypt.NativeCrypto: void SSL_set_cipher_lists(long,org.conscrypt.NativeSsl,java.lang.String[])
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.esotericsoftware.kryo.serializers.DefaultSerializers$CalendarSerializer: java.util.Calendar read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
com.esotericsoftware.kryo.io.ByteBufferOutput: boolean require(int)
com.esotericsoftware.kryo.serializers.TimeSerializers$LocalDateSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.serializers.MapSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.util.Map)
com.esotericsoftware.kryo.serializers.FieldSerializerConfig: com.esotericsoftware.kryo.serializers.FieldSerializerConfig clone()
org.conscrypt.OpenSSLEvpCipherARC4: boolean supportsVariableSizeKey()
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$IntArraySerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,int[])
com.esotericsoftware.kryo.pool.SoftReferenceQueue: boolean isEmpty()
de.javakaffee.kryoserializers.SubListSerializers: com.esotericsoftware.kryo.Kryo addDefaultSerializers(com.esotericsoftware.kryo.Kryo)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
com.esotericsoftware.kryo.util.ObjectMap: com.esotericsoftware.kryo.util.ObjectMap$Keys keys()
org.conscrypt.ConscryptFileDescriptorSocket: void setEnableSessionCreation(boolean)
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeStringField: void read(com.esotericsoftware.kryo.io.Input,java.lang.Object)
org.conscrypt.SSLParametersImpl: javax.net.ssl.X509KeyManager findFirstX509KeyManager(javax.net.ssl.KeyManager[])
org.conscrypt.SSLParametersImpl: boolean getUseClientMode()
com.esotericsoftware.kryo.io.UnsafeMemoryOutput: void writeByte(byte)
org.conscrypt.OpenSSLSignature: void engineUpdate(byte[],int,int)
de.javakaffee.kryoserializers.CopyForIterateMapSerializer: CopyForIterateMapSerializer()
com.esotericsoftware.kryo.serializers.TimeSerializers$OffsetDateTimeSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.OpenSSLCipherRSA$OAEP: void engineInitInternal(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)
com.esotericsoftware.kryo.serializers.TimeSerializers$ZoneIdSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.time.ZoneId)
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmIntField: void write(com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.io.Output: Output(java.io.OutputStream,int)
com.esotericsoftware.kryo.io.UnsafeMemoryOutput: void setBuffer(java.nio.ByteBuffer,int)
org.conscrypt.TrustManagerImpl: java.util.Set findAllTrustAnchorsByIssuerAndSignature(java.security.cert.X509Certificate)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: void setSendBufferSize(int)
org.conscrypt.AbstractConscryptEngine: javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer[],int,int,java.nio.ByteBuffer[],int,int)
org.conscrypt.ExternalSession: java.security.Principal getPeerPrincipal()
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
com.google.android.material.card.MaterialCardView: int getContentPaddingRight()
org.conscrypt.OpenSSLECGroupContext: org.conscrypt.OpenSSLECGroupContext getInstance(java.security.spec.ECParameterSpec)
org.conscrypt.OpenSSLBIOInputStream: int read(byte[],int,int)
org.conscrypt.NativeCrypto: int X509_supported_extension(long)
org.conscrypt.ct.SignedCertificateTimestamp: org.conscrypt.ct.SignedCertificateTimestamp decode(java.io.InputStream,org.conscrypt.ct.SignedCertificateTimestamp$Origin)
com.esotericsoftware.kryo.serializers.CollectionSerializer: void setElementsCanBeNull(boolean)
com.esotericsoftware.kryo.serializers.FieldSerializer: void setSerializeTransient(boolean)
org.conscrypt.Java8FileDescriptorSocket: Java8FileDescriptorSocket(org.conscrypt.SSLParametersImpl)
com.esotericsoftware.kryo.io.Input: float readFloat(float,boolean)
org.conscrypt.OpenSSLX509CRL: byte[] getSignature()
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
org.conscrypt.SessionSnapshot: void invalidate()
org.conscrypt.ConscryptEngineSocket: javax.net.ssl.SSLSession getHandshakeSession()
org.conscrypt.OpenSSLX509CertificateFactory$1: java.util.List fromPkcs7DerInputStream(java.io.InputStream)
org.conscrypt.ConscryptEngineSocket: void doHandshake()
org.conscrypt.ConscryptEngineSocket: void setEnableSessionCreation(boolean)
org.conscrypt.ct.CTVerifier: java.util.List getSCTsFromOCSPResponse(byte[],org.conscrypt.OpenSSLX509Certificate[])
com.esotericsoftware.kryo.serializers.EnumNameSerializer: EnumNameSerializer(com.esotericsoftware.kryo.Kryo,java.lang.Class)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setExpandedComponentIdHint(int)
com.esotericsoftware.kryo.pool.SoftReferenceQueue: java.lang.String toString()
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: java.lang.String[] getSupportedCipherSuites()
com.esotericsoftware.kryo.serializers.TimeSerializers$ZonedDateTimeSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior()
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: boolean getTcpNoDelay()
com.esotericsoftware.kryo.io.Output: void flush()
org.conscrypt.ConscryptFileDescriptorSocket$SSLInputStream: ConscryptFileDescriptorSocket$SSLInputStream(org.conscrypt.ConscryptFileDescriptorSocket)
com.esotericsoftware.kryo.serializers.FieldSerializerConfig: void setFixedFieldTypes(boolean)
org.conscrypt.OpenSSLSignature$SHA1RSA: OpenSSLSignature$SHA1RSA()
com.esotericsoftware.kryo.serializers.FieldSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
de.javakaffee.kryoserializers.guava.ImmutableMapSerializer$DummyEnum: de.javakaffee.kryoserializers.guava.ImmutableMapSerializer$DummyEnum[] values()
com.esotericsoftware.kryo.io.ByteBufferInput: boolean readBoolean()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundColor(int)
androidx.recyclerview.widget.RecyclerView: void viewRangeUpdate(int,int,java.lang.Object)
org.conscrypt.NativeCrypto: int EVP_CipherFinal_ex(org.conscrypt.NativeRef$EVP_CIPHER_CTX,byte[],int)
org.conscrypt.NativeSslSession: void log(java.lang.Throwable)
org.conscrypt.ConscryptEngineSocket$SSLOutputStream: void close()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
org.conscrypt.Platform: java.lang.String getEndpointIdentificationAlgorithm(javax.net.ssl.SSLParameters)
org.conscrypt.ct.CTConstants: CTConstants()
com.esotericsoftware.kryo.io.Output: long total()
de.javakaffee.kryoserializers.guava.MultimapSerializerBase: void writeMultimap(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,com.google.common.collect.Multimap)
org.conscrypt.OpenSSLECDHKeyAgreement: int engineGenerateSecret(byte[],int)
com.esotericsoftware.kryo.io.UnsafeMemoryOutput: void writeFloats(float[])
com.esotericsoftware.kryo.pool.SoftReferenceQueue: com.esotericsoftware.kryo.Kryo remove()
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeDoubleField: void read(com.esotericsoftware.kryo.io.Input,java.lang.Object)
com.esotericsoftware.kryo.io.UnsafeMemoryInput: UnsafeMemoryInput()
org.conscrypt.KeyGeneratorImpl$HmacSHA384: KeyGeneratorImpl$HmacSHA384()
de.javakaffee.kryoserializers.EnumSetSerializer: java.lang.Class getElementType(java.util.EnumSet)
org.conscrypt.ConscryptFileDescriptorSocket$SSLInputStream: int read(byte[],int,int)
org.conscrypt.AbstractConscryptEngine: int getPeerPort()
com.esotericsoftware.kryo.util.ObjectMap$Values: java.util.Iterator iterator()
org.conscrypt.SSLParametersImpl: org.conscrypt.ClientSessionContext getClientSessionContext()
org.conscrypt.SSLNullSession: java.security.cert.Certificate[] getPeerCertificates()
com.esotericsoftware.kryo.ReferenceResolver: void setReadObject(int,java.lang.Object)
com.google.android.material.chip.ChipGroup: void setShowDividerHorizontal(int)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
org.conscrypt.OpenSSLX509Certificate: OpenSSLX509Certificate(long,java.util.Date,java.util.Date)
org.conscrypt.ConscryptEngineSocket$SSLInputStream: int processDataFromSocket(byte[],int,int)
com.esotericsoftware.kryo.serializers.TaggedFieldSerializerConfig: boolean isIgnoreUnknownTags()
com.esotericsoftware.kryo.StreamFactory: com.esotericsoftware.kryo.io.Input getInput(java.io.InputStream)
org.conscrypt.Java8EngineWrapper: boolean getUseClientMode()
com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField: java.lang.reflect.Field getField()
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
org.conscrypt.Conscrypt: java.lang.String[] getApplicationProtocols(javax.net.ssl.SSLSocket)
androidx.recyclerview.widget.RecyclerView: void dispatchNestedScroll(int,int,int,int,int[],int,int[])
com.esotericsoftware.kryo.serializers.FieldSerializer: java.lang.Class getType()
com.esotericsoftware.kryo.io.Output: void setPosition(int)
org.conscrypt.NativeCrypto: int EVP_CIPHER_CTX_block_size(org.conscrypt.NativeRef$EVP_CIPHER_CTX)
com.esotericsoftware.reflectasm.AccessClassLoader: java.lang.reflect.Method getDefineClassMethod()
org.conscrypt.ConscryptEngineSocket: ConscryptEngineSocket(java.net.InetAddress,int,java.net.InetAddress,int,org.conscrypt.SSLParametersImpl)
org.conscrypt.ConscryptFileDescriptorSocket: void setChannelIdPrivateKey(java.security.PrivateKey)
com.esotericsoftware.kryo.serializers.BeanSerializer$CachedProperty: java.lang.String toString()
org.conscrypt.OpenSSLCipherRSA: void engineInit(int,java.security.Key,java.security.SecureRandom)
org.conscrypt.OpenSSLMessageDigestJDK: void engineReset()
org.conscrypt.OpenSSLRSAPrivateKey: java.lang.String getFormat()
com.esotericsoftware.kryo.serializers.ObjectField$ObjectFloatField: void read(com.esotericsoftware.kryo.io.Input,java.lang.Object)
com.esotericsoftware.kryo.serializers.FieldSerializer: java.util.List buildValidFields(boolean,java.util.List,com.esotericsoftware.kryo.util.ObjectMap,com.esotericsoftware.kryo.util.IntArray)
com.esotericsoftware.kryo.io.ByteBufferInput: void readUtf8(int)
com.esotericsoftware.kryo.util.ObjectMap$Values: void remove()
com.esotericsoftware.kryo.serializers.FieldSerializer: com.esotericsoftware.kryo.serializers.FieldSerializer$CachedFieldFactory getUnsafeFieldFactory()
com.esotericsoftware.kryo.io.UnsafeMemoryOutput: int writeLong(long,boolean)
org.conscrypt.NativeCrypto: void ASN1_TIME_to_Calendar(long,java.util.Calendar)
com.esotericsoftware.kryo.serializers.MapSerializer: java.util.Map read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
org.conscrypt.AbstractSessionContext: int access$000(org.conscrypt.AbstractSessionContext)
org.conscrypt.Java7ExtendedSSLSession: void invalidate()
org.conscrypt.SessionSnapshot: java.lang.String getPeerHost()
org.conscrypt.OpenSSLRSAPrivateKey: java.lang.String getAlgorithm()
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
org.conscrypt.ServerSessionContext: void setPersistentCache(org.conscrypt.SSLServerSessionCache)
org.conscrypt.ConscryptFileDescriptorSocket: void close()
com.esotericsoftware.kryo.serializers.DefaultSerializers$EnumSetSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.reflectasm.FieldAccess: void setByte(java.lang.Object,int,byte)
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.esotericsoftware.kryo.util.IdentityMap: IdentityMap(int,float)
org.conscrypt.OpenSSLCipherRSA$DirectRSA: int doCryptoOperation(byte[],byte[])
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: boolean isClosed()
org.conscrypt.NativeCrypto: int SSL_get_error(long,org.conscrypt.NativeSsl,int)
com.esotericsoftware.kryo.serializers.FieldSerializer: void setUseAsm(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintList(android.content.res.ColorStateList)
com.esotericsoftware.kryo.Kryo: void setReferenceResolver(com.esotericsoftware.kryo.ReferenceResolver)
com.esotericsoftware.kryo.io.UnsafeMemoryInput: UnsafeMemoryInput(int)
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
com.esotericsoftware.kryo.Serializer: Serializer()
de.javakaffee.kryoserializers.cglib.CGLibProxySerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.ConscryptEngine: void closeOutbound()
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
com.esotericsoftware.kryo.io.ByteBufferOutputStream: void write(byte[],int,int)
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
org.conscrypt.ClientSessionContext: void onBeforeRemoveSession(org.conscrypt.NativeSslSession)
com.esotericsoftware.kryo.serializers.MapSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
com.esotericsoftware.kryo.io.FastOutput: FastOutput(byte[])
com.esotericsoftware.kryo.util.IdentityMap: boolean containsKeyStash(java.lang.Object)
org.conscrypt.TrustManagerImpl: TrustManagerImpl(java.security.KeyStore,org.conscrypt.CertPinManager)
com.esotericsoftware.kryo.StreamFactory: com.esotericsoftware.kryo.io.Input getInput(int)
com.esotericsoftware.kryo.io.Input: long[] readLongs(int)
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
org.conscrypt.OpenSSLMessageDigestJDK$MD5: OpenSSLMessageDigestJDK$MD5()
androidx.recyclerview.widget.RecyclerView: void initAutofill()
com.esotericsoftware.kryo.serializers.DefaultSerializers$StringSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.minlog.Log: void ERROR()
com.esotericsoftware.kryo.io.ByteBufferOutput: void setVarIntsEnabled(boolean)
org.conscrypt.NativeCrypto: int EVP_AEAD_nonce_length(long)
de.javakaffee.kryoserializers.guava.LinkedListMultimapSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,com.google.common.collect.LinkedListMultimap)
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
org.conscrypt.OpenSSLX509CRL: boolean isRevoked(java.security.cert.Certificate)
org.conscrypt.ConscryptEngine: int writePlaintextDataHeap(java.nio.ByteBuffer,int,int)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
com.esotericsoftware.kryo.util.IntMap: void putStash(int,java.lang.Object)
org.conscrypt.Platform: boolean checkTrusted(java.lang.String,javax.net.ssl.X509TrustManager,java.security.cert.X509Certificate[],java.lang.String,java.lang.Class,java.lang.Object)
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
com.esotericsoftware.kryo.util.IntMap: int hash2(int)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior()
androidx.recyclerview.widget.RecyclerView: void onSizeChanged(int,int,int,int)
org.conscrypt.Platform: Platform()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleMargin()
io.paperdb.R: R()
org.conscrypt.SSLNullSession: java.lang.String getPeerHost()
com.esotericsoftware.kryo.io.ByteBufferOutput: void writeAscii_slow(java.lang.String,int)
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeStringField: void copy(java.lang.Object,java.lang.Object)
org.conscrypt.OpenSSLEvpCipherAES$AES$CBC$PKCS5Padding: OpenSSLEvpCipherAES$AES$CBC$PKCS5Padding()
androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()
com.esotericsoftware.kryo.io.Input: void setPosition(int)
com.esotericsoftware.kryo.serializers.DefaultSerializers$KryoSerializableSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,com.esotericsoftware.kryo.KryoSerializable)
com.esotericsoftware.kryo.io.ByteBufferInputStream: int available()
com.esotericsoftware.kryo.util.ObjectMap$Values: java.lang.Object next()
com.google.android.material.chip.Chip: void setChipIconSize(float)
com.esotericsoftware.kryo.util.ObjectMap: void putStash(java.lang.Object,java.lang.Object)
com.esotericsoftware.kryo.util.IdentityMap: com.esotericsoftware.kryo.util.IdentityMap$Keys keys()
org.conscrypt.NativeSslSession$Impl: boolean isValid()
org.conscrypt.Conscrypt: void setUseEngineSocket(javax.net.ssl.SSLSocketFactory,boolean)
org.conscrypt.OpenSSLAeadCipherAES$GCM_SIV$AES_256: OpenSSLAeadCipherAES$GCM_SIV$AES_256()
com.esotericsoftware.kryo.io.Input: Input(int)
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeBooleanField: void read(com.esotericsoftware.kryo.io.Input,java.lang.Object)
com.esotericsoftware.reflectasm.FieldAccess: int getIndex(java.lang.String)
com.esotericsoftware.kryo.io.ByteBufferInput: void setLimit(int)
com.esotericsoftware.kryo.util.ObjectMap: void removeStashIndex(int)
com.esotericsoftware.kryo.io.ByteBufferInput: int readByteUnsigned()
com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.Registration register(java.lang.Class,int)
org.conscrypt.SSLParametersImpl$PSKCallbacks: java.lang.String chooseServerPSKIdentityHint(org.conscrypt.PSKKeyManager)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()
com.esotericsoftware.kryo.Kryo: void setDefaultSerializer(java.lang.Class)
io.paperdb.Paper: boolean exist(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
org.conscrypt.OpenSSLCipherChaCha20: int updateInternal(byte[],int,int,byte[],int,int)
com.esotericsoftware.kryo.serializers.DefaultSerializers$BigIntegerSerializer: java.math.BigInteger read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.google.android.material.chip.Chip: void setChipIconResource(int)
com.esotericsoftware.reflectasm.FieldAccess: short getShort(java.lang.Object,int)
org.conscrypt.NativeCrypto: int EVP_DigestInit_ex(org.conscrypt.NativeRef$EVP_MD_CTX,long)
org.conscrypt.OpenSSLCipher: byte[] engineGetIV()
org.conscrypt.AbstractConscryptEngine: javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer,java.nio.ByteBuffer)
com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField: FieldSerializer$CachedField()
org.conscrypt.NativeCrypto: int SSL_pending_written_bytes_in_BIO(long)
de.javakaffee.kryoserializers.EnumSetSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.util.EnumSet)
com.google.android.material.theme.MaterialComponentsViewInflater: androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet)
org.conscrypt.OpenSSLCipherRSA: byte[] engineUpdate(byte[],int,int)
org.conscrypt.OpenSSLEvpCipherAES$AES_256$CBC$NoPadding: OpenSSLEvpCipherAES$AES_256$CBC$NoPadding()
org.conscrypt.Conscrypt: void setDefaultBufferAllocator(org.conscrypt.BufferAllocator)
org.conscrypt.ConscryptEngineSocket$SSLInputStream: int available()
com.esotericsoftware.kryo.util.IdentityObjectIntMap: IdentityObjectIntMap()
org.conscrypt.ConscryptEngine: int getPeerPort()
com.esotericsoftware.kryo.io.Output: Output()
com.esotericsoftware.kryo.serializers.FieldSerializer: java.lang.Object createCopy(com.esotericsoftware.kryo.Kryo,java.lang.Object)
com.esotericsoftware.kryo.io.ByteBufferInput: boolean getVarIntsEnabled()
com.esotericsoftware.kryo.io.ByteBufferInput: void readBytes(byte[],int,int)
org.conscrypt.OpenSSLRSAKeyFactory: java.security.Key engineTranslateKey(java.security.Key)
org.conscrypt.ChainStrengthAnalyzer: void check(java.security.cert.X509Certificate[])
com.esotericsoftware.kryo.pool.KryoPool: void release(com.esotericsoftware.kryo.Kryo)
de.javakaffee.kryoserializers.SubListSerializers$ArrayListSubListSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.OpenSSLAeadCipherAES$GCM$AES_128: void checkSupportedKeySize(int)
com.esotericsoftware.kryo.serializers.DefaultSerializers$FloatSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
org.conscrypt.NativeCrypto: byte[] EC_KEY_get_private_key(org.conscrypt.NativeRef$EVP_PKEY)
org.conscrypt.OpenSSLCipherRSA$OAEP$SHA512: OpenSSLCipherRSA$OAEP$SHA512()
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: KitKatPlatformOpenSSLSocketImplAdapter(org.conscrypt.AbstractConscryptSocket)
org.conscrypt.CertBlacklist: boolean isSerialNumberBlackListed(java.math.BigInteger)
io.paperdb.Book: java.util.List getAllKeys()
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: void setUseSessionTickets(boolean)
org.conscrypt.ct.DigitallySigned$SignatureAlgorithm: org.conscrypt.ct.DigitallySigned$SignatureAlgorithm valueOf(int)
com.esotericsoftware.kryo.serializers.TimeSerializers$LocalDateSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.time.LocalDate)
com.esotericsoftware.reflectasm.MethodAccess: int getIndex(java.lang.String,java.lang.Class[])
org.conscrypt.OpenSSLAeadCipherChaCha20: OpenSSLAeadCipherChaCha20()
com.esotericsoftware.reflectasm.FieldAccess: char getChar(java.lang.Object,int)
org.conscrypt.OpenSSLEvpCipherAES$AES$ECB$NoPadding: OpenSSLEvpCipherAES$AES$ECB$NoPadding()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
org.conscrypt.NativeCrypto: long SSL_CTX_new()
org.conscrypt.KeyGeneratorImpl$ARC4: KeyGeneratorImpl$ARC4()
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection$5: UnmodifiableCollectionsSerializer$UnmodifiableCollection$5(java.lang.String,int,java.lang.Class,java.lang.reflect.Field)
org.conscrypt.ActiveSession: java.lang.String getApplicationProtocol()
androidx.recyclerview.widget.RecyclerView: void initAdapterManager()
de.javakaffee.kryoserializers.FieldAnnotationAwareSerializer: void removeFields()
org.conscrypt.OpenSSLX509CRLEntry: boolean hasExtensions()
org.conscrypt.ConscryptEngine: javax.net.ssl.SSLSession getSession()
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: void connect(java.net.SocketAddress)
org.conscrypt.OpenSSLCipher: byte[] engineDoFinal(byte[],int,int)
org.conscrypt.BaseOpenSSLSocketAdapterFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
org.conscrypt.OpenSSLCipher: byte[] engineWrap(java.security.Key)
org.conscrypt.ConscryptFileDescriptorSocket: org.conscrypt.ConscryptSession access$400(org.conscrypt.ConscryptFileDescriptorSocket)
org.conscrypt.OpenSSLX509CRL: java.util.Set getNonCriticalExtensionOIDs()
org.conscrypt.NativeSslSession$Impl: int getPeerPort()
com.esotericsoftware.kryo.io.ByteBufferInput: ByteBufferInput(java.io.InputStream)
org.conscrypt.OpenSSLEvpCipher: java.lang.String getCipherName(int,org.conscrypt.OpenSSLCipher$Mode)
org.conscrypt.KeyGeneratorImpl$ChaCha20: KeyGeneratorImpl$ChaCha20()
de.javakaffee.kryoserializers.CopyForIterateCollectionSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.Java8EngineWrapper: javax.net.ssl.SSLEngine getDelegate(javax.net.ssl.SSLEngine)
org.conscrypt.ct.SignedCertificateTimestamp: org.conscrypt.ct.SignedCertificateTimestamp decode(byte[],org.conscrypt.ct.SignedCertificateTimestamp$Origin)
org.conscrypt.ConscryptEngineSocket: java.lang.Object access$900(org.conscrypt.ConscryptEngineSocket)
com.esotericsoftware.kryo.serializers.ClosureSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.io.UnsafeOutput: void writeInts(int[],boolean)
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
com.esotericsoftware.kryo.io.ByteBufferInput: int readInt(boolean)
com.esotericsoftware.kryo.Kryo$DefaultInstantiatorStrategy: Kryo$DefaultInstantiatorStrategy()
org.conscrypt.NativeSslSession$Impl$1: int getPacketBufferSize()
org.conscrypt.SSLNullSession: void invalidate()
org.conscrypt.OpenSSLAeadCipher: void expand(int)
com.esotericsoftware.kryo.serializers.ObjectField: java.lang.Object getField(java.lang.Object)
org.conscrypt.OpenSSLX509CertificateFactory$2: java.lang.Object fromX509PemInputStream(java.io.InputStream)
com.esotericsoftware.kryo.serializers.DefaultSerializers$EnumSerializer: java.lang.Enum read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpecResource(int)
org.conscrypt.OpenSSLCipher$Mode: org.conscrypt.OpenSSLCipher$Mode getNormalized(java.lang.String)
org.conscrypt.OpenSSLAeadCipher: int getOutputSizeForUpdate(int)
com.esotericsoftware.kryo.util.IdentityMap: java.lang.Object getStash(java.lang.Object,java.lang.Object)
androidx.recyclerview.widget.RecyclerView: void startInterceptRequestLayout()
com.esotericsoftware.kryo.serializers.ObjectField$ObjectCharField: java.lang.Object getField(java.lang.Object)
org.conscrypt.SSLClientSessionCache: byte[] getSessionData(java.lang.String,int)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: boolean getNeedClientAuth()
org.conscrypt.PeerInfoProvider: PeerInfoProvider()
org.conscrypt.OpenSSLAeadCipherAES$GCM: OpenSSLAeadCipherAES$GCM()
androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
io.paperdb.DbStoragePlainFile: java.lang.Object readContent(java.io.File,com.esotericsoftware.kryo.Kryo)
org.conscrypt.OpenSSLCipherRSA: int engineDoFinal(byte[],int,int,byte[],int)
org.conscrypt.OpenSSLX509Certificate: java.lang.String toString()
org.conscrypt.OpenSSLECPrivateKey: org.conscrypt.OpenSSLKey wrapPlatformKey(java.security.interfaces.ECPrivateKey)
org.conscrypt.ConscryptEngine: int pendingOutboundEncryptedBytes()
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
org.conscrypt.ConscryptFileDescriptorSocket: void setSSLParameters(javax.net.ssl.SSLParameters)
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
org.conscrypt.NativeCrypto: void SSL_enable_signed_cert_timestamps(long,org.conscrypt.NativeSsl)
com.google.android.material.checkbox.MaterialCheckBox: void setUseMaterialThemeColors(boolean)
com.esotericsoftware.kryo.serializers.ObjectField$ObjectIntField: void copy(java.lang.Object,java.lang.Object)
com.google.android.material.chip.ChipGroup: void setDividerDrawableHorizontal(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
com.esotericsoftware.kryo.io.UnsafeOutput: void writeChars(char[])
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer: void setElementsAreSameType(boolean)
org.conscrypt.NativeCrypto: void EVP_PKEY_CTX_set_rsa_oaep_md(long,long)
com.esotericsoftware.kryo.serializers.DefaultSerializers$CollectionsSingletonListSerializer: java.util.List read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior(android.content.Context,android.util.AttributeSet)
com.esotericsoftware.reflectasm.MethodAccess: java.lang.Object invoke(java.lang.Object,java.lang.String,java.lang.Class[],java.lang.Object[])
org.conscrypt.ConscryptEngine: java.lang.String[] getEnabledCipherSuites()
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCardBackgroundColor()
org.conscrypt.NativeCrypto: byte[] X509_get_issuer_name(long,org.conscrypt.OpenSSLX509Certificate)
org.conscrypt.ct.Serialization: void writeNumber(java.io.OutputStream,long,int)
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer: java.lang.reflect.Field access$100()
com.google.android.material.chip.Chip: void setCheckable(boolean)
com.esotericsoftware.kryo.io.Input: void readBytes(byte[])
androidx.recyclerview.widget.RecyclerView: void stopNestedScroll()
com.esotericsoftware.kryo.io.InputChunked: InputChunked(java.io.InputStream,int)
org.conscrypt.AbstractConscryptSocket: boolean getOOBInline()
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()
org.conscrypt.OpenSSLX509CRL: void verify(java.security.PublicKey)
com.esotericsoftware.kryo.Kryo: void addDefaultSerializer(java.lang.Class,java.lang.Class)
de.javakaffee.kryoserializers.RegexSerializer: java.util.regex.Pattern read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
de.javakaffee.kryoserializers.SubListSerializers$JavaUtilSubListSerializer: java.util.List copy(com.esotericsoftware.kryo.Kryo,java.util.List)
com.esotericsoftware.kryo.io.ByteBufferInputStream: int read()
org.conscrypt.OpenSSLSocketFactoryImpl: java.lang.String[] getSupportedCipherSuites()
org.conscrypt.AbstractConscryptSocket: java.net.SocketAddress getLocalSocketAddress()
com.google.android.material.chip.Chip: float getIconEndPadding()
com.esotericsoftware.kryo.serializers.ObjectField: void read(com.esotericsoftware.kryo.io.Input,java.lang.Object)
androidx.recyclerview.widget.RecyclerView: void addAnimatingView(androidx.recyclerview.widget.RecyclerView$ViewHolder)
org.conscrypt.ConscryptFileDescriptorSocket: boolean getNeedClientAuth()
com.esotericsoftware.kryo.Kryo: java.lang.Object copyShallow(java.lang.Object)
org.conscrypt.OpenSSLAeadCipher: int getOutputSizeForFinal(int)
org.conscrypt.Java7ExtendedSSLSession: byte[] getPeerSignedCertificateTimestamp()
com.esotericsoftware.kryo.Kryo: void addDefaultSerializer(java.lang.Class,com.esotericsoftware.kryo.factories.SerializerFactory)
org.conscrypt.OpenSSLContextImpl$TLSv12: OpenSSLContextImpl$TLSv12()
org.conscrypt.ExternalSession: ExternalSession(org.conscrypt.ExternalSession$Provider)
com.esotericsoftware.reflectasm.MethodAccess: java.lang.String[] getMethodNames()
org.conscrypt.OpenSSLX509Certificate: java.util.Set getNonCriticalExtensionOIDs()
com.google.android.material.textfield.TextInputLayout: int getErrorTextCurrentColor()
org.conscrypt.OpenSSLMessageDigestJDK: OpenSSLMessageDigestJDK(long,int)
com.esotericsoftware.kryo.util.IdentityMap$Keys: IdentityMap$Keys(com.esotericsoftware.kryo.util.IdentityMap)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: java.nio.channels.SocketChannel getChannel()
com.esotericsoftware.kryo.serializers.TimeSerializers$LocalDateSerializer: TimeSerializers$LocalDateSerializer()
org.conscrypt.OpenSSLX509Certificate: java.util.Collection getSubjectAlternativeNames()
de.javakaffee.kryoserializers.CollectionsEmptyListSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
com.esotericsoftware.kryo.io.Output: int intLength(int,boolean)
androidx.core.app.ComponentActivity: ComponentActivity()
org.conscrypt.OpenSSLX509Certificate: byte[] getEncoded()
com.esotericsoftware.kryo.serializers.BeanSerializer$1: int compare(java.lang.Object,java.lang.Object)
org.conscrypt.OpenSSLBIOSink: OpenSSLBIOSink(java.io.ByteArrayOutputStream)
org.conscrypt.Platform: org.conscrypt.OpenSSLKey wrapRsaKey(java.security.PrivateKey)
com.esotericsoftware.kryo.serializers.TimeSerializers$PeriodSerializer: java.time.Period read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.google.android.material.textfield.TextInputLayout: void setHelperTextColor(android.content.res.ColorStateList)
com.esotericsoftware.kryo.io.Input: float[] readFloats(int)
org.conscrypt.OpenSSLEvpCipherAES: java.lang.String getCipherName(int,org.conscrypt.OpenSSLCipher$Mode)
com.esotericsoftware.kryo.io.ByteBufferOutput: void writeBytes(byte[],int,int)
com.esotericsoftware.kryo.pool.KryoPoolQueueImpl: int size()
de.javakaffee.kryoserializers.CollectionsSingletonListSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.io.Output: void close()
com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()
com.google.android.material.chip.Chip: void setCloseIconEnabledResource(int)
org.conscrypt.PSSParameters: void engineInit(java.security.spec.AlgorithmParameterSpec)
com.esotericsoftware.kryo.util.IdentityMap$Keys: java.lang.Object next()
org.conscrypt.GCMParameters: GCMParameters(int,byte[])
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmStringField: void copy(java.lang.Object,java.lang.Object)
org.conscrypt.NativeCrypto: void setHasApplicationProtocolSelector(long,org.conscrypt.NativeSsl,boolean)
org.conscrypt.OpenSSLMessageDigestJDK: void ensureDigestInitializedInContext()
androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])
com.esotericsoftware.kryo.StreamFactory: com.esotericsoftware.kryo.io.Output getOutput()
de.javakaffee.kryoserializers.jodatime.JodaLocalDateSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,org.joda.time.LocalDate)
org.conscrypt.ConscryptFileDescriptorSocket: java.io.OutputStream getOutputStream()
io.paperdb.Book: long lastModified(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setHintTextColor(android.content.res.ColorStateList)
org.conscrypt.OpenSSLSocketFactoryImpl: java.net.Socket createSocket(java.lang.String,int)
org.conscrypt.OpenSSLCipherRSA: void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)
com.google.android.material.chip.Chip: void setMaxWidth(int)
org.conscrypt.OpenSSLEvpCipherAES$AES$ECB: OpenSSLEvpCipherAES$AES$ECB(org.conscrypt.OpenSSLCipher$Padding)
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
com.esotericsoftware.kryo.io.UnsafeInput: boolean getVarIntsEnabled()
androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollRange()
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeCachedField: UnsafeCacheFields$UnsafeCachedField(long)
com.esotericsoftware.kryo.io.UnsafeOutput: int writeLong(long,boolean)
org.conscrypt.Java7ExtendedSSLSession: java.lang.String[] getLocalSupportedSignatureAlgorithms()
org.conscrypt.BaseOpenSSLSocketAdapterFactory: java.lang.String[] getSupportedCipherSuites()
de.javakaffee.kryoserializers.UUIDSerializer: UUIDSerializer()
org.conscrypt.OpenSSLKey: OpenSSLKey(long)
org.conscrypt.ConscryptFileDescriptorSocket: java.io.InputStream getInputStream()
de.javakaffee.kryoserializers.CollectionsEmptySetSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.util.Set)
com.esotericsoftware.kryo.io.Input: boolean eof()
org.conscrypt.TrustManagerImpl: void setOcspResponses(java.security.cert.PKIXParameters,java.security.cert.X509Certificate,byte[])
org.conscrypt.ConscryptEngine: java.nio.ByteBuffer getOrCreateLazyDirectBuffer()
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()
io.paperdb.Paper: io.paperdb.Book book(java.lang.String)
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedScroll(int,int,int,int,int[])
com.esotericsoftware.kryo.ClassResolver: com.esotericsoftware.kryo.Registration getRegistration(int)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: void handshakeCompleted()
com.esotericsoftware.kryo.io.Output: void writeDouble(double)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getHideMotionSpec()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getRippleColor()
com.esotericsoftware.kryo.serializers.DefaultSerializers$KryoSerializableSerializer: com.esotericsoftware.kryo.KryoSerializable read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setChipStrokeColor(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setLayoutDirection(int)
de.javakaffee.kryoserializers.dexx.ListSerializer: void registerSerializers(com.esotericsoftware.kryo.Kryo)
org.conscrypt.Java7ExtendedSSLSession: java.security.cert.X509Certificate[] getPeerCertificates()
org.conscrypt.ct.CTLogInfo: org.conscrypt.ct.VerifiedSCT$Status verifySingleSCT(org.conscrypt.ct.SignedCertificateTimestamp,org.conscrypt.ct.CertificateEntry)
org.conscrypt.ConscryptEngine: void resetSingleDstBuffer()
com.esotericsoftware.kryo.serializers.ObjectField$ObjectLongField: java.lang.Object getField(java.lang.Object)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: void connect(java.net.SocketAddress,int)
com.esotericsoftware.kryo.io.ByteBufferOutput: void writeInt(int)
org.conscrypt.Java8EngineSocket: Java8EngineSocket(java.net.Socket,java.lang.String,int,boolean,org.conscrypt.SSLParametersImpl)
org.conscrypt.OpenSSLSignature: boolean engineVerify(byte[])
com.esotericsoftware.kryo.ReferenceResolver: int getWrittenId(java.lang.Object)
org.conscrypt.Platform: org.conscrypt.ConscryptEngineSocket createEngineSocket(java.lang.String,int,java.net.InetAddress,int,org.conscrypt.SSLParametersImpl)
com.esotericsoftware.kryo.io.ByteBufferOutputStream: java.nio.ByteBuffer getByteBuffer()
com.esotericsoftware.kryo.serializers.ObjectField$ObjectFloatField: java.lang.Object getField(java.lang.Object)
org.conscrypt.OpenSSLRSAPrivateCrtKey: java.math.BigInteger getCrtCoefficient()
io.paperdb.DbStoragePlainFile$2: DbStoragePlainFile$2(io.paperdb.DbStoragePlainFile)
com.esotericsoftware.kryo.io.KryoDataInput: int skipBytes(int)
com.esotericsoftware.kryo.util.FastestStreamFactory: com.esotericsoftware.kryo.io.Output getOutput(byte[])
com.google.android.material.button.MaterialButton: void setRippleColor(android.content.res.ColorStateList)
org.conscrypt.OpenSSLSignature$SHA512RSA: OpenSSLSignature$SHA512RSA()
androidx.recyclerview.widget.RecyclerView: void processDataSetCompletelyChanged(boolean)
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
de.javakaffee.kryoserializers.jodatime.IdentifiableChronology: IdentifiableChronology(java.lang.String,int,java.lang.String,org.joda.time.Chronology)
org.conscrypt.OpenSSLSocketImpl: java.io.OutputStream getOutputStream()
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: boolean isBound()
com.esotericsoftware.kryo.io.UnsafeMemoryInput: void updateBufferAddress()
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
org.conscrypt.ConscryptFileDescriptorSocket: void setHostname(java.lang.String)
com.google.android.material.textfield.TextInputLayout: android.widget.EditText getEditText()
com.esotericsoftware.kryo.util.ListReferenceResolver: void setKryo(com.esotericsoftware.kryo.Kryo)
org.conscrypt.NativeCrypto: void X509_verify(long,org.conscrypt.OpenSSLX509Certificate,org.conscrypt.NativeRef$EVP_PKEY)
org.conscrypt.NativeRef: void doFree(long)
org.conscrypt.ConscryptFileDescriptorSocket: void assertReadableOrWriteableState()
org.conscrypt.OpenSSLCipher: int engineGetBlockSize()
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior()
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
org.conscrypt.OpenSSLRSAPrivateKey: OpenSSLRSAPrivateKey(org.conscrypt.OpenSSLKey,byte[][])
org.conscrypt.AbstractConscryptSocket$1: AbstractConscryptSocket$1(org.conscrypt.AbstractConscryptSocket)
com.google.android.material.theme.MaterialComponentsViewInflater: androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet)
com.esotericsoftware.kryo.util.ObjectMap$MapIterator: void advance()
org.conscrypt.AbstractConscryptSocket: AbstractConscryptSocket(java.net.InetAddress,int,java.net.InetAddress,int)
de.javakaffee.kryoserializers.CollectionsSingletonMapSerializer: CollectionsSingletonMapSerializer()
org.conscrypt.ConscryptFileDescriptorSocket: ConscryptFileDescriptorSocket(org.conscrypt.SSLParametersImpl)
de.javakaffee.kryoserializers.RegexSerializer: RegexSerializer()
androidx.recyclerview.widget.RecyclerView: void jumpToPositionForSmoothScroller(int)
org.conscrypt.OpenSSLCipherRSA: void engineSetPadding(java.lang.String)
org.conscrypt.R: R()
org.conscrypt.OpenSSLContextImpl: org.conscrypt.OpenSSLContextImpl getPreferred()
com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField: java.lang.String toString()
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: boolean isOutputShutdown()
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmObjectField: void setField(java.lang.Object,java.lang.Object)
org.conscrypt.ConscryptEngineSocket: javax.net.ssl.SSLParameters getSSLParameters()
org.conscrypt.SSLParametersImpl: void setEnabledProtocols(java.lang.String[])
com.esotericsoftware.kryo.Serializer: java.lang.Object copy(com.esotericsoftware.kryo.Kryo,java.lang.Object)
org.conscrypt.OpenSSLKey: OpenSSLKey(long,boolean)
org.conscrypt.ConscryptFileDescriptorSocket: int clientPSKKeyRequested(java.lang.String,byte[],byte[])
org.conscrypt.OpenSSLServerSocketFactoryImpl: java.net.ServerSocket createServerSocket(int)
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
org.conscrypt.OpenSSLX509CRL: javax.security.auth.x500.X500Principal getIssuerX500Principal()
com.esotericsoftware.kryo.io.ByteBufferOutput: ByteBufferOutput(int)
org.conscrypt.ConscryptFileDescriptorSocket: void waitForHandshake()
com.esotericsoftware.kryo.serializers.BlowfishSerializer: javax.crypto.Cipher getCipher(int)
org.conscrypt.ConscryptEngine: org.conscrypt.ConscryptSession provideSession()
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$LongArraySerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.NativeSslSession$Impl: javax.net.ssl.SSLSession toSSLSession()
com.esotericsoftware.kryo.io.UnsafeInput: char readChar()
com.esotericsoftware.kryo.serializers.TimeSerializers$LocalTimeSerializer: TimeSerializers$LocalTimeSerializer()
org.conscrypt.Platform: boolean serverNamePermittedInternal(org.conscrypt.SSLParametersImpl,java.lang.String)
org.conscrypt.TrustedCertificateIndex: java.security.cert.TrustAnchor index(java.security.cert.X509Certificate)
org.conscrypt.OpenSSLX509CRLEntry: java.math.BigInteger getSerialNumber()
org.conscrypt.DESEDESecretKeyFactory: javax.crypto.SecretKey engineGenerateSecret(java.security.spec.KeySpec)
org.conscrypt.ConscryptServerSocket: void setChannelIdEnabled(boolean)
org.conscrypt.ct.Serialization: void writeFixedBytes(java.io.OutputStream,byte[])
org.conscrypt.ConscryptEngineSocket$2: void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String,java.net.Socket)
com.esotericsoftware.kryo.serializers.MapSerializer: MapSerializer()
org.conscrypt.NativeSsl: void setCertificateValidation()
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmBooleanField: void write(com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.pool.SoftReferenceQueue: boolean offer(java.lang.Object)
androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator)
org.conscrypt.SSLParametersImpl: java.util.Collection getSNIMatchers()
org.conscrypt.OpenSSLAeadCipherChaCha20: int getCipherBlockSize()
de.javakaffee.kryoserializers.FieldAnnotationAwareSerializer: boolean isRemove(java.lang.reflect.Field)
org.conscrypt.Platform: void checkServerTrusted(javax.net.ssl.X509TrustManager,java.security.cert.X509Certificate[],java.lang.String,org.conscrypt.AbstractConscryptSocket)
com.esotericsoftware.kryo.util.Util: int getDimensionCount(java.lang.Class)
com.google.android.material.bottomappbar.BottomAppBar: void setBackgroundTint(android.content.res.ColorStateList)
com.esotericsoftware.kryo.serializers.DefaultSerializers$LocaleSerializer: java.util.Locale create(java.lang.String,java.lang.String,java.lang.String)
org.conscrypt.SSLParametersImpl: SSLParametersImpl(org.conscrypt.ClientSessionContext,org.conscrypt.ServerSessionContext,javax.net.ssl.X509KeyManager,org.conscrypt.PSKKeyManager,javax.net.ssl.X509TrustManager,org.conscrypt.SSLParametersImpl)
com.esotericsoftware.kryo.Kryo: Kryo()
com.esotericsoftware.kryo.Kryo: boolean isWarnUnregisteredClasses()
com.esotericsoftware.kryo.serializers.JavaSerializer$ObjectInputStreamWithKryoClassLoader: JavaSerializer$ObjectInputStreamWithKryoClassLoader(java.io.InputStream,com.esotericsoftware.kryo.Kryo)
com.esotericsoftware.kryo.Kryo: void setInstantiatorStrategy(org.objenesis.strategy.InstantiatorStrategy)
org.conscrypt.Java7ExtendedSSLSession: Java7ExtendedSSLSession(org.conscrypt.ExternalSession)
org.conscrypt.ECParameters: java.lang.String engineToString()
com.esotericsoftware.kryo.serializers.DefaultSerializers$StringBufferSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getIconTintMode()
com.google.android.material.button.MaterialButton: void setBackgroundResource(int)
com.google.android.material.chip.Chip: android.text.TextUtils$TruncateAt getEllipsize()
org.conscrypt.Platform: org.conscrypt.ct.CTPolicy newDefaultPolicy(org.conscrypt.ct.CTLogStore)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: void addHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener)
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeLongField: UnsafeCacheFields$UnsafeLongField(java.lang.reflect.Field)
com.google.android.material.internal.FlowLayout: void setLineSpacing(int)
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior: BaseTransientBottomBar$Behavior()
org.conscrypt.NativeCrypto: int ECDH_compute_key(byte[],int,org.conscrypt.NativeRef$EVP_PKEY,org.conscrypt.NativeRef$EVP_PKEY)
androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable getStatusBarBackground()
org.conscrypt.OpenSSLCipherRSA: java.security.Key engineUnwrap(byte[],java.lang.String,int)
org.conscrypt.KeyGeneratorImpl: void engineInit(int,java.security.SecureRandom)
org.conscrypt.ct.CTVerifier: void markSCTsAsInvalid(java.util.List,org.conscrypt.ct.CTVerificationResult)
com.esotericsoftware.kryo.io.Output: void writeDoubles(double[])
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int)
de.javakaffee.kryoserializers.dexx.MapSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
de.javakaffee.kryoserializers.FieldAnnotationAwareSerializer: boolean addAnnotation(java.lang.Class)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
com.esotericsoftware.kryo.serializers.DefaultSerializers$LocaleSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.util.Locale)
androidx.appcompat.app.AppCompatViewInflater: AppCompatViewInflater()
com.esotericsoftware.kryo.io.Input: byte readByte()
org.conscrypt.Java8EngineWrapper: org.conscrypt.ApplicationProtocolSelector toApplicationProtocolSelector(java.util.function.BiFunction)
com.esotericsoftware.kryo.serializers.TimeSerializers: void addDefaultSerializers(com.esotericsoftware.kryo.Kryo)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
org.conscrypt.ConscryptFileDescriptorSocket: void setSoWriteTimeout(int)
org.conscrypt.EvpMdRef$SHA256: EvpMdRef$SHA256()
org.conscrypt.ConscryptServerSocket: ConscryptServerSocket(int,int,java.net.InetAddress,org.conscrypt.SSLParametersImpl)
org.conscrypt.NativeSslSession$Impl$1: byte[] getId()
com.google.android.material.chip.Chip: float getIconStartPadding()
org.conscrypt.AbstractSessionContext$1: boolean removeEldestEntry(java.util.Map$Entry)
de.javakaffee.kryoserializers.SubListSerializers$ArrayListSubListSerializer: java.lang.Object copy(com.esotericsoftware.kryo.Kryo,java.lang.Object)
com.esotericsoftware.kryo.Kryo$DefaultInstantiatorStrategy: org.objenesis.strategy.InstantiatorStrategy getFallbackInstantiatorStrategy()
com.esotericsoftware.kryo.util.IntMap: IntMap(com.esotericsoftware.kryo.util.IntMap)
com.esotericsoftware.kryo.Serializer: boolean isImmutable()
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: void setEnabledProtocols(java.lang.String[])
com.google.android.material.chip.Chip: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setStartIconVisible(boolean)
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
androidx.appcompat.app.AppCompatViewInflater: android.view.View createView(android.content.Context,java.lang.String,android.util.AttributeSet)
org.conscrypt.OpenSSLRSAPrivateCrtKey: void writeObject(java.io.ObjectOutputStream)
com.esotericsoftware.kryo.io.FastInput: FastInput()
androidx.appcompat.app.AppCompatActivity: AppCompatActivity()
org.conscrypt.PeerInfoProvider: int getPort()
com.esotericsoftware.reflectasm.FieldAccess: void insertConstructor(org.objectweb.asm.ClassWriter)
org.conscrypt.OpenSSLBIOSource: OpenSSLBIOSource(org.conscrypt.OpenSSLBIOInputStream)
org.conscrypt.NativeCrypto: int EVP_PKEY_type(org.conscrypt.NativeRef$EVP_PKEY)
com.esotericsoftware.kryo.serializers.TimeSerializers$ZoneIdSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.OidData: OidData()
org.conscrypt.SSLParametersImpl: org.conscrypt.SSLParametersImpl cloneWithTrustManager(javax.net.ssl.X509TrustManager)
androidx.appcompat.widget.DropDownListView: void setSelector(android.graphics.drawable.Drawable)
org.conscrypt.KeyManagerFactoryImpl: void engineInit(java.security.KeyStore,char[])
org.conscrypt.OpenSSLAeadCipherChaCha20: long getEVP_AEAD(int)
com.esotericsoftware.kryo.io.ByteBufferInput: int[] readInts(int)
io.paperdb.DbStoragePlainFile$1: com.esotericsoftware.kryo.Kryo initialValue()
de.javakaffee.kryoserializers.FieldAnnotationAwareSerializer: boolean removeAnnotation(java.lang.Class)
com.esotericsoftware.kryo.io.ByteBufferOutput: int writeDouble(double,double,boolean)
com.esotericsoftware.reflectasm.MethodAccess: MethodAccess()
com.esotericsoftware.kryo.serializers.OptionalSerializers$OptionalLongSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.HandshakeListener: void onHandshakeFinished()
org.conscrypt.OpenSSLECGroupContext: int hashCode()
org.conscrypt.BaseOpenSSLSocketAdapterFactory: java.net.Socket wrap(org.conscrypt.OpenSSLSocketImpl)
com.esotericsoftware.kryo.serializers.DefaultSerializers$StringBuilderSerializer: DefaultSerializers$StringBuilderSerializer()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView: void cancelScroll()
org.conscrypt.SSLParametersImpl: javax.net.ssl.X509KeyManager createDefaultX509KeyManager()
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer: java.lang.reflect.Field access$100()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.drawable.Drawable getContentBackground()
com.esotericsoftware.kryo.serializers.FieldSerializer$Bind: java.lang.Class value()
de.javakaffee.kryoserializers.guava.LinkedListMultimapSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.reflectasm.MethodAccess: java.lang.Object invoke(java.lang.Object,java.lang.String,java.lang.Object[])
com.esotericsoftware.kryo.serializers.DefaultSerializers$ShortSerializer: java.lang.Short read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer: void registerSerializers(com.esotericsoftware.kryo.Kryo)
org.conscrypt.FileClientSessionCache$Impl: void makeRoom()
org.conscrypt.TrustManagerImpl: void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String,java.net.Socket)
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
org.conscrypt.ConscryptFileDescriptorSocket: void setApplicationProtocolSelector(org.conscrypt.ApplicationProtocolSelectorAdapter)
org.conscrypt.ConscryptEngine: boolean getWantClientAuth()
org.conscrypt.Platform: java.lang.String getSniHostnameFromParams(javax.net.ssl.SSLParameters)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumWidth()
com.esotericsoftware.kryo.util.IntArray: void sort()
org.conscrypt.Conscrypt: void setChannelIdPrivateKey(javax.net.ssl.SSLEngine,java.security.PrivateKey)
androidx.recyclerview.widget.RecyclerView: boolean access$200(androidx.recyclerview.widget.RecyclerView)
org.conscrypt.AbstractSessionContext: org.conscrypt.NativeSslSession getSessionFromPersistentCache(byte[])
org.conscrypt.ConscryptEngineSocket$2: void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String,javax.net.ssl.SSLEngine)
com.esotericsoftware.kryo.io.UnsafeInput: long[] readLongs(int,boolean)
org.conscrypt.ActiveSession: int getPeerPort()
org.conscrypt.AbstractConscryptSocket: java.lang.String toString()
org.conscrypt.OpenSSLContextImpl: javax.net.ssl.SSLEngine engineCreateSSLEngine(java.lang.String,int)
org.conscrypt.ct.CertificateEntry: org.conscrypt.ct.CertificateEntry$LogEntryType getEntryType()
org.conscrypt.OpenSSLX509Certificate: byte[] getSigAlgParams()
org.conscrypt.NativeCrypto: long SSL_clear_mode(long,org.conscrypt.NativeSsl,long)
org.conscrypt.NativeCrypto: java.lang.String[] get_X509_ex_xkusage(long,org.conscrypt.OpenSSLX509Certificate)
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
org.conscrypt.OpenSSLSocketImpl: OpenSSLSocketImpl(java.net.Socket,java.lang.String,int,boolean)
com.esotericsoftware.kryo.serializers.DefaultSerializers$EnumSetSerializer: java.lang.Object copy(com.esotericsoftware.kryo.Kryo,java.lang.Object)
com.esotericsoftware.kryo.io.OutputChunked: OutputChunked(java.io.OutputStream)
com.esotericsoftware.kryo.util.IntMap: com.esotericsoftware.kryo.util.IntMap$Keys keys()
org.conscrypt.OpenSSLServerSocketFactoryImpl: void setUseEngineSocketByDefault(boolean)
org.conscrypt.ConscryptEngineSocket: void setApplicationProtocolSelector(org.conscrypt.ApplicationProtocolSelector)
org.conscrypt.NativeSsl: int doHandshake()
androidx.recyclerview.widget.RecyclerView: void access$100(androidx.recyclerview.widget.RecyclerView,int)
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmCharField: AsmCacheFields$AsmCharField()
org.conscrypt.OpenSSLEvpCipherDESEDE: void checkSupportedMode(org.conscrypt.OpenSSLCipher$Mode)
com.esotericsoftware.kryo.serializers.FieldSerializer: java.lang.Object copy(com.esotericsoftware.kryo.Kryo,java.lang.Object)
org.conscrypt.NativeCrypto$SSLHandshakeCallbacks: int serverPSKKeyRequested(java.lang.String,java.lang.String,byte[])
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
org.conscrypt.ECParameters: java.security.spec.AlgorithmParameterSpec engineGetParameterSpec(java.lang.Class)
org.conscrypt.OpenSSLEvpCipherARC4: java.lang.String getCipherName(int,org.conscrypt.OpenSSLCipher$Mode)
com.esotericsoftware.kryo.Kryo: void setAutoReset(boolean)
de.javakaffee.kryoserializers.protobuf.ProtobufSerializer: ProtobufSerializer()
org.conscrypt.NativeCrypto: long EVP_get_cipherbyname(java.lang.String)
com.esotericsoftware.kryo.util.ObjectMap: java.lang.String toString()
com.esotericsoftware.kryo.serializers.TimeSerializers$OffsetTimeSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.OpenSSLX509Certificate: OpenSSLX509Certificate(long)
com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)
org.conscrypt.OpenSSLECPublicKey: OpenSSLECPublicKey(org.conscrypt.OpenSSLKey)
org.conscrypt.Java8EngineWrapper: void setBufferAllocator(org.conscrypt.BufferAllocator)
org.conscrypt.ConscryptFileDescriptorSocket: int selectApplicationProtocol(byte[])
androidx.recyclerview.widget.RecyclerView: long getChangedHolderKey(androidx.recyclerview.widget.RecyclerView$ViewHolder)
org.conscrypt.Java8EngineWrapper: void setSSLParameters(javax.net.ssl.SSLParameters)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer: void setGenerics(com.esotericsoftware.kryo.Kryo,java.lang.Class[])
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeDoubleField: UnsafeCacheFields$UnsafeDoubleField(java.lang.reflect.Field)
org.conscrypt.io.IoUtils: void throwInterruptedIoException()
de.javakaffee.kryoserializers.jodatime.JodaDateTimeSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,org.joda.time.DateTime)
org.conscrypt.AbstractConscryptEngine: javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[],int,int,java.nio.ByteBuffer)
org.conscrypt.AbstractConscryptEngine: java.lang.String getApplicationProtocol()
org.conscrypt.OpenSSLSocketImpl: void setAlpnProtocols(byte[])
org.conscrypt.DefaultSSLContextImpl: javax.net.ssl.TrustManager[] getTrustManagers()
com.esotericsoftware.kryo.serializers.TimeSerializers$LocalTimeSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpecResource(int)
com.esotericsoftware.kryo.util.DefaultClassResolver: void reset()
org.conscrypt.ConscryptEngineSocket$SSLInputStream: int read()
de.javakaffee.kryoserializers.guava.UnmodifiableNavigableSetSerializer: java.util.NavigableSet read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.google.android.material.chip.Chip: java.lang.CharSequence getCloseIconContentDescription()
com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField: void setCanBeNull(boolean)
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection$6: java.lang.Object create(java.lang.Object)
de.javakaffee.kryoserializers.CollectionsSingletonSetSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.util.Set)
com.esotericsoftware.kryo.serializers.DefaultSerializers$StringBuilderSerializer: java.lang.StringBuilder copy(com.esotericsoftware.kryo.Kryo,java.lang.StringBuilder)
com.esotericsoftware.kryo.serializers.Generics: java.lang.Class getConcreteClass(java.lang.String)
com.esotericsoftware.reflectasm.MethodAccess: java.lang.Class[][] getParameterTypes()
org.conscrypt.NativeCrypto: long EC_POINT_new(org.conscrypt.NativeRef$EC_GROUP)
org.conscrypt.NativeSsl: void shutdown()
org.conscrypt.OpenSSLECKeyPairGenerator: void initialize(int,java.security.SecureRandom)
org.conscrypt.ct.Serialization: byte[] readVariableBytes(java.io.InputStream,int)
org.conscrypt.PeerInfoProvider$1: int getPort()
com.esotericsoftware.kryo.io.UnsafeMemoryInput: short readShort()
org.conscrypt.ConscryptEngine: org.conscrypt.BufferAllocator getDefaultBufferAllocator()
org.conscrypt.ConscryptEngine: void beginHandshakeInternal()
com.esotericsoftware.kryo.pool.KryoPoolQueueImpl: void release(com.esotericsoftware.kryo.Kryo)
org.conscrypt.OpenSSLECGroupContext: boolean equals(java.lang.Object)
com.esotericsoftware.kryo.io.Output: void clear()
com.esotericsoftware.kryo.io.OutputChunked: OutputChunked(java.io.OutputStream,int)
com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.Registration register(com.esotericsoftware.kryo.Registration)
org.conscrypt.NativeCrypto: byte[] EVP_marshal_private_key(org.conscrypt.NativeRef$EVP_PKEY)
org.conscrypt.AbstractConscryptEngine: void setHostname(java.lang.String)
org.conscrypt.OpenSSLX509Certificate: int getBasicConstraints()
org.conscrypt.OpenSSLMac: void engineUpdate(byte)
de.javakaffee.kryoserializers.EnumMapSerializer: java.lang.Class getKeyType(java.util.EnumMap)
com.esotericsoftware.kryo.io.KryoObjectInput: long skip(long)
de.javakaffee.kryoserializers.guava.HashMultimapSerializer: void registerSerializers(com.esotericsoftware.kryo.Kryo)
com.esotericsoftware.reflectasm.AccessClassLoader: boolean areInSameRuntimeClassLoader(java.lang.Class,java.lang.Class)
com.esotericsoftware.kryo.util.IntMap: void resize(int)
org.conscrypt.OpenSSLECPrivateKey: org.conscrypt.OpenSSLKey getOpenSSLKey()
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer: java.lang.reflect.Field access$300()
org.conscrypt.ConscryptFileDescriptorSocket: void setChannelIdEnabled(boolean)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
org.conscrypt.NativeCrypto: java.lang.String SSL_CIPHER_get_kx_name(long)
org.conscrypt.SSLUtils: javax.net.ssl.SSLHandshakeException toSSLHandshakeException(java.lang.Throwable)
org.conscrypt.NativeCrypto: void setApplicationProtocols(long,org.conscrypt.NativeSsl,boolean,byte[])
org.conscrypt.OAEPParameters: void engineInit(byte[],java.lang.String)
com.esotericsoftware.kryo.pool.SoftReferenceQueue: java.util.Iterator iterator()
androidx.appcompat.widget.SearchView: int getImeOptions()
io.paperdb.DbStoragePlainFile: java.lang.String getOriginalFilePath(java.lang.String)
org.conscrypt.NativeCrypto: long EVP_PKEY_encrypt_init(org.conscrypt.NativeRef$EVP_PKEY)
org.conscrypt.ConscryptFileDescriptorSocket: ConscryptFileDescriptorSocket(java.net.InetAddress,int,org.conscrypt.SSLParametersImpl)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: void setSoTimeout(int)
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
com.esotericsoftware.kryo.io.KryoObjectOutput: void writeObject(java.lang.Object)
com.esotericsoftware.kryo.io.ByteBufferInput: char readChar()
org.conscrypt.OpenSSLCipherRSA: int keySizeBytes()
org.conscrypt.OpenSSLX509CRL: void verifyOpenSSL(org.conscrypt.OpenSSLKey)
com.google.android.material.chip.Chip: void setTextEndPaddingResource(int)
org.conscrypt.ConscryptEngineSocket$SSLInputStream: void close()
org.conscrypt.Conscrypt$ProviderBuilder: org.conscrypt.Conscrypt$ProviderBuilder setName(java.lang.String)
com.esotericsoftware.minlog.Log$Logger: void log(int,java.lang.String,java.lang.String,java.lang.Throwable)
org.conscrypt.ConscryptEngine: javax.net.ssl.SSLEngineResult$Status getEngineStatus()
org.conscrypt.Java8FileDescriptorSocket: Java8FileDescriptorSocket(java.net.Socket,java.lang.String,int,boolean,org.conscrypt.SSLParametersImpl)
org.conscrypt.Java7ExtendedSSLSession: int getApplicationBufferSize()
org.conscrypt.ct.SerializationException: SerializationException()
com.esotericsoftware.kryo.Serializer: boolean getAcceptsNull()
io.paperdb.Book: boolean contains(java.lang.String)
com.esotericsoftware.minlog.Log: void warn(java.lang.String,java.lang.String,java.lang.Throwable)
com.google.android.material.internal.FlowLayout: void setItemSpacing(int)
com.esotericsoftware.kryo.serializers.DefaultSerializers: DefaultSerializers()
com.google.android.material.chip.Chip: void setCheckedIconResource(int)
org.conscrypt.Java8FileDescriptorSocket: Java8FileDescriptorSocket(java.lang.String,int,org.conscrypt.SSLParametersImpl)
org.conscrypt.NativeCrypto: long PEM_read_bio_PUBKEY(long)
org.conscrypt.ServerSessionContext: ServerSessionContext()
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmShortField: void write(com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.Java7ExtendedSSLSession: int getPeerPort()
org.conscrypt.NativeCrypto: int X509_NAME_hash_old(javax.security.auth.x500.X500Principal)
com.google.android.material.chip.Chip: void setChipStrokeWidth(float)
io.paperdb.DbStoragePlainFile: java.lang.Object select(java.lang.String)
de.javakaffee.kryoserializers.guava.UnmodifiableNavigableSetSerializer: UnmodifiableNavigableSetSerializer()
org.conscrypt.ApplicationProtocolSelector: java.lang.String selectApplicationProtocol(javax.net.ssl.SSLEngine,java.util.List)
com.google.android.material.chip.ChipGroup: int getChipSpacingHorizontal()
com.esotericsoftware.kryo.io.Output: java.io.OutputStream getOutputStream()
org.conscrypt.OpenSSLSignature$SHA224ECDSA: OpenSSLSignature$SHA224ECDSA()
org.conscrypt.PSSParameters: PSSParameters()
com.esotericsoftware.kryo.util.IdentityObjectIntMap: IdentityObjectIntMap(int,float)
org.conscrypt.OpenSSLSocketFactoryImpl: OpenSSLSocketFactoryImpl()
de.javakaffee.kryoserializers.guava.ImmutableListSerializer: ImmutableListSerializer()
androidx.recyclerview.widget.RecyclerView: void requestChildFocus(android.view.View,android.view.View)
com.esotericsoftware.kryo.serializers.DefaultSerializers$CharSerializer: DefaultSerializers$CharSerializer()
org.conscrypt.Conscrypt: byte[] exportKeyingMaterial(javax.net.ssl.SSLSocket,java.lang.String,byte[],int)
org.conscrypt.ConscryptEngineSocket: void setSSLParameters(javax.net.ssl.SSLParameters)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
org.conscrypt.Platform: java.io.FileDescriptor getFileDescriptorFromSSLSocket(org.conscrypt.AbstractConscryptSocket)
org.conscrypt.X509PublicKey: boolean equals(java.lang.Object)
org.conscrypt.AbstractConscryptSocket: java.net.SocketAddress getRemoteSocketAddress()
com.esotericsoftware.kryo.io.ByteBufferInput: java.lang.String readAscii()
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection: java.lang.Object create(java.lang.Object)
org.conscrypt.ConscryptEngine: boolean getNeedClientAuth()
de.javakaffee.kryoserializers.guava.ReverseListSerializer: java.util.List copy(com.esotericsoftware.kryo.Kryo,java.util.List)
de.javakaffee.kryoserializers.guava.ReverseListSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.io.ByteBufferInput: void readUtf8_slow(int,int)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getCounterOverflowDescription()
androidx.appcompat.widget.AppCompatCheckBox: AppCompatCheckBox(android.content.Context,android.util.AttributeSet)
com.esotericsoftware.kryo.util.MapReferenceResolver: int nextReadId(java.lang.Class)
org.conscrypt.SessionSnapshot: int getPacketBufferSize()
com.esotericsoftware.kryo.util.ListReferenceResolver: boolean useReferences(java.lang.Class)
org.conscrypt.KeyManagerImpl: java.lang.String chooseEngineClientAlias(java.lang.String[],java.security.Principal[],javax.net.ssl.SSLEngine)
com.esotericsoftware.kryo.serializers.FieldSerializer: void setCopyTransient(boolean)
com.esotericsoftware.kryo.util.IntMap$Entries: IntMap$Entries(com.esotericsoftware.kryo.util.IntMap)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.EndIconDelegate getEndIconDelegate()
org.conscrypt.Conscrypt: byte[] exportKeyingMaterial(javax.net.ssl.SSLEngine,java.lang.String,byte[],int)
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
org.conscrypt.CryptoUpcalls: byte[] rsaDecryptWithPrivateKey(java.security.PrivateKey,int,byte[])
org.conscrypt.NativeCrypto: long getDirectBufferAddress(java.nio.Buffer)
com.stronger.bankNotification.main_activity: main_activity()
de.javakaffee.kryoserializers.wicket.MiniMapSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.OpenSSLSignature$SHA512RSAPSS: OpenSSLSignature$SHA512RSAPSS()
org.conscrypt.OpenSSLCipher: void engineInit(int,java.security.Key,java.security.SecureRandom)
androidx.cardview.widget.CardView: void setMaxCardElevation(float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
org.conscrypt.NativeSsl$BioWrapper: NativeSsl$BioWrapper(org.conscrypt.NativeSsl)
androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: boolean isBound()
com.google.android.material.chip.Chip: void setChipBackgroundColor(android.content.res.ColorStateList)
org.conscrypt.OpenSSLCipher$Mode: OpenSSLCipher$Mode(java.lang.String,int)
com.esotericsoftware.kryo.serializers.DefaultSerializers$CollectionsSingletonListSerializer: DefaultSerializers$CollectionsSingletonListSerializer()
com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.ClassResolver getClassResolver()
org.conscrypt.ConscryptFileDescriptorSocket: org.conscrypt.ConscryptSession provideSession()
com.esotericsoftware.kryo.io.ByteBufferOutput: void writeString(java.lang.String)
org.conscrypt.AbstractSessionContext: int getSessionTimeout()
com.esotericsoftware.kryo.factories.ReflectionSerializerFactory: ReflectionSerializerFactory(java.lang.Class)
com.esotericsoftware.kryo.io.Input: int readInt()
com.esotericsoftware.kryo.io.UnsafeOutput: void writeLittleEndianLong(long)
com.esotericsoftware.kryo.util.DefaultClassResolver: void setKryo(com.esotericsoftware.kryo.Kryo)
com.esotericsoftware.kryo.io.ByteBufferOutputStream: void write(int)
org.conscrypt.OpenSSLX509Certificate: void finalize()
com.esotericsoftware.kryo.util.UnsafeUtil$1: UnsafeUtil$1()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$StringArraySerializer: DefaultArraySerializers$StringArraySerializer()
org.conscrypt.OpenSSLKey: org.conscrypt.NativeRef$EVP_PKEY getNativeRef()
com.google.android.material.button.MaterialButton: void setIconSize(int)
org.conscrypt.NativeSsl: void chooseClientCertificate(byte[],int[],byte[][])
com.esotericsoftware.minlog.Log: void warn(java.lang.String,java.lang.Throwable)
org.conscrypt.Java8EngineSocket: org.conscrypt.ApplicationProtocolSelector toApplicationProtocolSelector(java.util.function.BiFunction)
androidx.recyclerview.widget.RecyclerView: void clearOldPositions()
com.esotericsoftware.kryo.serializers.CollectionSerializer$BindCollection: boolean elementsCanBeNull()
org.conscrypt.NativeCrypto: java.lang.Object[][] get_X509_GENERAL_NAME_stack(long,org.conscrypt.OpenSSLX509Certificate,int)
com.google.android.material.textfield.TextInputLayout: int getHintCurrentCollapsedTextColor()
com.esotericsoftware.kryo.io.UnsafeMemoryOutput: void writeLittleEndianLong(long)
com.esotericsoftware.kryo.serializers.CollectionSerializer: void setElementClass(java.lang.Class,com.esotericsoftware.kryo.Serializer)
com.esotericsoftware.kryo.serializers.CollectionSerializer: void setGenerics(com.esotericsoftware.kryo.Kryo,java.lang.Class[])
org.conscrypt.OpenSSLSocketImpl: void setChannelIdPrivateKey(java.security.PrivateKey)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundColor(int)
com.esotericsoftware.kryo.util.ObjectMap: java.lang.Object put(java.lang.Object,java.lang.Object)
org.conscrypt.OpenSSLRSAPrivateCrtKey: org.conscrypt.OpenSSLKey getInstance(java.security.interfaces.RSAPrivateCrtKey)
org.conscrypt.OpenSSLSignature$SHA512ECDSA: OpenSSLSignature$SHA512ECDSA()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getIconTint()
de.javakaffee.kryoserializers.guava.ImmutableSortedSetSerializer: com.google.common.collect.ImmutableSortedSet read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.KeyGeneratorImpl$DESEDE: KeyGeneratorImpl$DESEDE()
org.conscrypt.Java7ExtendedSSLSession: java.lang.Object getValue(java.lang.String)
com.google.android.material.chip.Chip: void setCloseIconStartPadding(float)
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection$2: java.lang.Object create(java.lang.Object)
org.conscrypt.OpenSSLX509Certificate: void verifyInternal(java.security.PublicKey,java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevationResource(int)
org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: OpenSSLX509CertificateFactory$ParsingException(java.lang.String,java.lang.Exception)
org.conscrypt.ConscryptEngine: javax.net.ssl.SSLSession handshakeSession()
com.esotericsoftware.kryo.io.InputChunked: void setBuffer(byte[],int,int)
org.conscrypt.IvParameters: IvParameters()
com.esotericsoftware.kryo.serializers.TimeSerializers$ZoneIdSerializer: java.time.ZoneId read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
io.paperdb.Book: void setLogLevel(int)
com.esotericsoftware.kryo.StreamFactory: com.esotericsoftware.kryo.io.Input getInput(java.io.InputStream,int)
org.conscrypt.OpenSSLCipher: int engineDoFinal(byte[],int,int,byte[],int)
org.conscrypt.OpenSSLEvpCipherARC4: void checkSupportedPadding(org.conscrypt.OpenSSLCipher$Padding)
com.esotericsoftware.kryo.StreamFactory: com.esotericsoftware.kryo.io.Output getOutput(int)
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
com.esotericsoftware.reflectasm.FieldAccess: boolean getBoolean(java.lang.Object,int)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeColor()
org.conscrypt.Java8EngineWrapper: javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[],int,int)
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmByteField: void copy(java.lang.Object,java.lang.Object)
org.conscrypt.NativeCrypto: void EVP_CIPHER_CTX_set_key_length(org.conscrypt.NativeRef$EVP_CIPHER_CTX,int)
org.conscrypt.NativeCrypto: void SSL_set_session(long,org.conscrypt.NativeSsl,long)
org.conscrypt.SSLParametersImpl: java.lang.String[] getDefaultCipherSuites(boolean,boolean)
com.esotericsoftware.kryo.serializers.TimeSerializers$LocalTimeSerializer: TimeSerializers$LocalTimeSerializer(com.esotericsoftware.kryo.serializers.TimeSerializers$1)
com.esotericsoftware.kryo.util.IdentityMap: void putResize(java.lang.Object,java.lang.Object)
org.conscrypt.ConscryptEngineSocket: void setHandshakeTimeout(int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
org.conscrypt.OpenSSLSignatureRawECDSA: OpenSSLSignatureRawECDSA()
com.esotericsoftware.kryo.util.DefaultClassResolver: com.esotericsoftware.kryo.Registration writeClass(com.esotericsoftware.kryo.io.Output,java.lang.Class)
org.conscrypt.AbstractConscryptEngine: java.lang.String getPeerHost()
androidx.recyclerview.widget.RecyclerView: void animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
de.javakaffee.kryoserializers.CollectionsSingletonMapSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.NativeCrypto: boolean[] get_X509_ex_kusage(long,org.conscrypt.OpenSSLX509Certificate)
org.conscrypt.SSLUtils: short unsignedByte(byte)
org.conscrypt.NativeSslSession: int getPeerPort()
org.conscrypt.ConscryptServerSocket: ConscryptServerSocket(int,org.conscrypt.SSLParametersImpl)
com.esotericsoftware.kryo.io.UnsafeMemoryOutput: void writeBytes(byte[])
com.esotericsoftware.kryo.io.KryoObjectInput: java.lang.Object readObject()
org.conscrypt.NativeCrypto: byte[] X509_get_ext_oid(long,org.conscrypt.OpenSSLX509Certificate,java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
org.conscrypt.AbstractConscryptSocket: AbstractConscryptSocket(java.net.Socket,java.lang.String,int,boolean)
org.conscrypt.AbstractConscryptSocket: void close()
org.conscrypt.AbstractConscryptSocket: void setApplicationProtocols(java.lang.String[])
org.conscrypt.AbstractConscryptSocket: java.lang.String[] getApplicationProtocols()
com.esotericsoftware.kryo.serializers.ExternalizableSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.SSLUtils: int getEncryptedPacketLength(java.nio.ByteBuffer)
com.esotericsoftware.kryo.util.IntArray: int indexOf(int)
androidx.recyclerview.widget.RecyclerView: int getChildAdapterPosition(android.view.View)
org.conscrypt.SSLUtils: javax.security.cert.X509Certificate[] toCertificateChain(java.security.cert.X509Certificate[])
com.esotericsoftware.kryo.serializers.CollectionSerializer$BindCollection: java.lang.Class elementClass()
org.conscrypt.OpenSSLECDHKeyAgreement: void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)
org.conscrypt.Platform: org.conscrypt.CertBlacklist newDefaultBlacklist()
com.esotericsoftware.kryo.io.ByteBufferInput: int optional(int)
org.conscrypt.ConscryptEngine: int readEncryptedData(java.nio.ByteBuffer,int)
com.esotericsoftware.kryo.io.KryoDataInput: void readFully(byte[])
org.conscrypt.ConscryptEngine: ConscryptEngine(java.lang.String,int,org.conscrypt.SSLParametersImpl)
de.javakaffee.kryoserializers.guava.UnmodifiableNavigableSetSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.io.ByteBufferInput: void setPosition(int)
org.conscrypt.NativeCrypto: long getECPrivateKeyWrapper(java.security.PrivateKey,org.conscrypt.NativeRef$EC_GROUP)
com.esotericsoftware.kryo.serializers.DefaultSerializers$CurrencySerializer: DefaultSerializers$CurrencySerializer()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
org.conscrypt.AbstractConscryptSocket: void notifyHandshakeCompletedListeners()
org.conscrypt.SSLUtils: java.util.Set getSupportedClientKeyTypes(byte[],int[])
org.conscrypt.ct.SignedCertificateTimestamp$Origin: org.conscrypt.ct.SignedCertificateTimestamp$Origin valueOf(java.lang.String)
org.conscrypt.OpenSSLSocketImpl: java.io.InputStream getInputStream()
com.esotericsoftware.kryo.io.KryoObjectInput: int read(byte[])
com.google.android.material.button.MaterialButton: void setStrokeColorResource(int)
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
org.conscrypt.Platform: java.lang.String getDefaultProviderName()
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
org.conscrypt.OpenSSLCipher$Padding: org.conscrypt.OpenSSLCipher$Padding getNormalized(java.lang.String)
com.google.android.material.internal.FlowLayout: void setSingleLine(boolean)
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
androidx.activity.ComponentActivity: ComponentActivity()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatToggleButton createToggleButton(android.content.Context,android.util.AttributeSet)
org.conscrypt.Java8FileDescriptorSocket$1: java.lang.String selectApplicationProtocol(javax.net.ssl.SSLSocket,java.util.List)
io.paperdb.KeyLocker: void acquire(java.lang.String)
com.esotericsoftware.kryo.io.Input: void setLimit(int)
org.conscrypt.ct.DigitallySigned$SignatureAlgorithm: DigitallySigned$SignatureAlgorithm(java.lang.String,int)
com.esotericsoftware.kryo.serializers.FieldSerializerConfig: boolean isOptimizedGenerics()
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$FloatArraySerializer: java.lang.Object copy(com.esotericsoftware.kryo.Kryo,java.lang.Object)
org.conscrypt.NativeCrypto: long EVP_aead_chacha20_poly1305()
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection: de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection[] values()
org.conscrypt.Java8EngineSocket: void setHandshakeApplicationProtocolSelector(java.util.function.BiFunction)
com.google.android.material.chip.ChipGroup: void setShowDividerVertical(int)
de.javakaffee.kryoserializers.guava.ImmutableMapSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
net.sourceforge.jtds.util.SSPIJNIClient: byte[] prepareSSOSubmit(byte[],long)
com.esotericsoftware.kryo.serializers.ObjectField$ObjectBooleanField: void copy(java.lang.Object,java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
com.esotericsoftware.kryo.serializers.FieldSerializerUnsafeUtil$Factory: com.esotericsoftware.kryo.serializers.FieldSerializerUnsafeUtil getInstance(com.esotericsoftware.kryo.serializers.FieldSerializer)
com.esotericsoftware.kryo.serializers.ObjectField$ObjectDoubleField: ObjectField$ObjectDoubleField(com.esotericsoftware.kryo.serializers.FieldSerializer)
androidx.recyclerview.widget.RecyclerView: void offsetPositionRecordsForMove(int,int)
de.javakaffee.kryoserializers.SubListSerializers$ArrayListSubListSerializer: SubListSerializers$ArrayListSubListSerializer()
androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
org.conscrypt.ActiveSession: void invalidate()
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmIntField: void read(com.esotericsoftware.kryo.io.Input,java.lang.Object)
org.conscrypt.NativeCrypto: int X509_cmp(long,org.conscrypt.OpenSSLX509Certificate,long,org.conscrypt.OpenSSLX509Certificate)
org.conscrypt.SSLNullSession: byte[] getId()
com.google.android.material.button.MaterialButton: void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$OnPressedChangeListener)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
org.conscrypt.SSLParametersImpl: SSLParametersImpl(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom,org.conscrypt.ClientSessionContext,org.conscrypt.ServerSessionContext,java.lang.String[])
org.conscrypt.OpenSSLSocketImpl: byte[] getChannelId()
org.conscrypt.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ShortArraySerializer: short[] read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.Conscrypt: void setUseSessionTickets(javax.net.ssl.SSLSocket,boolean)
com.esotericsoftware.kryo.util.IntArray: void truncate(int)
com.esotericsoftware.kryo.io.ByteBufferInput: long readLong(boolean)
org.conscrypt.ActiveSession: long getLastAccessedTime()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
org.conscrypt.OpenSSLSignatureRawRSA: void engineSetParameter(java.lang.String,java.lang.Object)
com.esotericsoftware.kryo.io.UnsafeMemoryInput: UnsafeMemoryInput(long,int)
com.esotericsoftware.kryo.util.ObjectMap: void push(java.lang.Object,java.lang.Object,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object)
org.conscrypt.Conscrypt: void setApplicationProtocols(javax.net.ssl.SSLEngine,java.lang.String[])
com.esotericsoftware.kryo.io.ByteBufferOutput: void writeChars(char[])
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
com.esotericsoftware.kryo.serializers.TimeSerializers$PeriodSerializer: TimeSerializers$PeriodSerializer()
de.javakaffee.kryoserializers.guava.TreeMultimapSerializer: TreeMultimapSerializer()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
org.conscrypt.ConscryptEngineSocket$SSLInputStream: void renegotiate()
com.esotericsoftware.kryo.io.ByteBufferInput: byte[] readBytes(int)
de.javakaffee.kryoserializers.guava.UnmodifiableNavigableSetSerializer: void registerSerializers(com.esotericsoftware.kryo.Kryo)
com.esotericsoftware.kryo.util.IntArray: void addAll(int[],int,int)
com.esotericsoftware.kryo.io.UnsafeOutput: void writeLongs(long[])
com.esotericsoftware.kryo.io.KryoDataOutput: void writeUTF(java.lang.String)
org.conscrypt.ConscryptEngine: int writeEncryptedDataDirect(java.nio.ByteBuffer,int,int)
com.esotericsoftware.kryo.serializers.DefaultSerializers$ShortSerializer: DefaultSerializers$ShortSerializer()
com.esotericsoftware.kryo.util.IntMap$Values: void remove()
org.conscrypt.SSLParametersImpl: java.lang.String[] filterFromCipherSuites(java.lang.String[],java.util.Set)
com.esotericsoftware.kryo.Kryo$DefaultInstantiatorStrategy: Kryo$DefaultInstantiatorStrategy(org.objenesis.strategy.InstantiatorStrategy)
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeBooleanField: UnsafeCacheFields$UnsafeBooleanField(java.lang.reflect.Field)
com.esotericsoftware.kryo.io.Input: boolean canReadInt()
org.conscrypt.OpenSSLX509CertificateFactory: java.util.Collection engineGenerateCRLs(java.io.InputStream)
de.javakaffee.kryoserializers.EnumSetSerializer: java.lang.Object copy(com.esotericsoftware.kryo.Kryo,java.lang.Object)
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
com.google.android.material.card.MaterialCardView: int getContentPaddingBottom()
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconToUpdateDummyDrawable()
de.javakaffee.kryoserializers.BitSetSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.reflectasm.FieldAccess: void insertSetPrimitive(org.objectweb.asm.ClassWriter,java.lang.String,java.util.ArrayList,org.objectweb.asm.Type)
org.conscrypt.EvpMdRef$SHA1: EvpMdRef$SHA1()
de.javakaffee.kryoserializers.protobuf.ProtobufSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,com.google.protobuf.GeneratedMessage)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$FloatArraySerializer: float[] read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.SSLUtils: java.security.cert.CertificateFactory getCertificateFactory()
org.conscrypt.AbstractConscryptSocket: int getLocalPort()
com.esotericsoftware.kryo.serializers.DefaultSerializers$CollectionsSingletonSetSerializer: DefaultSerializers$CollectionsSingletonSetSerializer()
com.google.android.material.card.MaterialCardView: void setDragged(boolean)
org.conscrypt.OpenSSLContextImpl$TLSv13: OpenSSLContextImpl$TLSv13()
androidx.media.AudioAttributesCompat: AudioAttributesCompat()
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: void connect(java.net.SocketAddress,int)
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: void setEnableSessionCreation(boolean)
com.esotericsoftware.reflectasm.AccessClassLoader: AccessClassLoader(java.lang.ClassLoader)
org.conscrypt.OpenSSLCipherRSA: int engineUpdate(byte[],int,int,byte[],int)
androidx.recyclerview.widget.RecyclerView: void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)
com.esotericsoftware.kryo.io.Output: Output(int,int)
com.esotericsoftware.kryo.serializers.DefaultSerializers$TreeSetSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.util.Collection)
org.conscrypt.NativeCrypto: long EC_KEY_parse_curve_name(byte[])
com.google.android.material.theme.MaterialComponentsViewInflater: androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet)
org.conscrypt.NativeCrypto: void asn1_write_free(long)
com.esotericsoftware.kryo.util.ObjectMap$Values: java.util.ArrayList toArray()
com.esotericsoftware.kryo.serializers.OptionalSerializers$OptionalIntSerializer: OptionalSerializers$OptionalIntSerializer(com.esotericsoftware.kryo.serializers.OptionalSerializers$1)
com.google.android.material.card.MaterialCardView: void setCardBackgroundColor(int)
com.google.android.material.button.MaterialButton: void setRippleColorResource(int)
com.google.android.material.button.MaterialButton: void setCornerRadius(int)
org.conscrypt.AbstractSessionContext$2: boolean hasMoreElements()
com.esotericsoftware.kryo.io.KryoDataInput: int readUnsignedShort()
com.esotericsoftware.kryo.io.ByteBufferInput: int readInt()
org.conscrypt.ct.DigitallySigned: java.lang.String getAlgorithm()
androidx.recyclerview.widget.RecyclerView: android.view.View findChildViewUnder(float,float)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: boolean getOOBInline()
org.conscrypt.ApplicationProtocolSelectorAdapter: int selectApplicationProtocol(byte[])
org.conscrypt.OpenSSLSocketImpl: boolean isInputShutdown()
com.esotericsoftware.kryo.io.Output: void writeBoolean(boolean)
com.esotericsoftware.kryo.util.IdentityObjectIntMap: int hash2(int)
org.conscrypt.OpenSSLX509CRL: int getVersion()
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
com.esotericsoftware.kryo.serializers.FieldSerializer: com.esotericsoftware.kryo.serializers.Generics getGenericsScope()
org.conscrypt.Platform: javax.net.ssl.SSLEngine wrapEngine(org.conscrypt.ConscryptEngine)
org.conscrypt.KeyManagerFactoryImpl: javax.net.ssl.KeyManager[] engineGetKeyManagers()
org.conscrypt.Conscrypt: boolean isConscrypt(javax.net.ssl.SSLServerSocketFactory)
com.esotericsoftware.kryo.util.IntArray: void add(int)
org.conscrypt.ConscryptEngineSocket: void setHostname(java.lang.String)
org.conscrypt.TrustManagerImpl: void handleTrustStorageUpdate()
com.esotericsoftware.kryo.io.ByteBufferInput: double readDouble()
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
org.conscrypt.NativeCrypto: void X509_free(long,org.conscrypt.OpenSSLX509Certificate)
com.esotericsoftware.kryo.serializers.DefaultSerializers$URLSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.OpenSSLX509CRL: java.util.List fromPkcs7PemInputStream(java.io.InputStream)
de.javakaffee.kryoserializers.CollectionsSingletonListSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.NativeSslSession$Impl$1: java.lang.String getProtocol()
org.conscrypt.SessionSnapshot: java.lang.String getRequestedServerName()
org.conscrypt.ConscryptFileDescriptorSocket: void free()
com.esotericsoftware.kryo.serializers.DefaultSerializers$LongSerializer: java.lang.Long read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
androidx.browser.browseractions.BrowserActionsFallbackMenuView: BrowserActionsFallbackMenuView(android.content.Context,android.util.AttributeSet)
org.conscrypt.ct.SignedCertificateTimestamp$Version: org.conscrypt.ct.SignedCertificateTimestamp$Version valueOf(java.lang.String)
org.conscrypt.AbstractSessionContext: void trimToSize()
org.conscrypt.OpenSSLSignature$MD5RSA: OpenSSLSignature$MD5RSA()
org.conscrypt.NativeCrypto: long EVP_DigestVerifyInit(org.conscrypt.NativeRef$EVP_MD_CTX,long,org.conscrypt.NativeRef$EVP_PKEY)
de.javakaffee.kryoserializers.protobuf.ProtobufSerializer: boolean getAcceptsNull()
org.conscrypt.BufferAllocator$1: BufferAllocator$1()
com.esotericsoftware.kryo.io.KryoObjectInput: void close()
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
de.javakaffee.kryoserializers.guava.UnmodifiableNavigableSetSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.util.NavigableSet)
org.conscrypt.Java7ExtendedSSLSession: java.lang.String getApplicationProtocol()
org.conscrypt.OAEPParameters: void writeHashAndMgfHash(long,java.lang.String,java.security.spec.MGF1ParameterSpec)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
com.esotericsoftware.kryo.util.MapReferenceResolver: MapReferenceResolver()
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
androidx.appcompat.widget.SearchView: int getPreferredWidth()
com.esotericsoftware.minlog.Log: void TRACE()
com.google.android.material.appbar.AppBarLayout: void setOrientation(int)
androidx.recyclerview.widget.RecyclerView: void dispatchContentChangedIfNecessary()
org.conscrypt.Java8FileDescriptorSocket: Java8FileDescriptorSocket(java.net.InetAddress,int,org.conscrypt.SSLParametersImpl)
com.esotericsoftware.kryo.serializers.DefaultSerializers$CollectionsSingletonMapSerializer: DefaultSerializers$CollectionsSingletonMapSerializer()
com.esotericsoftware.kryo.io.UnsafeOutput: void writeFloat(float)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundResource(int)
org.conscrypt.ConscryptServerSocket: void setUseClientMode(boolean)
org.conscrypt.OpenSSLKey: org.conscrypt.OpenSSLKey fromPublicKeyPemInputStream(java.io.InputStream)
org.conscrypt.SSLNullSession: byte[] getPeerSignedCertificateTimestamp()
com.esotericsoftware.kryo.io.KryoObjectOutput: void flush()
com.esotericsoftware.kryo.util.IdentityObjectIntMap: java.lang.Object findKey(int)
org.conscrypt.AbstractConscryptSocket: java.net.InetAddress getInetAddress()
com.esotericsoftware.kryo.util.IdentityMap$Values: void remove()
com.esotericsoftware.reflectasm.AccessClassLoader: java.lang.Class loadClass(java.lang.String,boolean)
org.conscrypt.NativeSsl: int clientPSKKeyRequested(java.lang.String,byte[],byte[])
de.javakaffee.kryoserializers.CompatibleFieldSerializerReflectionFactorySupport: java.lang.Object create(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.OpenSSLECGroupContext: org.conscrypt.NativeRef$EC_GROUP getNativeRef()
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: void setWantClientAuth(boolean)
com.google.android.material.button.MaterialButton: void setPressed(boolean)
org.conscrypt.OpenSSLSocketImpl: void addHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener)
com.esotericsoftware.kryo.serializers.DefaultSerializers$LocaleSerializer: DefaultSerializers$LocaleSerializer()
com.esotericsoftware.kryo.util.IdentityMap: java.lang.Object remove(java.lang.Object)
com.esotericsoftware.kryo.serializers.DefaultSerializers$CollectionsEmptySetSerializer: DefaultSerializers$CollectionsEmptySetSerializer()
de.javakaffee.kryoserializers.URISerializer: java.net.URI read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.ChainStrengthAnalyzer: void check(java.util.List)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: int getLocalPort()
com.esotericsoftware.kryo.util.IntArray: void insert(int,int)
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection: java.lang.reflect.Field access$000(de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection)
com.esotericsoftware.kryo.serializers.DefaultSerializers$URLSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.net.URL)
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBar$Behavior getBehavior()
org.conscrypt.ct.DigitallySigned$HashAlgorithm: org.conscrypt.ct.DigitallySigned$HashAlgorithm valueOf(java.lang.String)
com.esotericsoftware.kryo.serializers.FieldSerializer: java.util.List buildValidFieldsFromCachedFields(com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField[],com.esotericsoftware.kryo.util.IntArray)
com.esotericsoftware.kryo.io.Input: java.lang.String readString()
com.esotericsoftware.kryo.serializers.DefaultSerializers$IntSerializer: java.lang.Integer read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
de.javakaffee.kryoserializers.dexx.ListSerializer: ListSerializer()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
org.conscrypt.SSLNullSession: java.security.Principal getLocalPrincipal()
com.esotericsoftware.kryo.io.ByteBufferOutput: void writeByte(int)
com.esotericsoftware.kryo.io.FastInput: FastInput(byte[],int,int)
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection: de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection valueOfType(java.lang.Class)
com.esotericsoftware.kryo.io.FastOutput: FastOutput(java.io.OutputStream)
de.javakaffee.kryoserializers.guava.LinkedHashMultimapSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.HandshakeListener: HandshakeListener()
org.conscrypt.OpenSSLAeadCipherChaCha20: java.lang.String getBaseCipherName()
org.conscrypt.ExternalSession: java.lang.String getApplicationProtocol()
org.conscrypt.Java8EngineWrapper: java.lang.String[] getApplicationProtocols()
org.conscrypt.NativeCrypto: void EVP_DigestUpdateDirect(org.conscrypt.NativeRef$EVP_MD_CTX,long,int)
org.conscrypt.Platform: org.conscrypt.ConscryptEngineSocket createEngineSocket(java.net.InetAddress,int,org.conscrypt.SSLParametersImpl)
org.conscrypt.AbstractConscryptSocket: void setSoTimeout(int)
org.conscrypt.ConscryptEngine: int readPlaintextDataHeap(java.nio.ByteBuffer,int)
com.esotericsoftware.kryo.serializers.FieldSerializer: void setGenerics(com.esotericsoftware.kryo.Kryo,java.lang.Class[])
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer: java.lang.Object copy(com.esotericsoftware.kryo.Kryo,java.lang.Object)
org.conscrypt.Platform: org.conscrypt.ConscryptEngineSocket createEngineSocket(org.conscrypt.SSLParametersImpl)
com.esotericsoftware.kryo.util.UnsafeUtil$1: int compare(java.lang.Object,java.lang.Object)
io.paperdb.DbStoragePlainFile: boolean deleteDirectory(java.lang.String)
org.conscrypt.AbstractConscryptEngine: byte[] getChannelId()
com.esotericsoftware.reflectasm.ConstructorAccess: java.lang.Object newInstance()
org.conscrypt.OpenSSLEvpCipherAES$AES_128$CBC: OpenSSLEvpCipherAES$AES_128$CBC(org.conscrypt.OpenSSLCipher$Padding)
com.esotericsoftware.kryo.serializers.TimeSerializers$YearSerializer: TimeSerializers$YearSerializer(com.esotericsoftware.kryo.serializers.TimeSerializers$1)
org.conscrypt.NativeSslSession$Impl$1: long getCreationTime()
de.javakaffee.kryoserializers.EnumMapSerializer: java.util.EnumMap read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.TrustManagerImpl: void setCTEnabledOverride(boolean)
com.esotericsoftware.kryo.serializers.TaggedFieldSerializerConfig: void setSkipUnknownTags(boolean)
com.esotericsoftware.kryo.util.IdentityMap: com.esotericsoftware.kryo.util.IdentityMap$Values values()
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
org.conscrypt.SSLParametersImpl: javax.net.ssl.X509TrustManager findFirstX509TrustManager(javax.net.ssl.TrustManager[])
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.esotericsoftware.kryo.serializers.DefaultSerializers$ByteSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Byte)
com.esotericsoftware.kryo.util.DefaultStreamFactory: com.esotericsoftware.kryo.io.Output getOutput(int,int)
de.javakaffee.kryoserializers.wicket.MiniMapSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
androidx.cardview.widget.CardView: void setRadius(float)
org.conscrypt.OpenSSLX509CertificateFactory: java.security.cert.CertPath engineGenerateCertPath(java.io.InputStream,java.lang.String)
com.esotericsoftware.kryo.io.ByteBufferOutput: void setPosition(int)
com.esotericsoftware.kryo.pool.SoftReferenceQueue: boolean retainAll(java.util.Collection)
de.javakaffee.kryoserializers.UUIDSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
de.javakaffee.kryoserializers.SubListSerializers$JavaUtilSubListSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.util.List)
com.google.android.material.chip.Chip: void setBackgroundColor(int)
com.esotericsoftware.kryo.serializers.CollectionSerializer: java.util.Collection read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.ConscryptFileDescriptorSocket: void closeUnderlyingSocket()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
org.conscrypt.OpenSSLMac: OpenSSLMac(long,int)
androidx.cardview.widget.CardView: int getContentPaddingLeft()
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: java.io.OutputStream getOutputStream()
org.conscrypt.OpenSSLRSAPrivateKey: void ensureReadParams()
org.conscrypt.NativeCrypto: int ECDSA_size(org.conscrypt.NativeRef$EVP_PKEY)
com.esotericsoftware.kryo.util.IntMap$Entries: void remove()
org.conscrypt.NativeCrypto: long EC_GROUP_new_arbitrary(byte[],byte[],byte[],byte[],byte[],byte[],int)
com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.Registration register(java.lang.Class,com.esotericsoftware.kryo.Serializer)
org.conscrypt.OpenSSLAeadCipherAES$GCM$AES_128: OpenSSLAeadCipherAES$GCM$AES_128()
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
org.conscrypt.ConscryptFileDescriptorSocket: org.conscrypt.ClientSessionContext clientSessionContext()
org.conscrypt.SessionSnapshot: java.lang.String getCipherSuite()
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
org.conscrypt.Java8EngineWrapper: java.lang.String[] getEnabledProtocols()
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: int getSoLinger()
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection$3: UnmodifiableCollectionsSerializer$UnmodifiableCollection$3(java.lang.String,int,java.lang.Class,java.lang.reflect.Field)
com.esotericsoftware.reflectasm.FieldAccess: void setFloat(java.lang.Object,int,float)
org.conscrypt.OpenSSLCipherRSA$OAEP$SHA1: OpenSSLCipherRSA$OAEP$SHA1()
com.esotericsoftware.kryo.serializers.BeanSerializer$1: BeanSerializer$1(com.esotericsoftware.kryo.serializers.BeanSerializer)
com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.Registration writeClass(com.esotericsoftware.kryo.io.Output,java.lang.Class)
org.conscrypt.OpenSSLAeadCipherAES$GCM_SIV: void checkSupportedMode(org.conscrypt.OpenSSLCipher$Mode)
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$IntArraySerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.io.Input: int readInt_slow(boolean)
de.javakaffee.kryoserializers.guava.ReverseListSerializer$ReverseList: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.serializers.DefaultSerializers$StringBuilderSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: boolean getReuseAddress()
de.javakaffee.kryoserializers.guava.ReverseListSerializer$ReverseList: java.lang.Object copy(com.esotericsoftware.kryo.Kryo,java.lang.Object)
org.conscrypt.OpenSSLSocketFactoryImpl: java.net.Socket createSocket(java.net.InetAddress,int)
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$CharArraySerializer: char[] read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
de.javakaffee.kryoserializers.guava.LinkedHashMultimapSerializer: LinkedHashMultimapSerializer()
com.google.android.material.internal.NavigationMenuItemView: void setTextAppearance(int)
org.conscrypt.OpenSSLSignature$RSAPKCS1Padding: void configureEVP_PKEY_CTX(long)
org.conscrypt.AbstractConscryptSocket: java.lang.String getApplicationProtocol()
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
org.conscrypt.SSLUtils$SessionType: SSLUtils$SessionType(java.lang.String,int,int)
com.esotericsoftware.kryo.serializers.TimeSerializers$YearMonthSerializer: java.time.YearMonth read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.serializers.ExternalizableSerializer: java.lang.Object readExternal(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
de.javakaffee.kryoserializers.guava.ReverseListSerializer$RandomAccessReverseList: ReverseListSerializer$RandomAccessReverseList(de.javakaffee.kryoserializers.guava.ReverseListSerializer$1)
org.conscrypt.OpenSSLX509CRL: byte[] getTBSCertList()
org.conscrypt.AbstractConscryptSocket: void setUseSessionTickets(boolean)
org.conscrypt.OpenSSLSignature$SHA256ECDSA: OpenSSLSignature$SHA256ECDSA()
com.esotericsoftware.kryo.io.Input: int readShortUnsigned()
org.conscrypt.ConscryptEngine: int writePlaintextDataDirect(java.nio.ByteBuffer,int,int)
org.conscrypt.Platform: boolean supportsConscryptCertStore()
com.google.android.material.chip.Chip: void setChipStrokeColorResource(int)
org.conscrypt.Platform: java.security.spec.AlgorithmParameterSpec toGCMParameterSpec(int,byte[])
com.esotericsoftware.kryo.io.Input: java.lang.String readAscii()
com.esotericsoftware.kryo.util.IdentityMap$Values: IdentityMap$Values(com.esotericsoftware.kryo.util.IdentityMap)
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeObjectField: java.lang.Object getField(java.lang.Object)
org.conscrypt.SSLParametersImpl: void setEndpointIdentificationAlgorithm(java.lang.String)
org.conscrypt.OpenSSLEvpCipher: int doFinalInternal(byte[],int,int)
com.google.android.material.internal.CheckableImageButton: void setPressable(boolean)
org.conscrypt.NativeCrypto: void SSL_use_psk_identity_hint(long,org.conscrypt.NativeSsl,java.lang.String)
com.esotericsoftware.kryo.io.ByteBufferOutput: void writeDouble(double)
org.conscrypt.OpenSSLECKeyPairGenerator: void assertCurvesAreValid()
org.conscrypt.OpenSSLX509CertificateFactory$1: org.conscrypt.OpenSSLX509Certificate fromX509PemInputStream(java.io.InputStream)
com.esotericsoftware.kryo.serializers.DefaultSerializers$CollectionsSingletonSetSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(java.lang.CharSequence)
org.conscrypt.OAEPParameters: byte[] engineGetEncoded()
org.conscrypt.NativeCrypto: long X509_get_version(long,org.conscrypt.OpenSSLX509Certificate)
org.conscrypt.OpenSSLAeadCipher: void reset()
org.conscrypt.NativeCrypto: java.lang.String get_X509_pubkey_oid(long,org.conscrypt.OpenSSLX509Certificate)
org.conscrypt.ConscryptEngine: void setEnabledProtocols(java.lang.String[])
org.conscrypt.OpenSSLSocketFactoryImpl: java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int)
de.javakaffee.kryoserializers.SubListSerializers$JavaUtilSubListSerializer: boolean canSerialize(java.lang.Class)
de.javakaffee.kryoserializers.GregorianCalendarSerializer: java.lang.Object copy(com.esotericsoftware.kryo.Kryo,java.lang.Object)
org.conscrypt.TrustManagerImpl: void checkCT(java.lang.String,java.util.List,byte[],byte[])
androidx.appcompat.widget.Toolbar: int getPopupTheme()
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
org.conscrypt.ConscryptServerSocket: void setEnableSessionCreation(boolean)
org.conscrypt.Java8EngineWrapper: java.lang.String getApplicationProtocol()
org.conscrypt.ConscryptEngineSocket$SSLOutputStream: void init()
com.esotericsoftware.kryo.serializers.FieldSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.NativeSslSession$Impl$1: javax.security.cert.X509Certificate[] getPeerCertificateChain()
org.conscrypt.SSLNullSession: java.lang.String getCipherSuite()
org.conscrypt.NativeCrypto: int ENGINE_SSL_write_direct(long,org.conscrypt.NativeSsl,long,int,org.conscrypt.NativeCrypto$SSLHandshakeCallbacks)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
org.conscrypt.NativeSslSession$Impl$1: java.lang.String[] getValueNames()
com.esotericsoftware.kryo.serializers.DefaultSerializers$StringSerializer: DefaultSerializers$StringSerializer()
org.conscrypt.SessionSnapshot: javax.security.cert.X509Certificate[] getPeerCertificateChain()
org.conscrypt.ConscryptFileDescriptorSocket: javax.net.ssl.SSLSession getActiveSession()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)
org.conscrypt.Java7ExtendedSSLSession: byte[] getId()
com.esotericsoftware.kryo.Kryo: void setDefaultSerializer(com.esotericsoftware.kryo.factories.SerializerFactory)
org.conscrypt.OAEPParameters: java.lang.String readMgfHash(long)
com.esotericsoftware.kryo.serializers.TimeSerializers$LocalDateSerializer: void write(com.esotericsoftware.kryo.io.Output,java.time.LocalDate)
com.google.android.material.chip.ChipGroup: void setChipSpacingVertical(int)
com.esotericsoftware.kryo.StreamFactory: com.esotericsoftware.kryo.io.Output getOutput(java.io.OutputStream,int)
org.conscrypt.NativeCrypto: long asn1_read_tagged(long)
org.conscrypt.NativeSsl: void close()
org.conscrypt.ConscryptEngineSocket: java.lang.String getApplicationProtocol()
com.esotericsoftware.kryo.io.UnsafeMemoryInput: double readDouble()
org.conscrypt.NativeCrypto: java.lang.String SSL_get_servername(long,org.conscrypt.NativeSsl)
org.conscrypt.NativeCrypto: byte[] get_X509_signature(long,org.conscrypt.OpenSSLX509Certificate)
com.esotericsoftware.kryo.io.Input: void readUtf8_slow(int,int)
org.conscrypt.SSLParametersImpl: void setUseSessionTickets(boolean)
androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollExtent()
com.esotericsoftware.kryo.serializers.DefaultSerializers$CollectionsSingletonSetSerializer: java.util.Set read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.OpenSSLSocketImpl: void setAlpnProtocols(java.lang.String[])
androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)
androidx.cardview.widget.CardView: float getCardElevation()
com.esotericsoftware.kryo.serializers.FieldSerializer: void rebuildCachedFields(boolean)
org.conscrypt.OpenSSLX509Certificate: java.util.Date getNotAfter()
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: int getPort()
org.conscrypt.ConscryptFileDescriptorSocket: void onNewSessionEstablished(long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
org.conscrypt.Java7ExtendedSSLSession: javax.security.cert.X509Certificate[] getPeerCertificateChain()
org.conscrypt.TrustManagerImpl: java.util.List verifyChain(java.util.List,java.util.List,java.lang.String,boolean,byte[],byte[])
com.esotericsoftware.kryo.serializers.FieldSerializerConfig: FieldSerializerConfig()
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: byte[] getAlpnSelectedProtocol()
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
com.esotericsoftware.kryo.io.ByteBufferInput: void setBuffer(java.nio.ByteBuffer)
androidx.recyclerview.widget.RecyclerView: void removeAndRecycleViews()
org.conscrypt.OpenSSLMessageDigestJDK: void engineUpdate(byte)
com.google.android.material.textfield.TextInputLayout: void setCounterTextColor(android.content.res.ColorStateList)
org.conscrypt.ConscryptEngine: ConscryptEngine(org.conscrypt.SSLParametersImpl)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
de.javakaffee.kryoserializers.BitSetSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.ct.SignedCertificateTimestamp: byte[] encodeTBS(org.conscrypt.ct.CertificateEntry)
org.conscrypt.OpenSSLBIOSink: org.conscrypt.OpenSSLBIOSink create()
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable getBoxBackground()
com.esotericsoftware.kryo.StreamFactory: com.esotericsoftware.kryo.io.Output getOutput(java.io.OutputStream)
com.esotericsoftware.kryo.util.IdentityObjectIntMap: void ensureCapacity(int)
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundColor()
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.Button getActionView()
org.conscrypt.SessionSnapshot: java.lang.String getApplicationProtocol()
com.esotericsoftware.kryo.serializers.DefaultSerializers$BooleanSerializer: DefaultSerializers$BooleanSerializer()
org.conscrypt.ConscryptEngine: void onSSLStateChange(int,int)
org.conscrypt.OpenSSLEvpCipherAES$AES_256$CTR: OpenSSLEvpCipherAES$AES_256$CTR()
com.esotericsoftware.kryo.io.UnsafeMemoryInput: long readLong(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
org.conscrypt.ConscryptEngineSocket: byte[] getChannelId()
org.conscrypt.NativeSslSession$Impl$1: NativeSslSession$Impl$1(org.conscrypt.NativeSslSession$Impl)
com.esotericsoftware.kryo.util.FastestStreamFactory: com.esotericsoftware.kryo.io.Input getInput(byte[])
com.esotericsoftware.kryo.io.UnsafeOutput: void writeDoubles(double[])
com.esotericsoftware.kryo.io.KryoDataOutput: void setOutput(com.esotericsoftware.kryo.io.Output)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.esotericsoftware.kryo.io.UnsafeInput: void readBytes(java.lang.Object,long,long)
org.conscrypt.TrustManagerFactoryImpl: javax.net.ssl.TrustManager[] engineGetTrustManagers()
de.javakaffee.kryoserializers.GregorianCalendarSerializer: java.util.TimeZone getTimeZone(java.util.Calendar)
com.esotericsoftware.reflectasm.AccessClassLoader: com.esotericsoftware.reflectasm.AccessClassLoader get(java.lang.Class)
com.esotericsoftware.kryo.util.ObjectMap: java.lang.Object get(java.lang.Object)
com.esotericsoftware.kryo.util.IntMap$Values: java.lang.Object next()
com.esotericsoftware.kryo.serializers.DefaultSerializers$ByteSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.NativeCrypto: long get_X509_REVOKED_revocationDate(long)
com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleRoundedCornerRadius(float)
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
org.conscrypt.OpenSSLRandom: OpenSSLRandom()
org.conscrypt.OpenSSLRSAPublicKey: java.lang.String getFormat()
org.conscrypt.ConscryptFileDescriptorSocket: void setUseSessionTickets(boolean)
org.conscrypt.Preconditions: void checkArgument(boolean,java.lang.String)
org.conscrypt.ActiveSession: java.lang.String getPeerHost()
org.conscrypt.OpenSSLEvpCipherAES: java.lang.String getBaseCipherName()
com.esotericsoftware.kryo.serializers.Generics: Generics()
org.conscrypt.ConscryptEngine: long calcSrcsLength(java.nio.ByteBuffer[],int,int)
org.conscrypt.ConscryptEngine: int writeEncryptedData(java.nio.ByteBuffer,int)
org.conscrypt.ConscryptEngine: void closeAndFreeResources()
org.conscrypt.NativeRef$EVP_CIPHER_CTX: NativeRef$EVP_CIPHER_CTX(long)
org.conscrypt.SSLParametersImpl: java.lang.String[] getEnabledProtocols()
com.esotericsoftware.kryo.serializers.DefaultSerializers$VoidSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
de.javakaffee.kryoserializers.protobuf.ProtobufSerializer: java.lang.reflect.Method getParseFromMethod(java.lang.Class)
org.conscrypt.Platform: void blockGuardOnNetwork()
com.esotericsoftware.reflectasm.ConstructorAccess: void insertConstructor(org.objectweb.asm.ClassWriter,java.lang.String)
io.paperdb.DbStoragePlainFile$1: java.lang.Object initialValue()
com.google.android.material.chip.Chip: void setCloseIconSize(float)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: void setReuseAddress(boolean)
org.conscrypt.OpenSSLSocketImpl: void setSendBufferSize(int)
org.conscrypt.Java8EngineWrapper: void setNeedClientAuth(boolean)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21)
com.esotericsoftware.kryo.io.Input: java.io.InputStream getInputStream()
org.conscrypt.ECParameters: byte[] engineGetEncoded(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getExpandedComponentIdHint()
com.esotericsoftware.kryo.serializers.FieldSerializer: void initializeCachedFields()
org.conscrypt.OpenSSLSignatureRawRSA: void engineInitVerify(java.security.PublicKey)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpecResource(int)
com.esotericsoftware.kryo.serializers.TimeSerializers$OffsetTimeSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.google.android.material.textfield.TextInputLayout: void setHintTextAppearance(int)
org.conscrypt.OpenSSLSocketImpl: java.nio.channels.SocketChannel getChannel()
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection: java.lang.Class access$400(de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection)
com.esotericsoftware.kryo.io.Input: double[] readDoubles(int)
org.conscrypt.ct.CertificateEntry: CertificateEntry(org.conscrypt.ct.CertificateEntry$LogEntryType,byte[],byte[])
org.conscrypt.OAEPParameters: java.lang.String getHashName(long)
com.google.android.material.chip.Chip: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.google.android.material.chip.Chip: void setCheckedIconEnabledResource(int)
org.conscrypt.NativeCrypto: int get_X509_ex_flags(long,org.conscrypt.OpenSSLX509Certificate)
com.esotericsoftware.kryo.io.ByteBufferOutput: void setBuffer(java.nio.ByteBuffer,int)
com.esotericsoftware.kryo.serializers.ObjectField: void write(com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.TrustManagerImpl: java.util.List checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String,java.lang.String)
org.conscrypt.ConscryptEngine: javax.net.ssl.SSLEngineResult$HandshakeStatus mayFinishHandshake(javax.net.ssl.SSLEngineResult$HandshakeStatus)
org.conscrypt.OpenSSLCipher: int getOutputSizeForFinal(int)
com.google.android.material.textview.MaterialTextView: MaterialTextView(android.content.Context,android.util.AttributeSet)
org.conscrypt.OpenSSLEvpCipherAES$AES_256$CBC: OpenSSLEvpCipherAES$AES_256$CBC(org.conscrypt.OpenSSLCipher$Padding)
org.conscrypt.OpenSSLKey: org.conscrypt.OpenSSLKey wrapJCAPrivateKeyForTLSStackOnly(java.security.PrivateKey,java.security.PublicKey)
org.conscrypt.OpenSSLEvpCipherAES$AES_128: void checkSupportedKeySize(int)
org.conscrypt.NativeCrypto: long EVP_DigestSignInit(org.conscrypt.NativeRef$EVP_MD_CTX,long,org.conscrypt.NativeRef$EVP_PKEY)
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
org.conscrypt.OpenSSLECGroupContext: java.security.spec.ECParameterSpec getECParameterSpec()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
com.esotericsoftware.kryo.util.ObjectMap$MapIterator: ObjectMap$MapIterator(com.esotericsoftware.kryo.util.ObjectMap)
org.conscrypt.NativeRef$HMAC_CTX: void doFree(long)
com.esotericsoftware.kryo.io.ByteBufferInput: byte readByte()
org.conscrypt.SSLNullSession: java.lang.String getProtocol()
io.paperdb.Book: java.lang.String getPath(java.lang.String)
org.conscrypt.OpenSSLX509CRLEntry: java.util.Set getCriticalExtensionOIDs()
com.google.android.material.appbar.AppBarLayout: void setTargetElevation(float)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
org.conscrypt.ct.SignedCertificateTimestamp: SignedCertificateTimestamp(org.conscrypt.ct.SignedCertificateTimestamp$Version,byte[],long,byte[],org.conscrypt.ct.DigitallySigned,org.conscrypt.ct.SignedCertificateTimestamp$Origin)
com.esotericsoftware.kryo.util.IdentityObjectIntMap: int getAndIncrement(java.lang.Object,int,int)
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeBooleanField: void write(com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.io.ByteBufferInput: short[] readShorts(int)
org.conscrypt.ConscryptEngine: java.lang.String[] getEnabledProtocols()
org.conscrypt.NativeCrypto: void EVP_CIPHER_CTX_set_padding(org.conscrypt.NativeRef$EVP_CIPHER_CTX,boolean)
com.esotericsoftware.kryo.serializers.TaggedFieldSerializer: boolean isSkipUnknownTags()
org.conscrypt.ConscryptFileDescriptorSocket: byte[] getChannelId()
com.esotericsoftware.kryo.io.UnsafeMemoryOutput: UnsafeMemoryOutput(long,int)
com.esotericsoftware.kryo.io.UnsafeInput: UnsafeInput()
com.google.android.material.appbar.MaterialToolbar: void setElevation(float)
org.conscrypt.ConscryptFileDescriptorSocket: org.conscrypt.NativeSsl newSsl(org.conscrypt.SSLParametersImpl,org.conscrypt.ConscryptFileDescriptorSocket)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: void setChannelIdPrivateKey(java.security.PrivateKey)
org.conscrypt.ClientSessionContext: org.conscrypt.NativeSslSession getSessionFromPersistentCache(byte[])
org.conscrypt.ExternalSession: int getPeerPort()
org.conscrypt.PeerInfoProvider$2: int getPort()
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterTextColor()
com.google.android.material.card.MaterialCardView: void setCardBackgroundColor(android.content.res.ColorStateList)
org.conscrypt.SSLUtils: SSLUtils()
com.esotericsoftware.kryo.Kryo: int getNextRegistrationId()
androidx.appcompat.widget.SearchView: int getPreferredHeight()
de.javakaffee.kryoserializers.BitSetSerializer: java.util.BitSet copy(com.esotericsoftware.kryo.Kryo,java.util.BitSet)
com.esotericsoftware.reflectasm.MethodAccess: java.lang.Object invoke(java.lang.Object,int,java.lang.Object[])
org.conscrypt.ClientSessionContext$HostAndPort: boolean equals(java.lang.Object)
io.paperdb.Book: void delete(java.lang.String)
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeRegionField: void readSlow(com.esotericsoftware.kryo.io.Input,java.lang.Object)
com.esotericsoftware.kryo.io.ByteBufferInputStream: void setByteBuffer(java.nio.ByteBuffer)
com.esotericsoftware.minlog.Log: void trace(java.lang.String)
org.conscrypt.OpenSSLSignature: java.lang.Object engineGetParameter(java.lang.String)
de.javakaffee.kryoserializers.guava.ReverseListSerializer: de.javakaffee.kryoserializers.guava.ReverseListSerializer forReverseList()
org.conscrypt.NativeSslSession$Impl$1: java.security.cert.Certificate[] getPeerCertificates()
org.conscrypt.OpenSSLMac: void engineUpdate(java.nio.ByteBuffer)
org.conscrypt.Java8FileDescriptorSocket: void setHandshakeApplicationProtocolSelector(java.util.function.BiFunction)
org.conscrypt.OpenSSLCipher: boolean supportsVariableSizeKey()
com.esotericsoftware.kryo.util.IntMap: void putAll(com.esotericsoftware.kryo.util.IntMap)
org.conscrypt.OpenSSLCipherRSA: OpenSSLCipherRSA(int)
com.esotericsoftware.kryo.io.Input: int[] readInts(int,boolean)
com.esotericsoftware.kryo.serializers.ExternalizableSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
androidx.coordinatorlayout.widget.CoordinatorLayout: CoordinatorLayout(android.content.Context,android.util.AttributeSet)
com.esotericsoftware.kryo.serializers.ObjectField$ObjectLongField: void read(com.esotericsoftware.kryo.io.Input,java.lang.Object)
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
org.conscrypt.KeyManagerImpl: java.lang.String chooseEngineServerAlias(java.lang.String,java.security.Principal[],javax.net.ssl.SSLEngine)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet)
org.conscrypt.NativeSslSession$Impl: byte[] getId()
org.conscrypt.TrustManagerImpl: java.util.Collection sortPotentialAnchors(java.util.Set)
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer: java.lang.Object copy(com.esotericsoftware.kryo.Kryo,java.lang.Object)
com.esotericsoftware.kryo.serializers.DefaultSerializers$CollectionsEmptySetSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.Platform: java.lang.String getCurveName(java.security.spec.ECParameterSpec)
com.google.android.material.chip.Chip: void setGravity(int)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$BooleanArraySerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
com.google.android.material.internal.NavigationMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.esotericsoftware.kryo.serializers.CollectionSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.serializers.JavaSerializer$ObjectInputStreamWithKryoClassLoader: java.lang.Class resolveClass(java.io.ObjectStreamClass)
com.google.android.material.bottomappbar.BottomAppBar: float getCradleVerticalOffset()
com.esotericsoftware.kryo.serializers.FieldSerializer: void rebuildCachedFields()
org.conscrypt.ConscryptEngine: boolean isOutboundDone()
org.conscrypt.NativeCrypto: void SSL_interrupt(long,org.conscrypt.NativeSsl)
org.conscrypt.ActiveSession: javax.net.ssl.SSLSessionContext getSessionContext()
org.conscrypt.Conscrypt: java.lang.String getApplicationProtocol(javax.net.ssl.SSLEngine)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
org.conscrypt.ConscryptEngine: javax.net.ssl.SSLException convertException(java.lang.Throwable)
org.conscrypt.NativeCrypto: long X509_CRL_get_version(long,org.conscrypt.OpenSSLX509CRL)
org.conscrypt.OpenSSLMac: void engineUpdate(byte[],int,int)
org.conscrypt.OpenSSLCipher$Mode: org.conscrypt.OpenSSLCipher$Mode[] values()
org.conscrypt.Java7ExtendedSSLSession: java.security.Principal getLocalPrincipal()
org.conscrypt.SSLNullSession: int getPeerPort()
com.esotericsoftware.kryo.serializers.ObjectField$ObjectCharField: void read(com.esotericsoftware.kryo.io.Input,java.lang.Object)
org.conscrypt.ct.SignedCertificateTimestamp: void encodeTBS(java.io.OutputStream,org.conscrypt.ct.CertificateEntry)
org.conscrypt.Java8EngineWrapper: boolean getNeedClientAuth()
com.esotericsoftware.kryo.serializers.DefaultSerializers$KryoSerializableSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
org.conscrypt.AbstractConscryptEngine: void setChannelIdPrivateKey(java.security.PrivateKey)
com.esotericsoftware.kryo.serializers.TimeSerializers$MonthDaySerializer: java.time.MonthDay read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer: void setElementsCanBeNull(boolean)
org.conscrypt.NativeSslSession$Impl$1: boolean isValid()
de.javakaffee.kryoserializers.CollectionsEmptyMapSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.util.Map)
de.javakaffee.kryoserializers.JdkProxySerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.ActiveSession: java.security.cert.Certificate[] getPeerCertificates()
org.conscrypt.OpenSSLSignatureRawRSA: byte[] engineSign()
com.esotericsoftware.kryo.util.MapReferenceResolver: int getWrittenId(java.lang.Object)
com.esotericsoftware.kryo.serializers.DefaultSerializers$BooleanSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.google.android.material.behavior.SwipeDismissBehavior: SwipeDismissBehavior()
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: void sendUrgentData(int)
org.conscrypt.ConscryptEngine: void setEnableSessionCreation(boolean)
com.google.android.material.button.MaterialButton: void setShouldDrawSurfaceColorStroke(boolean)
com.esotericsoftware.kryo.util.IntArray: IntArray()
org.conscrypt.OpenSSLEvpCipherDESEDE: int getCipherBlockSize()
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeShortField: void copy(java.lang.Object,java.lang.Object)
org.conscrypt.OpenSSLSocketImpl: OpenSSLSocketImpl(java.net.InetAddress,int,java.net.InetAddress,int)
org.conscrypt.Java8EngineWrapper: Java8EngineWrapper(org.conscrypt.ConscryptEngine)
com.esotericsoftware.kryo.io.UnsafeMemoryOutput: int writeInt(int,boolean)
org.conscrypt.OpenSSLX509Certificate: org.conscrypt.OpenSSLX509Certificate fromCertificate(java.security.cert.Certificate)
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
androidx.recyclerview.widget.RecyclerView: void clearNestedRecyclerViewIfNotNested(androidx.recyclerview.widget.RecyclerView$ViewHolder)
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection$5: java.lang.Object create(java.lang.Object)
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection$6: java.lang.Object create(java.lang.Object)
org.conscrypt.CryptoUpcalls: byte[] rsaSignDigestWithPrivateKey(java.security.PrivateKey,int,byte[])
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior(android.content.Context,android.util.AttributeSet)
com.esotericsoftware.kryo.util.IntMap$Entry: IntMap$Entry()
de.javakaffee.kryoserializers.ArraysAsListSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.util.List)
com.google.android.material.chip.Chip: void setChipIconEnabled(boolean)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
org.conscrypt.ConscryptServerSocket: boolean getUseClientMode()
com.esotericsoftware.kryo.serializers.TimeSerializers$LocalDateTimeSerializer: java.time.LocalDateTime read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.NativeCrypto: void SSL_set_client_CA_list(long,org.conscrypt.NativeSsl,byte[][])
de.javakaffee.kryoserializers.SubListSerializers$JavaUtilSubListSerializer: com.esotericsoftware.kryo.Kryo addDefaultSerializer(com.esotericsoftware.kryo.Kryo)
org.conscrypt.OpenSSLECDHKeyAgreement: void engineInit(java.security.Key,java.security.SecureRandom)
org.conscrypt.OpenSSLSocketImpl: byte[] getAlpnSelectedProtocol()
com.esotericsoftware.kryo.serializers.TimeSerializers$ZoneOffsetSerializer: java.time.ZoneOffset read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.serializers.MapSerializer: void setKeyClass(java.lang.Class,com.esotericsoftware.kryo.Serializer)
com.esotericsoftware.kryo.util.IntMap: int findKey(java.lang.Object,boolean,int)
com.google.android.material.bottomappbar.BottomAppBar: void setHideOnScroll(boolean)
org.conscrypt.TrustManagerImpl$GlobalHostnameVerifierAdapter: boolean verify(java.lang.String,javax.net.ssl.SSLSession)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ShortArraySerializer: DefaultArraySerializers$ShortArraySerializer()
org.conscrypt.Platform: org.conscrypt.ConscryptFileDescriptorSocket createFileDescriptorSocket(java.lang.String,int,org.conscrypt.SSLParametersImpl)
de.javakaffee.kryoserializers.guava.ImmutableSetSerializer$SomeEnum: de.javakaffee.kryoserializers.guava.ImmutableSetSerializer$SomeEnum[] values()
com.esotericsoftware.kryo.io.UnsafeMemoryInput: float readFloat()
com.google.android.material.chip.ChipGroup: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
org.conscrypt.SessionSnapshot: java.lang.String getProtocol()
org.conscrypt.OpenSSLSignature$SHA1RSAPSS: OpenSSLSignature$SHA1RSAPSS()
org.conscrypt.IvParameters: java.lang.String engineToString()
com.google.android.material.chip.Chip: void setChipIconVisible(int)
org.conscrypt.OpenSSLContextImpl: OpenSSLContextImpl(java.lang.String[])
de.javakaffee.kryoserializers.jodatime.JodaLocalDateTimeSerializer: org.joda.time.LocalDateTime read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.NativeCrypto: void EVP_DigestVerifyUpdate(org.conscrypt.NativeRef$EVP_MD_CTX,byte[],int,int)
org.conscrypt.Conscrypt: org.conscrypt.AbstractConscryptEngine toConscrypt(javax.net.ssl.SSLEngine)
org.conscrypt.IvParameters: byte[] engineGetEncoded(java.lang.String)
org.conscrypt.OpenSSLKey: org.conscrypt.OpenSSLKey fromPrivateKeyPemInputStream(java.io.InputStream)
org.conscrypt.ConscryptEngine: void finalize()
com.esotericsoftware.kryo.io.Output: void write(int)
org.conscrypt.NativeCrypto: int ENGINE_SSL_read_direct(long,org.conscrypt.NativeSsl,long,int,org.conscrypt.NativeCrypto$SSLHandshakeCallbacks)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
org.conscrypt.OpenSSLSignature$SHA224RSAPSS: OpenSSLSignature$SHA224RSAPSS()
com.esotericsoftware.kryo.util.IdentityMap: void push(java.lang.Object,java.lang.Object,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object)
org.conscrypt.OpenSSLCipher: java.security.spec.AlgorithmParameterSpec getParameterSpec(java.security.AlgorithmParameters)
de.javakaffee.kryoserializers.jodatime.IdentifiableChronology: org.joda.time.Chronology valueOfId(java.lang.String)
de.javakaffee.kryoserializers.guava.ReverseListSerializer$ReverseList: java.util.List read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.serializers.DeflateSerializer: java.lang.Object copy(com.esotericsoftware.kryo.Kryo,java.lang.Object)
org.conscrypt.ActiveSession: java.lang.String getProtocol()
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: void setNeedClientAuth(boolean)
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
org.conscrypt.Java7ExtendedSSLSession: java.lang.String getRequestedServerName()
org.conscrypt.OpenSSLEvpCipherAES$AES_128$CBC$PKCS5Padding: OpenSSLEvpCipherAES$AES_128$CBC$PKCS5Padding()
com.esotericsoftware.kryo.io.KryoDataOutput: void write(byte[])
org.conscrypt.OpenSSLCipherRSA$OAEP: void engineSetPadding(java.lang.String)
org.conscrypt.OpenSSLCipherChaCha20: int doFinalInternal(byte[],int,int)
org.conscrypt.ExternalSession: java.lang.Object getValue(java.lang.String)
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
com.esotericsoftware.kryo.Kryo$DefaultInstantiatorStrategy$2: Kryo$DefaultInstantiatorStrategy$2(com.esotericsoftware.kryo.Kryo$DefaultInstantiatorStrategy,java.lang.reflect.Constructor,java.lang.Class)
com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.ReferenceResolver getReferenceResolver()
com.esotericsoftware.kryo.serializers.TimeSerializers$LocalTimeSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.time.LocalTime)
com.esotericsoftware.kryo.io.UnsafeOutput: void writeBytes(java.lang.Object,long,long,long)
de.javakaffee.kryoserializers.CollectionsEmptyListSerializer: java.util.List read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
de.javakaffee.kryoserializers.jodatime.JodaDateTimeSerializer: org.joda.time.DateTimeZone readTimeZone(com.esotericsoftware.kryo.io.Input)
com.google.android.material.textfield.TextInputLayout: void setCounterTextAppearance(int)
com.esotericsoftware.kryo.serializers.TaggedFieldSerializer: void removeField(java.lang.String)
com.esotericsoftware.kryo.serializers.DefaultSerializers$FloatSerializer: DefaultSerializers$FloatSerializer()
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: java.net.InetAddress getInetAddress()
com.esotericsoftware.kryo.ReferenceResolver: void reset()
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$DoubleArraySerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,double[])
org.conscrypt.FileClientSessionCache: org.conscrypt.SSLClientSessionCache usingDirectory(java.io.File)
com.google.android.material.chip.Chip: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
org.conscrypt.OpenSSLECPrivateKey: java.lang.String toString()
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
org.conscrypt.OpenSSLKey: java.security.PublicKey getPublicKey(java.security.spec.X509EncodedKeySpec,int)
androidx.cardview.widget.CardView: int getContentPaddingBottom()
androidx.cardview.widget.CardView: void setPreventCornerOverlap(boolean)
org.conscrypt.ConscryptFileDescriptorSocket: java.lang.String[] getApplicationProtocols()
androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()
com.esotericsoftware.kryo.io.Input: int read(byte[])
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: boolean getWantClientAuth()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipBackgroundColor()
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmByteField: void read(com.esotericsoftware.kryo.io.Input,java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$BooleanArraySerializer: boolean[] read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.OpenSSLX509CertPath: byte[] getEncoded()
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
com.esotericsoftware.kryo.pool.SoftReferenceQueue: java.lang.Object remove()
org.conscrypt.NativeCrypto: long PEM_read_bio_PrivateKey(long)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: int getSoTimeout()
org.conscrypt.Conscrypt: void setHostname(javax.net.ssl.SSLSocket,java.lang.String)
org.conscrypt.KeyManagerImpl: java.lang.String[] chooseAlias(java.lang.String[],java.security.Principal[])
com.esotericsoftware.kryo.io.UnsafeMemoryOutput: void writeLittleEndianInt(int)
com.esotericsoftware.kryo.serializers.TimeSerializers$OffsetDateTimeSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.time.OffsetDateTime)
org.conscrypt.OpenSSLBIOInputStream: OpenSSLBIOInputStream(java.io.InputStream,boolean)
org.conscrypt.ConscryptEngineSocket: org.conscrypt.ConscryptEngine access$400(org.conscrypt.ConscryptEngineSocket)
com.google.android.material.internal.NavigationMenuItemView: void setTextColor(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: void setSoLinger(boolean,int)
de.javakaffee.kryoserializers.guava.ImmutableMultimapSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
de.javakaffee.kryoserializers.guava.LinkedListMultimapSerializer: com.google.common.collect.LinkedListMultimap read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.serializers.DefaultSerializers$DateSerializer: java.util.Date create(com.esotericsoftware.kryo.Kryo,java.lang.Class,long)
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
com.esotericsoftware.kryo.io.UnsafeOutput: UnsafeOutput()
org.conscrypt.NativeSsl: int read(java.io.FileDescriptor,byte[],int,int,int)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: boolean isConnected()
org.conscrypt.ConscryptEngineSocket: java.io.OutputStream getUnderlyingOutputStream()
com.esotericsoftware.kryo.io.ByteBufferInput: java.lang.String readString()
com.esotericsoftware.kryo.serializers.OptionalSerializers$OptionalSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.NativeCrypto: void EVP_PKEY_free(long)
org.conscrypt.OpenSSLX509CRL: OpenSSLX509CRL(long)
org.conscrypt.ct.CertificateEntry: org.conscrypt.ct.CertificateEntry createForX509Certificate(java.security.cert.X509Certificate)
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
org.conscrypt.Platform: void setEndpointIdentificationAlgorithm(javax.net.ssl.SSLParameters,java.lang.String)
com.esotericsoftware.kryo.serializers.ObjectField$ObjectByteField: void copy(java.lang.Object,java.lang.Object)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$DoubleArraySerializer: double[] read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
androidx.cardview.widget.CardView: void setMinimumWidth(int)
org.conscrypt.Java7ExtendedSSLSession: java.lang.String getPeerHost()
androidx.recyclerview.widget.RecyclerView: void onPointerUp(android.view.MotionEvent)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$CharArraySerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.NativeCrypto: void EVP_CipherInit_ex(org.conscrypt.NativeRef$EVP_CIPHER_CTX,long,byte[],byte[],boolean)
com.google.android.material.chip.Chip: void setLines(int)
com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
de.javakaffee.kryoserializers.EnumSetSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: void setHandshakeTimeout(int)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: java.io.InputStream getInputStream()
com.esotericsoftware.kryo.io.UnsafeMemoryOutput: void writeByte(int)
com.google.android.material.card.MaterialCardView: void setBackgroundInternal(android.graphics.drawable.Drawable)
com.esotericsoftware.kryo.serializers.DefaultSerializers$StringBuilderSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.StringBuilder)
com.esotericsoftware.kryo.io.Output: void setBuffer(byte[],int)
org.conscrypt.ConscryptEngineSocket: ConscryptEngineSocket(java.net.Socket,java.lang.String,int,boolean,org.conscrypt.SSLParametersImpl)
de.javakaffee.kryoserializers.guava.HashMultimapSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.serializers.ObjectCachedFieldFactory: com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField createCachedField(java.lang.Class,java.lang.reflect.Field,com.esotericsoftware.kryo.serializers.FieldSerializer)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
org.conscrypt.NativeCrypto: long HMAC_CTX_new()
org.conscrypt.Java8FileDescriptorSocket$1: java.lang.String selectApplicationProtocol(javax.net.ssl.SSLEngine,java.util.List)
de.javakaffee.kryoserializers.wicket.MiniMapSerializer: org.apache.wicket.util.collections.MiniMap read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.ct.SignedCertificateTimestamp$SignatureType: SignedCertificateTimestamp$SignatureType(java.lang.String,int)
org.conscrypt.SSLParametersImpl: javax.net.ssl.X509KeyManager getDefaultX509KeyManager()
org.conscrypt.ConscryptEngine: int clientPSKKeyRequested(java.lang.String,byte[],byte[])
org.conscrypt.OpenSSLMessageDigestJDK: void engineUpdate(java.nio.ByteBuffer)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipIcon()
org.conscrypt.NativeRef$EC_POINT: void doFree(long)
org.conscrypt.CryptoUpcalls: byte[] rsaOpWithPrivateKey(java.security.PrivateKey,int,int,byte[])
com.esotericsoftware.kryo.util.IntArray: int[] ensureCapacity(int)
org.conscrypt.OpenSSLECKeyFactory: java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection$4: java.lang.Object create(java.lang.Object)
com.esotericsoftware.kryo.io.UnsafeMemoryOutput: void writeShorts(short[])
org.conscrypt.ConscryptServerSocket: void setNeedClientAuth(boolean)
org.conscrypt.TrustManagerImpl$TrustAnchorComparator: TrustManagerImpl$TrustAnchorComparator(org.conscrypt.TrustManagerImpl$1)
org.conscrypt.OpenSSLEvpCipherARC4: void checkSupportedMode(org.conscrypt.OpenSSLCipher$Mode)
org.conscrypt.SessionSnapshot: void removeValue(java.lang.String)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView findNestedRecyclerView(android.view.View)
org.conscrypt.OpenSSLCipher: int doFinalInternal(byte[],int,int)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$CharArraySerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.Serializer getSerializer(java.lang.Class)
org.conscrypt.OpenSSLCipherRSA$OAEP: java.security.AlgorithmParameters engineGetParameters()
androidx.appcompat.widget.SearchView: void setIconified(boolean)
com.google.android.material.button.MaterialButton: void setCheckable(boolean)
com.google.android.material.chip.Chip: void setTextStartPaddingResource(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
com.esotericsoftware.kryo.util.IdentityObjectIntMap: boolean containsKey(java.lang.Object)
org.conscrypt.ActiveSession: java.security.Principal getLocalPrincipal()
org.conscrypt.ct.Serialization: byte[] readDEROctetString(byte[])
com.esotericsoftware.kryo.util.Util: java.lang.Class getWrapperClass(java.lang.Class)
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
com.esotericsoftware.reflectasm.FieldAccess: void setShort(java.lang.Object,int,short)
de.javakaffee.kryoserializers.guava.ArrayListMultimapSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,com.google.common.collect.ArrayListMultimap)
com.esotericsoftware.kryo.io.FastOutput: int writeLong(long,boolean)
org.conscrypt.OpenSSLX509CertificateFactory$Parser: java.lang.Object generateItem(java.io.InputStream)
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
org.conscrypt.NativeSslSession: java.util.logging.Logger access$100()
de.javakaffee.kryoserializers.URISerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.OpenSSLCipherRSA: java.security.AlgorithmParameters engineGetParameters()
com.esotericsoftware.kryo.util.IntMap: java.lang.Object put(int,java.lang.Object)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSize()
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View)
org.conscrypt.EmptyArray: EmptyArray()
org.conscrypt.FileClientSessionCache$Impl: byte[] getSessionData(java.lang.String,int)
org.conscrypt.ActiveSession: javax.security.cert.X509Certificate[] getPeerCertificateChain()
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmLongField: void write(com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.util.IdentityObjectIntMap: int get(java.lang.Object,int)
org.conscrypt.OpenSSLAeadCipher: boolean arraysAreEqual(byte[],byte[])
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet,int)
org.conscrypt.OpenSSLMessageDigestJDK$SHA1: OpenSSLMessageDigestJDK$SHA1()
org.conscrypt.NativeCrypto: long SSL_set_mode(long,org.conscrypt.NativeSsl,long)
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeStringField: UnsafeCacheFields$UnsafeStringField(java.lang.reflect.Field)
com.esotericsoftware.kryo.io.ByteBufferOutput: void writeFloat(float)
com.esotericsoftware.kryo.io.UnsafeMemoryOutput: UnsafeMemoryOutput(int,int)
com.esotericsoftware.kryo.io.UnsafeMemoryOutput: void writeChar(char)
com.google.android.material.internal.NavigationMenuView: NavigationMenuView(android.content.Context,android.util.AttributeSet)
org.conscrypt.ct.CTVerifier: org.conscrypt.ct.CTVerificationResult verifySignedCertificateTimestamps(java.util.List,byte[],byte[])
org.conscrypt.SSLParametersImpl: void setWantClientAuth(boolean)
org.conscrypt.OpenSSLSocketImpl: int getSoLinger()
com.esotericsoftware.kryo.Kryo$DefaultInstantiatorStrategy: void setFallbackInstantiatorStrategy(org.objenesis.strategy.InstantiatorStrategy)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: boolean getUseClientMode()
org.conscrypt.NativeCryptoJni: void init()
org.conscrypt.ConscryptEngine: byte[] getChannelId()
com.esotericsoftware.kryo.serializers.BlowfishSerializer$1: BlowfishSerializer$1(com.esotericsoftware.kryo.serializers.BlowfishSerializer,java.io.OutputStream,int)
org.conscrypt.OpenSSLMac$HmacSHA1: OpenSSLMac$HmacSHA1()
org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker: java.util.Set getSupportedExtensions()
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior(android.content.Context,android.util.AttributeSet)
org.conscrypt.Conscrypt: javax.net.ssl.SSLContextSpi newPreferredSSLContextSpi()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeByteField: UnsafeCacheFields$UnsafeByteField(java.lang.reflect.Field)
org.conscrypt.AddressUtils: boolean isLiteralIpAddress(java.lang.String)
de.javakaffee.kryoserializers.CollectionsSingletonMapSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.util.Map)
androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)
androidx.recyclerview.widget.RecyclerView: void onAttachedToWindow()
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
com.esotericsoftware.kryo.util.FastestStreamFactory: com.esotericsoftware.kryo.io.Input getInput(byte[],int,int)
androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: void setNpnProtocols(byte[])
org.conscrypt.OpenSSLAeadCipherAES: java.lang.String getBaseCipherName()
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeStringField: void write(com.esotericsoftware.kryo.io.Output,java.lang.Object)
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection: SynchronizedCollectionsSerializer$SynchronizedCollection(java.lang.String,int,java.lang.Class,java.lang.reflect.Field,de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$1)
com.esotericsoftware.minlog.Log: void debug(java.lang.String,java.lang.String)
org.conscrypt.Conscrypt: void setBufferAllocator(javax.net.ssl.SSLSocket,org.conscrypt.BufferAllocator)
de.javakaffee.kryoserializers.CollectionsEmptyMapSerializer: java.util.Map read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
androidx.recyclerview.widget.RecyclerView: void clearOnChildAttachStateChangeListeners()
org.conscrypt.NativeCrypto: long SSL_CTX_set_timeout(long,org.conscrypt.AbstractSessionContext,long)
org.conscrypt.ClientSessionContext: void onBeforeAddSession(org.conscrypt.NativeSslSession)
org.conscrypt.AbstractConscryptSocket: boolean getKeepAlive()
com.esotericsoftware.kryo.io.FastOutput: FastOutput()
androidx.recyclerview.widget.RecyclerView: void stopNestedScroll(int)
com.google.android.material.appbar.AppBarLayout: int getTopInset()
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
io.paperdb.Book: java.lang.Object read(java.lang.String)
com.esotericsoftware.kryo.serializers.OptionalSerializers$OptionalSerializer: java.lang.Object copy(com.esotericsoftware.kryo.Kryo,java.lang.Object)
com.esotericsoftware.minlog.Log: void debug(java.lang.String)
org.conscrypt.OpenSSLCipher: void engineInit(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom)
org.conscrypt.ActiveSession: int getApplicationBufferSize()
org.conscrypt.NativeCrypto: void SSL_clear_error()
org.conscrypt.Java7ExtendedSSLSession: boolean isValid()
io.paperdb.Book: Book(java.lang.String,java.lang.String,java.util.HashMap)
org.conscrypt.OpenSSLX509Certificate: java.util.Set getCriticalExtensionOIDs()
com.esotericsoftware.kryo.io.UnsafeInput: int[] readInts(int,boolean)
de.javakaffee.kryoserializers.cglib.CGLibProxySerializer: boolean canSerialize(java.lang.Class)
de.javakaffee.kryoserializers.guava.UnmodifiableNavigableSetSerializer: java.util.NavigableSet copy(com.esotericsoftware.kryo.Kryo,java.util.NavigableSet)
org.conscrypt.OpenSSLCipherRSA: boolean isInitialized()
org.conscrypt.ConscryptFileDescriptorSocket: long serverSessionRequested(byte[])
com.esotericsoftware.kryo.io.KryoDataInput: void readFully(byte[],int,int)
com.esotericsoftware.kryo.Kryo: boolean writeReferenceOrNull(com.esotericsoftware.kryo.io.Output,java.lang.Object,boolean)
com.esotericsoftware.kryo.pool.KryoPoolQueueImpl: com.esotericsoftware.kryo.Kryo borrow()
com.esotericsoftware.kryo.io.Input: long readLong()
com.esotericsoftware.kryo.util.MapReferenceResolver: int addWrittenObject(java.lang.Object)
com.esotericsoftware.kryo.serializers.FieldSerializerConfig: void setUseAsm(boolean)
com.esotericsoftware.kryo.serializers.TimeSerializers$DurationSerializer: TimeSerializers$DurationSerializer(com.esotericsoftware.kryo.serializers.TimeSerializers$1)
com.google.android.material.chip.Chip: void setCheckableResource(int)
com.esotericsoftware.kryo.util.MapReferenceResolver: boolean useReferences(java.lang.Class)
com.esotericsoftware.kryo.io.UnsafeMemoryOutput: UnsafeMemoryOutput(java.io.OutputStream)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.esotericsoftware.kryo.io.ByteBufferInput: int fill(java.nio.ByteBuffer,int,int)
com.esotericsoftware.kryo.serializers.DefaultSerializers$EnumSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Enum)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
com.esotericsoftware.kryo.serializers.TimeSerializers$ZonedDateTimeSerializer: TimeSerializers$ZonedDateTimeSerializer(com.esotericsoftware.kryo.serializers.TimeSerializers$1)
org.conscrypt.ClientSessionContext: void setPersistentCache(org.conscrypt.SSLClientSessionCache)
org.conscrypt.OpenSSLX509CRLEntry: OpenSSLX509CRLEntry(long)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: java.lang.String toString()
androidx.coordinatorlayout.widget.CoordinatorLayout: int getNestedScrollAxes()
org.conscrypt.ConscryptFileDescriptorSocket: java.lang.String chooseServerPSKIdentityHint(org.conscrypt.PSKKeyManager)
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
com.esotericsoftware.kryo.io.Output: void writeString(java.lang.String)
org.conscrypt.ConscryptEngine: boolean isInboundDone()
com.esotericsoftware.kryo.serializers.TimeSerializers$InstantSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.SSLNullSession: javax.net.ssl.SSLSessionContext getSessionContext()
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: java.lang.String[] getEnabledProtocols()
com.esotericsoftware.kryo.io.ByteBufferInput: long skip(long)
io.paperdb.DbStoragePlainFile: DbStoragePlainFile(android.content.Context,java.lang.String,java.util.HashMap)
com.esotericsoftware.kryo.util.FastestStreamFactory: com.esotericsoftware.kryo.io.Output getOutput(int,int)
org.conscrypt.ActiveSession: byte[] getPeerSignedCertificateTimestamp()
com.esotericsoftware.kryo.KryoException: void addTrace(java.lang.String)
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmFloatField: void write(com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.google.android.material.chip.ChipGroup: void setSingleSelection(boolean)
com.esotericsoftware.kryo.io.UnsafeInput: double[] readDoubles(int)
org.conscrypt.NativeCrypto: java.lang.String[] get_cipher_names(java.lang.String)
com.google.android.material.chip.Chip: float getCloseIconStartPadding()
org.conscrypt.SSLParametersImpl: javax.net.ssl.X509TrustManager getDefaultX509TrustManager()
org.conscrypt.OpenSSLSocketImpl: int getReceiveBufferSize()
com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)
com.esotericsoftware.kryo.io.ByteBufferOutput: void close()
com.google.android.material.textfield.TextInputLayout: void setEndIconTintMode(android.graphics.PorterDuff$Mode)
com.esotericsoftware.kryo.StreamFactory: com.esotericsoftware.kryo.io.Output getOutput(byte[],int)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnClickListener(android.view.View$OnClickListener)
org.conscrypt.NativeCrypto: void setEnabledProtocols(long,org.conscrypt.NativeSsl,java.lang.String[])
com.esotericsoftware.kryo.serializers.DefaultSerializers$CurrencySerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.ConscryptEngine: javax.net.ssl.SSLEngineResult$HandshakeStatus getHandshakeStatusInternal()
org.conscrypt.ConscryptFileDescriptorSocket: javax.net.ssl.SSLSession getSession()
org.conscrypt.NativeCrypto: void X509_CRL_print(long,long,org.conscrypt.OpenSSLX509CRL)
org.conscrypt.OpenSSLX509Certificate: void checkValidity(java.util.Date)
de.javakaffee.kryoserializers.wicket.MiniMapSerializer: int getMaxEntries(org.apache.wicket.util.collections.MiniMap)
com.esotericsoftware.kryo.serializers.FieldSerializer$CachedFieldNameStrategy$2: java.lang.String getName(com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField)
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection: SynchronizedCollectionsSerializer$SynchronizedCollection(java.lang.String,int,java.lang.Class,java.lang.reflect.Field)
org.conscrypt.ChainStrengthAnalyzer: void checkSignatureAlgorithm(java.security.cert.X509Certificate)
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeByteField: void write(com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.NativeSsl: void verifyWithSniMatchers(java.lang.String)
com.esotericsoftware.kryo.util.ObjectMap: java.lang.Object get(java.lang.Object,java.lang.Object)
org.conscrypt.OpenSSLX509Certificate: void verify(java.security.PublicKey,java.security.Provider)
org.conscrypt.ConscryptEngine$1: org.conscrypt.ConscryptSession provideSession()
androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()
org.conscrypt.NativeCrypto: java.lang.String SSL_get_version(long,org.conscrypt.NativeSsl)
org.conscrypt.ConscryptEngine$1: ConscryptEngine$1(org.conscrypt.ConscryptEngine)
com.esotericsoftware.kryo.Kryo: java.lang.Object readObjectOrNull(com.esotericsoftware.kryo.io.Input,java.lang.Class,com.esotericsoftware.kryo.Serializer)
io.paperdb.Paper: void addSerializer(java.lang.Class,com.esotericsoftware.kryo.Serializer)
org.conscrypt.ConscryptFileDescriptorSocket: int access$300(org.conscrypt.ConscryptFileDescriptorSocket)
org.conscrypt.NativeCrypto: boolean SSL_session_reused(long,org.conscrypt.NativeSsl)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.esotericsoftware.kryo.serializers.FieldSerializerUnsafeUtilImpl: int fieldSizeOf(java.lang.Class)
com.esotericsoftware.kryo.io.Input: int fill(byte[],int,int)
org.conscrypt.ConscryptEngine: void setEnabledCipherSuites(java.lang.String[])
org.conscrypt.ConscryptEngine: int readEncryptedDataHeap(java.nio.ByteBuffer,int)
de.javakaffee.kryoserializers.FieldAnnotationAwareSerializer: boolean isMarked(java.lang.reflect.Field)
org.conscrypt.CertificatePriorityComparator: int compareStrength(java.security.cert.X509Certificate,java.security.cert.X509Certificate)
org.conscrypt.BufferAllocator$1: org.conscrypt.AllocatedBuffer allocateDirectBuffer(int)
org.conscrypt.OpenSSLECPrivateKey: java.security.spec.ECParameterSpec getParams()
org.conscrypt.NativeRef$EVP_PKEY_CTX: NativeRef$EVP_PKEY_CTX(long)
com.google.android.material.card.MaterialCardView: int getContentPaddingLeft()
org.conscrypt.NativeCrypto: java.lang.String SSL_SESSION_get_version(long)
androidx.appcompat.app.AppCompatViewInflater: android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet)
de.javakaffee.kryoserializers.jodatime.JodaLocalDateSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
org.conscrypt.SSLNullSession: int getPacketBufferSize()
org.conscrypt.OpenSSLECPrivateKey: org.conscrypt.OpenSSLKey getInstance(java.security.interfaces.ECPrivateKey)
org.conscrypt.OpenSSLX509CertificateFactory$Parser: java.util.List fromPkcs7PemInputStream(java.io.InputStream)
androidx.cardview.widget.CardView: boolean getUseCompatPadding()
com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)
org.conscrypt.Conscrypt$ProviderBuilder: Conscrypt$ProviderBuilder(org.conscrypt.Conscrypt$1)
org.conscrypt.OpenSSLSignatureRawRSA: void engineInitSign(java.security.PrivateKey)
org.conscrypt.OpenSSLRSAKeyFactory: java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)
com.esotericsoftware.minlog.Log: Log()
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
org.conscrypt.OpenSSLMac$HmacSHA256: OpenSSLMac$HmacSHA256()
org.conscrypt.Preconditions: Preconditions()
com.esotericsoftware.kryo.util.ObjectMap: java.lang.Object put_internal(java.lang.Object,java.lang.Object)
com.esotericsoftware.kryo.util.IdentityMap$Values: void reset()
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
org.conscrypt.NativeSslSession$Impl: long getCreationTime()
de.javakaffee.kryoserializers.jodatime.JodaDateTimeSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.Java8EngineSocket: Java8EngineSocket(java.lang.String,int,java.net.InetAddress,int,org.conscrypt.SSLParametersImpl)
org.conscrypt.NativeCrypto: long d2i_X509_CRL_bio(long)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
com.esotericsoftware.kryo.serializers.DefaultSerializers$TreeMapSerializer: DefaultSerializers$TreeMapSerializer()
org.conscrypt.PeerInfoProvider: java.lang.String getHostnameOrIP()
org.conscrypt.OpenSSLEvpCipherAES$AES_256$ECB$NoPadding: OpenSSLEvpCipherAES$AES_256$ECB$NoPadding()
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: java.net.InetAddress getLocalAddress()
org.conscrypt.ConscryptEngineSocket: void drainOutgoingQueue()
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
org.conscrypt.OpenSSLX509CRLEntry: byte[] getEncoded()
com.esotericsoftware.kryo.serializers.BeanSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.ConscryptEngineSocket$SSLInputStream: int access$100(org.conscrypt.ConscryptEngineSocket$SSLInputStream,byte[],int,int)
com.google.android.material.card.MaterialCardView: void setCardElevation(float)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
org.conscrypt.NativeCrypto: byte[] SSL_session_id(long,org.conscrypt.NativeSsl)
de.javakaffee.kryoserializers.guava.ImmutableMapSerializer$DummyEnum: de.javakaffee.kryoserializers.guava.ImmutableMapSerializer$DummyEnum valueOf(java.lang.String)
com.esotericsoftware.kryo.serializers.DefaultSerializers$ByteSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.google.android.material.chip.ChipGroup: void setOnCheckedChangeListener(com.google.android.material.chip.ChipGroup$OnCheckedChangeListener)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEndIconDrawable()
org.conscrypt.AbstractConscryptSocket: boolean isInputShutdown()
com.esotericsoftware.kryo.util.IntArray: boolean removeValue(int)
com.esotericsoftware.kryo.util.IntArray: java.lang.String toString()
com.esotericsoftware.kryo.serializers.FieldSerializer: com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField getField(java.lang.String)
org.conscrypt.Platform: boolean supportsX509ExtendedTrustManager()
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: boolean getTcpNoDelay()
org.conscrypt.NativeCrypto: void SSL_set_signed_cert_timestamp_list(long,org.conscrypt.NativeSsl,byte[])
com.esotericsoftware.kryo.serializers.FieldSerializerUnsafeUtilImpl: FieldSerializerUnsafeUtilImpl(com.esotericsoftware.kryo.serializers.FieldSerializer)
com.esotericsoftware.kryo.util.FastestStreamFactory: com.esotericsoftware.kryo.io.Input getInput(int)
com.esotericsoftware.kryo.io.Input: int readInt(boolean)
org.conscrypt.SessionSnapshot: byte[] getPeerSignedCertificateTimestamp()
de.javakaffee.kryoserializers.GregorianCalendarSerializer: java.util.GregorianCalendar read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
de.javakaffee.kryoserializers.KryoReflectionFactorySupport: java.lang.reflect.Constructor newConstructorForSerialization(java.lang.Class)
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
com.esotericsoftware.kryo.KryoCopyable: java.lang.Object copy(com.esotericsoftware.kryo.Kryo)
com.google.android.material.chip.Chip: void setCheckedIconVisible(int)
org.conscrypt.OpenSSLAeadCipher: void engineUpdateAAD(byte[],int,int)
org.conscrypt.OpenSSLX509Certificate: org.conscrypt.OpenSSLX509Certificate withDeletedExtension(java.lang.String)
com.esotericsoftware.kryo.serializers.MapSerializer: java.util.Map create(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.ConscryptEngineSocket$SSLOutputStream: void writeInternal(java.nio.ByteBuffer)
com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.google.android.material.chip.Chip: void setChipMinHeightResource(int)
com.esotericsoftware.kryo.serializers.FieldSerializerUnsafeUtil$Factory: FieldSerializerUnsafeUtil$Factory()
org.conscrypt.Conscrypt: void setDefaultHostnameVerifier(org.conscrypt.ConscryptHostnameVerifier)
com.google.android.material.card.MaterialCardView: void setRippleColorResource(int)
org.conscrypt.TrustManagerImpl: TrustManagerImpl(java.security.KeyStore)
org.conscrypt.NativeCrypto: int ENGINE_SSL_write_BIO_heap(long,org.conscrypt.NativeSsl,long,byte[],int,int,org.conscrypt.NativeCrypto$SSLHandshakeCallbacks)
org.conscrypt.OpenSSLSocketImpl: void setKeepAlive(boolean)
androidx.recyclerview.widget.RecyclerView: void onScrollStateChanged(int)
org.conscrypt.NativeSslSession$Impl: java.lang.String getPeerHost()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
de.javakaffee.kryoserializers.guava.TreeMultimapSerializer: void registerSerializers(com.esotericsoftware.kryo.Kryo)
org.conscrypt.NativeCrypto: long[] PEM_read_bio_PKCS7(long,int)
com.esotericsoftware.kryo.util.IntMap$Keys: void reset()
com.google.android.material.chip.ChipGroup: void setFlexWrap(int)
org.conscrypt.OpenSSLSignature$EngineType: OpenSSLSignature$EngineType(java.lang.String,int)
org.conscrypt.OpenSSLCipher: boolean supportsVariableSizeIv()
androidx.appcompat.widget.Toolbar: void setLogo(int)
de.javakaffee.kryoserializers.jodatime.JodaIntervalSerializer: JodaIntervalSerializer()
org.conscrypt.NativeSsl: int getError(int)
org.conscrypt.SSLParametersImpl: javax.net.ssl.X509TrustManager createDefaultX509TrustManager()
org.conscrypt.AbstractConscryptSocket: boolean getReuseAddress()
com.google.android.material.chip.Chip: void setTextStartPadding(float)
org.conscrypt.ExternalSession$Provider: org.conscrypt.ConscryptSession provideSession()
org.conscrypt.OpenSSLCipherChaCha20: void checkSupportedMode(org.conscrypt.OpenSSLCipher$Mode)
com.esotericsoftware.kryo.io.Output: void writeLong(long)
com.esotericsoftware.kryo.io.Input: int require(int)
org.conscrypt.AbstractConscryptEngine: javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[])
com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField: void setClass(java.lang.Class,com.esotericsoftware.kryo.Serializer)
com.esotericsoftware.kryo.serializers.TimeSerializers$YearMonthSerializer: TimeSerializers$YearMonthSerializer()
com.esotericsoftware.kryo.serializers.ObjectField$ObjectFloatField: ObjectField$ObjectFloatField(com.esotericsoftware.kryo.serializers.FieldSerializer)
org.conscrypt.OpenSSLAeadCipherAES$GCM: void checkSupportedMode(org.conscrypt.OpenSSLCipher$Mode)
org.conscrypt.NativeSslSession: void offerToResume(org.conscrypt.NativeSsl)
com.esotericsoftware.kryo.serializers.ObjectCachedFieldFactory: ObjectCachedFieldFactory()
com.esotericsoftware.kryo.serializers.DefaultSerializers$URLSerializer: java.net.URL read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.OpenSSLSocketImpl: boolean getOOBInline()
com.esotericsoftware.kryo.io.Output: void writeByte(byte)
com.esotericsoftware.kryo.pool.SoftReferenceQueue: java.lang.Object[] toArray()
com.google.android.material.radiobutton.MaterialRadioButton: android.content.res.ColorStateList getMaterialThemeColorsTintList()
de.javakaffee.kryoserializers.KryoReflectionFactorySupport: java.lang.reflect.Constructor getNoArgsConstructor(java.lang.Class)
org.conscrypt.TrustedCertificateIndex: void index(java.util.Set)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
org.conscrypt.ConscryptEngineSocket: boolean getWantClientAuth()
com.google.android.material.chip.Chip: void setChipDrawable(com.google.android.material.chip.ChipDrawable)
org.conscrypt.OpenSSLAeadCipher: void engineUpdateAAD(java.nio.ByteBuffer)
org.conscrypt.ExternalSession: java.security.cert.Certificate[] getLocalCertificates()
com.esotericsoftware.kryo.util.IntArray: int removeIndex(int)
com.google.android.material.appbar.HeaderBehavior: HeaderBehavior()
org.conscrypt.ConscryptFileDescriptorSocket$SSLOutputStream: ConscryptFileDescriptorSocket$SSLOutputStream(org.conscrypt.ConscryptFileDescriptorSocket)
androidx.lifecycle.ViewModel: ViewModel()
com.esotericsoftware.kryo.serializers.TaggedFieldSerializer: void setIgnoreUnknownTags(boolean)
org.conscrypt.GCMParameters: byte[] getIV()
com.esotericsoftware.kryo.io.Output: void writeChars(char[])
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$DoubleArraySerializer: DefaultArraySerializers$DoubleArraySerializer()
org.conscrypt.AbstractConscryptSocket: void addHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener)
androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollOffset()
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior(android.content.Context,android.util.AttributeSet)
org.conscrypt.TrustManagerImpl: TrustManagerImpl(java.security.KeyStore,org.conscrypt.CertPinManager,org.conscrypt.ConscryptCertStore)
com.esotericsoftware.kryo.serializers.TaggedFieldSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.Java8EngineWrapper: javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[],int,int,java.nio.ByteBuffer)
org.conscrypt.SSLUtils: java.security.cert.X509Certificate decodeX509Certificate(java.security.cert.CertificateFactory,byte[])
org.conscrypt.DefaultSSLContextImpl: javax.net.ssl.KeyManager[] getKeyManagers()
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: void handshakeCompleted()
com.esotericsoftware.kryo.util.DefaultClassResolver: com.esotericsoftware.kryo.Registration registerImplicit(java.lang.Class)
io.paperdb.DbStoragePlainFile: java.lang.Object readTableFile(java.lang.String,java.io.File)
com.esotericsoftware.kryo.io.UnsafeMemoryOutput: void updateBufferAddress()
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
com.esotericsoftware.kryo.io.Input: void setBuffer(byte[])
com.esotericsoftware.kryo.io.ByteBufferInput: double readDouble(double,boolean)
org.conscrypt.NativeSsl: java.lang.String getCipherSuite()
com.esotericsoftware.kryo.serializers.DefaultSerializers$EnumSetSerializer: DefaultSerializers$EnumSetSerializer()
org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: OpenSSLX509CertificateFactory$ParsingException(java.lang.String)
de.javakaffee.kryoserializers.CollectionsEmptyMapSerializer: CollectionsEmptyMapSerializer()
com.google.android.material.button.MaterialButton: MaterialButton(android.content.Context,android.util.AttributeSet)
com.esotericsoftware.kryo.serializers.DefaultSerializers$TreeSetSerializer: java.util.Collection create(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.ConscryptEngine: void clientCertificateRequested(byte[],int[],byte[][])
org.conscrypt.NativeSsl: boolean wasShutdownReceived()
org.conscrypt.OpenSSLECPointContext: java.security.spec.ECPoint getECPoint()
org.conscrypt.NativeCrypto: long asn1_read_uint64(long)
com.esotericsoftware.kryo.serializers.FieldSerializer$CachedFieldNameStrategy: java.lang.String getName(com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundColor(int)
org.conscrypt.OpenSSLSocketImpl: void setReuseAddress(boolean)
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmShortField: void read(com.esotericsoftware.kryo.io.Input,java.lang.Object)
androidx.appcompat.app.AppCompatViewInflater: android.view.View createViewByPrefix(android.content.Context,java.lang.String,java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior(android.content.Context,android.util.AttributeSet)
org.conscrypt.ConscryptEngine: void sendSSLShutdown()
com.esotericsoftware.kryo.serializers.DefaultSerializers$ByteSerializer: java.lang.Byte read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
io.paperdb.Paper: java.lang.Object get(java.lang.String,java.lang.Object)
com.google.android.material.chip.Chip: void setCloseIconEndPaddingResource(int)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: java.lang.String[] getSupportedProtocols()
io.paperdb.PaperDbException: PaperDbException(java.lang.String,java.lang.Throwable)
org.conscrypt.Platform: void setSSLParametersOnImpl(javax.net.ssl.SSLParameters,org.conscrypt.SSLParametersImpl)
com.esotericsoftware.kryo.serializers.FieldSerializer: com.esotericsoftware.kryo.serializers.FieldSerializer$CachedFieldFactory getObjectFieldFactory()
androidx.recyclerview.widget.RecyclerView: void onLayout(boolean,int,int,int,int)
androidx.recyclerview.widget.RecyclerView: void dispatchLayout()
com.esotericsoftware.kryo.io.Output: int writeVarLong(long,boolean)
org.conscrypt.ConscryptFileDescriptorSocket: void setApplicationProtocolSelector(org.conscrypt.ApplicationProtocolSelector)
com.esotericsoftware.kryo.util.ListReferenceResolver: int getWrittenId(java.lang.Object)
org.conscrypt.AbstractConscryptEngine: void setChannelIdEnabled(boolean)
org.conscrypt.OpenSSLEvpCipherDESEDE: java.lang.String getCipherName(int,org.conscrypt.OpenSSLCipher$Mode)
org.conscrypt.Platform: java.lang.Class getClass(java.lang.String[])
org.conscrypt.OpenSSLX509CertPath$Encoding: OpenSSLX509CertPath$Encoding(java.lang.String,int,java.lang.String)
com.esotericsoftware.kryo.io.ByteBufferOutput: ByteBufferOutput()
org.conscrypt.OpenSSLECPrivateKey: org.conscrypt.OpenSSLKey wrapPlatformKey(java.security.interfaces.ECPrivateKey,org.conscrypt.OpenSSLECGroupContext)
org.conscrypt.OpenSSLX509CertPath$Encoding: org.conscrypt.OpenSSLX509CertPath$Encoding findByApiName(java.lang.String)
org.conscrypt.NativeCrypto: boolean EVP_DigestVerifyFinal(org.conscrypt.NativeRef$EVP_MD_CTX,byte[],int,int)
org.conscrypt.NativeCrypto: long asn1_write_tag(long,int)
org.conscrypt.OpenSSLRSAPrivateCrtKey: org.conscrypt.OpenSSLKey init(java.security.spec.RSAPrivateCrtKeySpec)
com.esotericsoftware.kryo.io.KryoDataOutput: void writeBytes(java.lang.String)
org.conscrypt.NativeCrypto: void ENGINE_SSL_force_read(long,org.conscrypt.NativeSsl,org.conscrypt.NativeCrypto$SSLHandshakeCallbacks)
com.esotericsoftware.kryo.pool.SoftReferenceQueue: int size()
com.esotericsoftware.reflectasm.MethodAccess: int getIndex(java.lang.String,int)
org.conscrypt.OpenSSLRSAPrivateCrtKey: OpenSSLRSAPrivateCrtKey(org.conscrypt.OpenSSLKey)
com.esotericsoftware.kryo.util.IntMap$Entries: void reset()
com.esotericsoftware.kryo.Registration: org.objenesis.instantiator.ObjectInstantiator getInstantiator()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
org.conscrypt.NativeCrypto: java.lang.String SSL_get_current_cipher(long,org.conscrypt.NativeSsl)
de.javakaffee.kryoserializers.guava.HashMultimapSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: void setPerformancePreferences(int,int,int)
org.conscrypt.OAEPParameters: void engineInit(java.security.spec.AlgorithmParameterSpec)
de.javakaffee.kryoserializers.SubListSerializers: SubListSerializers()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
org.conscrypt.AllocatedBuffer: org.conscrypt.AllocatedBuffer retain()
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
com.esotericsoftware.kryo.io.Input: boolean readBoolean()
com.esotericsoftware.kryo.io.FastInput: FastInput(java.io.InputStream)
org.conscrypt.NativeSslSession: javax.net.ssl.SSLSession toSSLSession()
com.esotericsoftware.reflectasm.FieldAccess: com.esotericsoftware.reflectasm.FieldAccess get(java.lang.Class)
com.esotericsoftware.kryo.io.ByteBufferOutput: int writeInt(int,boolean)
com.esotericsoftware.kryo.serializers.ClosureSerializer$Closure: ClosureSerializer$Closure()
de.javakaffee.kryoserializers.wicket.MiniMapSerializer: MiniMapSerializer()
com.esotericsoftware.kryo.io.UnsafeOutput: void writeChar(char)
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
org.conscrypt.OpenSSLMessageDigestJDK$SHA384: OpenSSLMessageDigestJDK$SHA384()
org.conscrypt.ConscryptFileDescriptorSocket$SSLOutputStream: void write(int)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
com.esotericsoftware.kryo.io.ByteBufferInput: int read(byte[])
com.google.android.material.appbar.AppBarLayout: android.graphics.drawable.Drawable getStatusBarForeground()
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$CharArraySerializer: DefaultArraySerializers$CharArraySerializer()
com.esotericsoftware.kryo.util.IntArray: IntArray(int[])
org.conscrypt.ct.SignedCertificateTimestamp$Origin: SignedCertificateTimestamp$Origin(java.lang.String,int)
org.conscrypt.Conscrypt: java.lang.String getHostname(javax.net.ssl.SSLEngine)
com.esotericsoftware.kryo.serializers.ExternalizableSerializer: void writeExternal(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.SSLNullSession: int getApplicationBufferSize()
com.esotericsoftware.kryo.io.Output: void writeByte(int)
com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.util.ObjectMap getContext()
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: void setUseSessionTickets(boolean)
org.conscrypt.ActiveSession: void checkPeerCertificatesPresent()
de.javakaffee.kryoserializers.guava.LinkedHashMultimapSerializer: com.google.common.collect.LinkedHashMultimap read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.ConscryptEngine: int selectApplicationProtocol(byte[])
org.conscrypt.ConscryptEngineSocket: ConscryptEngineSocket(org.conscrypt.SSLParametersImpl)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)
com.google.android.material.internal.ForegroundLinearLayout: void setForegroundGravity(int)
org.conscrypt.TrustManagerImpl: java.util.List getTrustedChainForServer(java.security.cert.X509Certificate[],java.lang.String,javax.net.ssl.SSLEngine)
com.esotericsoftware.kryo.serializers.UnsafeCachedFieldFactory: com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField createCachedField(java.lang.Class,java.lang.reflect.Field,com.esotericsoftware.kryo.serializers.FieldSerializer)
org.conscrypt.Java7ExtendedSSLSession: long getLastAccessedTime()
org.conscrypt.Platform: org.conscrypt.ConscryptEngineSocket createEngineSocket(java.net.InetAddress,int,java.net.InetAddress,int,org.conscrypt.SSLParametersImpl)
org.conscrypt.NativeCrypto: byte[] i2d_X509_REVOKED(long)
org.conscrypt.NativeCrypto: void SSL_set_tlsext_host_name(long,org.conscrypt.NativeSsl,java.lang.String)
com.esotericsoftware.kryo.io.OutputChunked: void endChunks()
org.conscrypt.ConscryptFileDescriptorSocket: boolean getUseClientMode()
io.paperdb.Paper: io.paperdb.Book bookOn(java.lang.String)
com.esotericsoftware.kryo.io.UnsafeMemoryOutput: void writeBytes(java.lang.Object,long,long)
org.conscrypt.SSLParametersImpl: java.lang.String[] getApplicationProtocols()
com.google.android.material.chip.ChipGroup: int getCheckedChipId()
com.esotericsoftware.kryo.io.Output: Output(byte[])
com.esotericsoftware.kryo.util.ObjectMap$Values: boolean hasNext()
org.conscrypt.Preconditions: java.lang.String badPositionIndexes(int,int,int)
org.conscrypt.OpenSSLSocketImpl: boolean isBound()
org.conscrypt.ConscryptFileDescriptorSocket: void setNeedClientAuth(boolean)
org.conscrypt.Conscrypt: void setHandshakeListener(javax.net.ssl.SSLEngine,org.conscrypt.HandshakeListener)
de.javakaffee.kryoserializers.SubListSerializers$JavaUtilSubListSerializer: java.lang.Object copy(com.esotericsoftware.kryo.Kryo,java.lang.Object)
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
org.conscrypt.NativeConstants: NativeConstants()
org.conscrypt.Java8EngineWrapper: void closeOutbound()
com.esotericsoftware.kryo.Kryo: java.lang.Object readObjectOrNull(com.esotericsoftware.kryo.io.Input,java.lang.Class)
de.javakaffee.kryoserializers.EnumMapSerializer: java.util.EnumMap copy(com.esotericsoftware.kryo.Kryo,java.util.EnumMap)
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationX()
org.conscrypt.OpenSSLSocketImpl: int getLocalPort()
com.esotericsoftware.minlog.Log$Logger: Log$Logger()
com.esotericsoftware.kryo.io.Util: Util()
org.conscrypt.OpenSSLX509CRL: void verifyInternal(java.security.PublicKey,java.lang.String)
org.conscrypt.ClientSessionContext: void putSession(org.conscrypt.ClientSessionContext$HostAndPort,org.conscrypt.NativeSslSession)
com.esotericsoftware.kryo.pool.KryoPool$Builder: KryoPool$Builder(com.esotericsoftware.kryo.pool.KryoFactory)
org.conscrypt.ConscryptEngine: void setUseSessionTickets(boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl(androidx.core.view.WindowInsetsCompat)
org.conscrypt.IvParameters: void engineInit(java.security.spec.AlgorithmParameterSpec)
de.javakaffee.kryoserializers.CollectionsEmptySetSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.OpenSSLSignature: void configureEVP_PKEY_CTX(long)
org.conscrypt.OpenSSLSocketImpl: boolean isOutputShutdown()
com.esotericsoftware.kryo.serializers.TaggedFieldSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.ct.CTLogStore: org.conscrypt.ct.CTLogInfo getKnownLog(byte[])
com.google.android.material.card.MaterialCardView: void setStrokeWidth(int)
com.esotericsoftware.kryo.io.UnsafeMemoryInput: long[] readLongs(int,boolean)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection$2: UnmodifiableCollectionsSerializer$UnmodifiableCollection$2(java.lang.String,int,java.lang.Class,java.lang.reflect.Field)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ByteArraySerializer: byte[] read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.OpenSSLSocketImpl: boolean getReuseAddress()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
com.esotericsoftware.kryo.serializers.TimeSerializers$OffsetDateTimeSerializer: TimeSerializers$OffsetDateTimeSerializer(com.esotericsoftware.kryo.serializers.TimeSerializers$1)
org.conscrypt.NativeCrypto: java.lang.String[] checkEnabledProtocols(java.lang.String[])
org.conscrypt.OpenSSLKey: java.security.PrivateKey getPrivateKey(java.security.spec.PKCS8EncodedKeySpec,int)
com.esotericsoftware.kryo.io.ByteBufferInput: void setVarIntsEnabled(boolean)
com.esotericsoftware.kryo.serializers.DefaultSerializers$LocaleSerializer: java.util.Locale read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.Java7ExtendedSSLSession: java.lang.String getProtocol()
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getEndIconContentDescription()
org.conscrypt.ct.SignedCertificateTimestamp$SignatureType: org.conscrypt.ct.SignedCertificateTimestamp$SignatureType valueOf(java.lang.String)
com.esotericsoftware.kryo.io.ByteBufferInput: void readBytes(byte[])
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(int)
org.conscrypt.OpenSSLCipherRSA$OAEP$SHA256: OpenSSLCipherRSA$OAEP$SHA256()
org.conscrypt.NativeCrypto: long SSL_set_options(long,org.conscrypt.NativeSsl,long)
com.esotericsoftware.kryo.io.ByteBufferOutput: void clear()
com.google.android.material.button.MaterialButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
org.conscrypt.Platform: java.lang.String oidToAlgorithmName(java.lang.String)
org.conscrypt.ExternalSession: java.security.cert.Certificate[] getPeerCertificates()
com.esotericsoftware.kryo.serializers.DefaultSerializers$FloatSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.KeyGeneratorImpl: void checkKeySize(int)
io.paperdb.DbStoragePlainFile: java.util.List getAllKeys()
androidx.recyclerview.widget.RecyclerView: void onScrolled(int,int)
androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()
com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)
org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker: TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker(boolean,java.security.cert.X509Certificate,org.conscrypt.TrustManagerImpl$1)
com.esotericsoftware.kryo.io.ByteBufferInput: java.nio.ByteOrder order()
org.conscrypt.ConscryptFileDescriptorSocket: ConscryptFileDescriptorSocket(java.lang.String,int,java.net.InetAddress,int,org.conscrypt.SSLParametersImpl)
com.esotericsoftware.kryo.io.UnsafeInput: int readInt(boolean)
org.conscrypt.OpenSSLRSAPrivateCrtKey: int hashCode()
org.conscrypt.OpenSSLX509Certificate: void verify(java.security.PublicKey)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconView()
org.conscrypt.OpenSSLRSAPrivateKey: boolean equals(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.esotericsoftware.kryo.io.UnsafeMemoryInput: void setBuffer(java.nio.ByteBuffer)
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmCharField: void write(com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.OpenSSLRSAKeyPairGenerator: OpenSSLRSAKeyPairGenerator()
org.conscrypt.ConscryptFileDescriptorSocket: org.conscrypt.ConscryptSession provideAfterHandshakeSession()
com.esotericsoftware.kryo.serializers.ObjectField: void setField(java.lang.Object,java.lang.Object)
org.conscrypt.ConscryptFileDescriptorSocket: byte[] getTlsUnique()
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
org.conscrypt.ConscryptFileDescriptorSocket$2: ConscryptFileDescriptorSocket$2(org.conscrypt.ConscryptFileDescriptorSocket)
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
org.conscrypt.OpenSSLSocketImpl: void setTcpNoDelay(boolean)
org.conscrypt.ConscryptFileDescriptorSocket: void setApplicationProtocols(java.lang.String[])
com.esotericsoftware.kryo.pool.KryoCallback: java.lang.Object execute(com.esotericsoftware.kryo.Kryo)
io.paperdb.DbStoragePlainFile: void insert(java.lang.String,java.lang.Object)
com.esotericsoftware.minlog.Log: void WARN()
com.esotericsoftware.kryo.util.IntMap$Keys: com.esotericsoftware.kryo.util.IntArray toArray()
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: void setAlpnProtocols(byte[])
io.paperdb.Book: java.lang.Object read(java.lang.String,java.lang.Object)
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
org.conscrypt.OpenSSLAeadCipher: boolean allowsNonceReuse()
com.esotericsoftware.minlog.Log: void trace(java.lang.String,java.lang.String,java.lang.Throwable)
com.esotericsoftware.kryo.util.Util: java.lang.Class getElementClass(java.lang.Class)
com.esotericsoftware.kryo.serializers.TimeSerializers$PeriodSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.time.Period)
com.google.android.material.card.MaterialCardView: void setStrokeColor(android.content.res.ColorStateList)
org.conscrypt.ct.SignedCertificateTimestamp: org.conscrypt.ct.SignedCertificateTimestamp$Version getVersion()
de.javakaffee.kryoserializers.dexx.MapSerializer: MapSerializer()
com.esotericsoftware.kryo.serializers.TimeSerializers$YearSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.util.ObjectMap: void clear(int)
org.conscrypt.BuildConfig: BuildConfig()
org.conscrypt.ConscryptFileDescriptorSocket: void serverCertificateRequested()
org.conscrypt.NativeSsl: boolean wasShutdownSent()
org.conscrypt.OpenSSLCipherChaCha20: int getCipherBlockSize()
org.conscrypt.OpenSSLCipher: void checkSupportedKeySize(int)
com.esotericsoftware.kryo.io.UnsafeOutput: void writeShort(int)
androidx.recyclerview.widget.RecyclerView: void dispatchOnScrolled(int,int)
org.conscrypt.OpenSSLX509Certificate: java.util.List fromPkcs7DerInputStream(java.io.InputStream)
com.esotericsoftware.kryo.util.ListReferenceResolver: void setReadObject(int,java.lang.Object)
org.conscrypt.AbstractConscryptSocket: boolean isOutputShutdown()
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomEnd()
org.conscrypt.NativeCrypto: byte[] SSL_get_signed_cert_timestamp_list(long,org.conscrypt.NativeSsl)
com.esotericsoftware.kryo.util.ObjectMap: int nextPowerOfTwo(int)
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
org.conscrypt.NativeCrypto: int SSL_get_shutdown(long,org.conscrypt.NativeSsl)
org.conscrypt.OpenSSLAeadCipherAES: void checkSupportedKeySize(int)
org.conscrypt.NativeCrypto: long X509_CRL_get0_by_serial(long,org.conscrypt.OpenSSLX509CRL,byte[])
org.conscrypt.ct.DigitallySigned: org.conscrypt.ct.DigitallySigned$SignatureAlgorithm getSignatureAlgorithm()
org.conscrypt.PSKKeyManager: javax.crypto.SecretKey getKey(java.lang.String,java.lang.String,java.net.Socket)
org.conscrypt.AbstractSessionContext$2: AbstractSessionContext$2(org.conscrypt.AbstractSessionContext,java.util.Iterator)
org.conscrypt.ConscryptEngine: int readPlaintextData(java.nio.ByteBuffer)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$LongArraySerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,long[])
org.conscrypt.NativeSsl: long getTimeout()
org.conscrypt.NativeCrypto: long EVP_parse_private_key(byte[])
androidx.recyclerview.widget.RecyclerView: void stopScroll()
com.esotericsoftware.kryo.serializers.DefaultSerializers$CharsetSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.pool.SoftReferenceQueue: boolean add(java.lang.Object)
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(java.lang.CharSequence)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: boolean getEnableSessionCreation()
org.conscrypt.ConscryptFileDescriptorSocket: int access$200(org.conscrypt.ConscryptFileDescriptorSocket)
org.conscrypt.OpenSSLSocketImpl: void shutdownOutput()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
org.conscrypt.OpenSSLBIOInputStream: int gets(byte[])
com.esotericsoftware.kryo.io.Input: Input(byte[])
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: void setUseClientMode(boolean)
com.esotericsoftware.kryo.Registration: int getId()
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmFloatField: void read(com.esotericsoftware.kryo.io.Input,java.lang.Object)
org.conscrypt.AllocatedBuffer$1: org.conscrypt.AllocatedBuffer release()
com.esotericsoftware.kryo.serializers.TimeSerializers$LocalTimeSerializer: java.time.LocalTime read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.NativeCrypto: void X509_delete_ext(long,org.conscrypt.OpenSSLX509Certificate,java.lang.String)
com.esotericsoftware.kryo.io.KryoDataInput: KryoDataInput(com.esotericsoftware.kryo.io.Input)
de.javakaffee.kryoserializers.SubListSerializers$ArrayListSubListSerializer: java.util.List read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.KeyGeneratorImpl: void engineInit(java.security.SecureRandom)
org.conscrypt.IvParameters: void engineInit(byte[])
com.google.android.material.card.MaterialCardView: float getRadius()
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ShortArraySerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,short[])
org.conscrypt.TrustManagerImpl: java.util.List checkTrusted(java.security.cert.X509Certificate[],java.lang.String,javax.net.ssl.SSLSession,javax.net.ssl.SSLParameters,boolean)
org.conscrypt.NativeSslSession$Impl: long access$300(org.conscrypt.NativeSslSession$Impl)
androidx.recyclerview.widget.RecyclerView: boolean isLayoutSuppressed()
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
org.conscrypt.NativeCrypto: int ECDSA_sign(byte[],byte[],org.conscrypt.NativeRef$EVP_PKEY)
org.conscrypt.ExternalSession: java.lang.String getRequestedServerName()
com.esotericsoftware.kryo.serializers.OptionalSerializers$OptionalSerializer: OptionalSerializers$OptionalSerializer(com.esotericsoftware.kryo.serializers.OptionalSerializers$1)
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context)
org.conscrypt.ConscryptFileDescriptorSocket: void setEnabledProtocols(java.lang.String[])
com.esotericsoftware.kryo.serializers.DefaultSerializers$EnumSetSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.util.EnumSet)
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
org.conscrypt.KitKatPlatformOpenSSLSocketAdapterFactory: KitKatPlatformOpenSSLSocketAdapterFactory(org.conscrypt.OpenSSLSocketFactoryImpl)
com.esotericsoftware.kryo.serializers.FieldSerializer: boolean getSerializeTransient()
org.conscrypt.OpenSSLRSAPrivateCrtKey: java.math.BigInteger getPublicExponent()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getStableInsets()
com.esotericsoftware.kryo.serializers.TimeSerializers$OffsetDateTimeSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.OpenSSLKey: org.conscrypt.OpenSSLKey wrapPrivateKey(java.security.PrivateKey)
org.conscrypt.NativeCrypto: long asn1_write_sequence(long)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: void startHandshake()
org.conscrypt.TrustManagerImpl$GlobalHostnameVerifierAdapter: TrustManagerImpl$GlobalHostnameVerifierAdapter(java.lang.String,int)
org.conscrypt.SessionSnapshot: java.security.cert.X509Certificate[] getPeerCertificates()
org.conscrypt.Conscrypt: void setServerSessionCache(javax.net.ssl.SSLContext,org.conscrypt.SSLServerSessionCache)
androidx.core.view.WindowInsetsCompat$Impl: boolean isConsumed()
org.conscrypt.ConscryptEngine: javax.net.ssl.SSLEngineResult$HandshakeStatus getHandshakeStatus(int)
com.esotericsoftware.kryo.util.DefaultStreamFactory: com.esotericsoftware.kryo.io.Input getInput(int)
com.esotericsoftware.kryo.io.Output: void writeShorts(short[])
com.esotericsoftware.kryo.serializers.TimeSerializers$OffsetTimeSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.time.OffsetTime)
org.conscrypt.OpenSSLX509CertPath: byte[] getEncoded(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)
org.conscrypt.NativeCrypto: void SSL_do_handshake(long,org.conscrypt.NativeSsl,java.io.FileDescriptor,org.conscrypt.NativeCrypto$SSLHandshakeCallbacks,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getRippleColor()
org.conscrypt.OpenSSLBIOInputStream: long getBioContext()
org.conscrypt.OpenSSLRSAPrivateKey: org.conscrypt.OpenSSLKey init(java.security.spec.RSAPrivateKeySpec)
com.esotericsoftware.kryo.io.Input: Input(java.io.InputStream)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setOnClickListener(android.view.View$OnClickListener)
org.conscrypt.NativeSslSession$Impl: NativeSslSession$Impl(org.conscrypt.AbstractSessionContext,org.conscrypt.NativeRef$SSL_SESSION,java.lang.String,int,java.security.cert.X509Certificate[],byte[],byte[],org.conscrypt.NativeSslSession$1)
org.conscrypt.OAEPParameters: byte[] engineGetEncoded(java.lang.String)
com.esotericsoftware.kryo.io.Output: int position()
com.esotericsoftware.kryo.serializers.FieldSerializerConfig: void setCachedFieldNameStrategy(com.esotericsoftware.kryo.serializers.FieldSerializer$CachedFieldNameStrategy)
org.conscrypt.NativeCrypto: long create_BIO_OutputStream(java.io.OutputStream)
org.conscrypt.ByteArray: int hashCode()
org.conscrypt.NativeSslSession$Impl$1: javax.net.ssl.SSLSessionContext getSessionContext()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setCircularRevealScrimColor(int)
com.esotericsoftware.kryo.util.IntArray: IntArray(boolean,int)
org.conscrypt.ConscryptHostnameVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)
org.conscrypt.OpenSSLEvpCipherAES$AES_128$CTR: OpenSSLEvpCipherAES$AES_128$CTR()
org.conscrypt.ConscryptServerSocket: void setEnabledCipherSuites(java.lang.String[])
com.esotericsoftware.kryo.io.UnsafeMemoryOutput: void writeInt(int)
androidx.appcompat.widget.AbsActionBarView: void setContentHeight(int)
org.conscrypt.AbstractConscryptEngine: javax.net.ssl.SSLSession getHandshakeSession()
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeObjectField: UnsafeCacheFields$UnsafeObjectField(com.esotericsoftware.kryo.serializers.FieldSerializer)
org.conscrypt.ct.CTVerifier: void verifyExternalSCTs(java.util.List,org.conscrypt.OpenSSLX509Certificate,org.conscrypt.ct.CTVerificationResult)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: boolean isInputShutdown()
androidx.recyclerview.widget.RecyclerView: int getScrollState()
androidx.recyclerview.widget.RecyclerView: int getChildDrawingOrder(int,int)
com.esotericsoftware.kryo.io.ByteBufferOutput: void write(byte[])
org.conscrypt.OpenSSLEvpCipherAES$AES$CBC$NoPadding: OpenSSLEvpCipherAES$AES$CBC$NoPadding()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
org.conscrypt.ECParameters: ECParameters()
de.javakaffee.kryoserializers.EnumMapSerializer: java.util.EnumMap create(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
de.javakaffee.kryoserializers.wicket.MiniMapSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,org.apache.wicket.util.collections.MiniMap)
org.conscrypt.Conscrypt: org.conscrypt.ConscryptHostnameVerifier getDefaultHostnameVerifier(javax.net.ssl.TrustManager)
com.google.android.material.chip.Chip: float getCloseIconSize()
org.conscrypt.NativeCrypto: long X509_get_notAfter(long,org.conscrypt.OpenSSLX509Certificate)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: java.lang.String[] getSupportedProtocols()
org.conscrypt.Platform: java.io.FileDescriptor getFileDescriptor(java.net.Socket)
com.google.android.material.chip.Chip: void setChipStrokeWidthResource(int)
org.conscrypt.TrustManagerImpl: javax.net.ssl.SSLSession getHandshakeSessionOrThrow(javax.net.ssl.SSLSocket)
androidx.recyclerview.widget.RecyclerView: void initChildrenHelper()
org.conscrypt.ConscryptEngineSocket: org.conscrypt.ConscryptEngine newEngine(org.conscrypt.SSLParametersImpl,org.conscrypt.ConscryptEngineSocket)
org.conscrypt.BaseOpenSSLSocketAdapterFactory: BaseOpenSSLSocketAdapterFactory(org.conscrypt.OpenSSLSocketFactoryImpl)
org.conscrypt.SessionSnapshot: byte[] getId()
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ByteArraySerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.TrustedCertificateIndex: java.security.cert.TrustAnchor findByIssuerAndSignature(java.security.cert.X509Certificate)
org.conscrypt.NativeCrypto: int EVP_DigestFinal_ex(org.conscrypt.NativeRef$EVP_MD_CTX,byte[],int)
androidx.recyclerview.widget.RecyclerView: void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration)
org.conscrypt.OpenSSLContextImpl: javax.net.ssl.SSLSessionContext engineGetServerSessionContext()
androidx.recyclerview.widget.RecyclerView: void removeOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
de.javakaffee.kryoserializers.KryoReflectionFactorySupport: com.esotericsoftware.kryo.Serializer getDefaultSerializer(java.lang.Class)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
org.conscrypt.AbstractConscryptSocket: int getSoLinger()
org.conscrypt.EvpMdRef$SHA224: EvpMdRef$SHA224()
androidx.recyclerview.widget.RecyclerView: void draw(android.graphics.Canvas)
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection$5: java.lang.Object create(java.lang.Object)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpecResource(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
de.javakaffee.kryoserializers.guava.ImmutableMapSerializer: com.google.common.collect.ImmutableMap read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
org.conscrypt.OpenSSLAeadCipherAES$GCM$AES_256: OpenSSLAeadCipherAES$GCM$AES_256()
org.conscrypt.SSLUtils: byte[][] encodeSubjectX509Principals(java.security.cert.X509Certificate[])
org.conscrypt.NativeCrypto: int EVP_AEAD_CTX_seal(long,byte[],int,byte[],int,byte[],byte[],int,int,byte[])
org.conscrypt.NativeCrypto: byte[] get_X509_CRL_crl_enc(long,org.conscrypt.OpenSSLX509CRL)
org.conscrypt.ECParameters: byte[] engineGetEncoded()
de.javakaffee.kryoserializers.dexx.ListSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.ConscryptEngine: void transitionTo(int)
com.google.android.material.card.MaterialCardView: android.graphics.drawable.Drawable getCheckedIcon()
com.google.android.material.card.MaterialCardView: void setMaxCardElevation(float)
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
com.esotericsoftware.kryo.io.ByteBufferInput: long readVarLong(boolean)
de.javakaffee.kryoserializers.SubListSerializers: com.esotericsoftware.kryo.Serializer createFor(java.lang.Class)
com.esotericsoftware.kryo.serializers.FieldSerializerConfig: java.lang.Object clone()
com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField: void setSerializer(com.esotericsoftware.kryo.Serializer)
com.esotericsoftware.kryo.serializers.EnumNameSerializer: java.lang.Enum read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.ConscryptServerSocket: org.conscrypt.ConscryptServerSocket setUseEngineSocket(boolean)
org.conscrypt.NativeCrypto: void BIO_write(long,byte[],int,int)
org.conscrypt.NativeSsl: void offerToResumeSession(long)
org.conscrypt.NativeCrypto: byte[] EC_KEY_marshal_curve_name(org.conscrypt.NativeRef$EC_GROUP)
org.conscrypt.OpenSSLProvider: void putSignatureImplClass(java.lang.String,java.lang.String)
com.esotericsoftware.kryo.io.UnsafeInput: char[] readChars(int)
org.conscrypt.NativeSsl: int getMaxSealOverhead()
org.conscrypt.ConscryptEngine: void beginHandshake()
de.javakaffee.kryoserializers.guava.ImmutableMultimapSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.NativeCrypto: org.conscrypt.NativeCrypto$Range getProtocolRange(java.lang.String[])
org.conscrypt.ConscryptEngineSocket: void setEnabledCipherSuites(java.lang.String[])
com.google.android.material.chip.Chip: float getChipEndPadding()
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: java.net.SocketAddress getRemoteSocketAddress()
com.esotericsoftware.kryo.pool.KryoPoolQueueImpl: java.lang.Object run(com.esotericsoftware.kryo.pool.KryoCallback)
org.conscrypt.AbstractConscryptEngine: int maxSealOverhead()
com.esotericsoftware.kryo.io.Output: void writeInt(int)
org.conscrypt.SSLParametersImpl: org.conscrypt.PSKKeyManager findFirstPSKKeyManager(javax.net.ssl.KeyManager[])
org.conscrypt.SessionSnapshot: java.security.Principal getLocalPrincipal()
com.esotericsoftware.kryo.io.ByteBufferOutputStream: ByteBufferOutputStream(int)
com.esotericsoftware.kryo.io.Input: java.lang.StringBuilder readStringBuilder()
com.esotericsoftware.kryo.serializers.DefaultSerializers$ShortSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Short)
de.javakaffee.kryoserializers.CollectionsSingletonMapSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.NativeCrypto: void BIO_free_all(long)
com.google.android.material.chip.Chip: void setIconStartPadding(float)
org.conscrypt.NativeSsl: java.lang.String getVersion()
org.conscrypt.OpenSSLSocketImpl: void close()
org.conscrypt.OpenSSLBIOSource$ByteBufferInputStream: int read(byte[])
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$IntArraySerializer: java.lang.Object copy(com.esotericsoftware.kryo.Kryo,java.lang.Object)
org.conscrypt.Platform: java.security.spec.AlgorithmParameterSpec fromGCMParameters(java.security.AlgorithmParameters)
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection$6: UnmodifiableCollectionsSerializer$UnmodifiableCollection$6(java.lang.String,int,java.lang.Class,java.lang.reflect.Field)
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getCustomSize()
de.javakaffee.kryoserializers.CopyForIterateCollectionSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.util.Collection)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: void setReceiveBufferSize(int)
org.conscrypt.Java8EngineWrapper: javax.net.ssl.SSLParameters getSSLParameters()
org.conscrypt.OpenSSLCipherChaCha20: void engineInitInternal(byte[],java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)
com.esotericsoftware.kryo.util.ObjectMap$Entries: void remove()
com.esotericsoftware.kryo.pool.SoftReferenceQueue: java.lang.Object poll()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setEnsureMinTouchTargetSize(boolean)
com.esotericsoftware.kryo.serializers.TimeSerializers$ZoneOffsetSerializer: TimeSerializers$ZoneOffsetSerializer(com.esotericsoftware.kryo.serializers.TimeSerializers$1)
org.conscrypt.AbstractConscryptSocket: void shutdownInput()
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
com.esotericsoftware.kryo.serializers.BeanSerializer$CachedProperty: BeanSerializer$CachedProperty(com.esotericsoftware.kryo.serializers.BeanSerializer)
org.conscrypt.NativeCrypto: void asn1_write_null(long)
com.esotericsoftware.kryo.util.IdentityMap: boolean containsKey(java.lang.Object)
org.conscrypt.X509PublicKey: java.lang.String getAlgorithm()
com.esotericsoftware.kryo.util.DefaultClassResolver: com.esotericsoftware.kryo.Registration register(com.esotericsoftware.kryo.Registration)
org.conscrypt.OpenSSLEvpCipher: OpenSSLEvpCipher(org.conscrypt.OpenSSLCipher$Mode,org.conscrypt.OpenSSLCipher$Padding)
com.esotericsoftware.kryo.Serializer: void setImmutable(boolean)
com.esotericsoftware.kryo.io.ByteBufferOutput: void order(java.nio.ByteOrder)
org.conscrypt.OpenSSLSignatureRawECDSA: void engineSetParameter(java.lang.String,java.lang.Object)
org.conscrypt.OpenSSLX509CRL: org.conscrypt.OpenSSLX509CRL fromX509DerInputStream(java.io.InputStream)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
org.conscrypt.OpenSSLRSAPublicKey: OpenSSLRSAPublicKey(org.conscrypt.OpenSSLKey)
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection$5: SynchronizedCollectionsSerializer$SynchronizedCollection$5(java.lang.String,int,java.lang.Class,java.lang.reflect.Field)
io.paperdb.Paper: java.lang.String removeLastFileSeparatorIfExists(java.lang.String)
androidx.recyclerview.widget.RecyclerView: boolean fling(int,int)
org.conscrypt.SSLParametersImpl: boolean getWantClientAuth()
org.conscrypt.OpenSSLRSAPublicKey: java.lang.String getAlgorithm()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
org.conscrypt.OpenSSLECPublicKey: void writeObject(java.io.ObjectOutputStream)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)
org.conscrypt.ct.DigitallySigned$HashAlgorithm: org.conscrypt.ct.DigitallySigned$HashAlgorithm valueOf(int)
com.esotericsoftware.kryo.io.Output: Output(int)
org.conscrypt.OpenSSLX509CertPath$Encoding: org.conscrypt.OpenSSLX509CertPath$Encoding valueOf(java.lang.String)
org.conscrypt.OpenSSLEvpCipherAES$AES_256$ECB: OpenSSLEvpCipherAES$AES_256$ECB(org.conscrypt.OpenSSLCipher$Padding)
com.esotericsoftware.kryo.util.ObjectMap$Entries: java.util.Iterator iterator()
com.esotericsoftware.kryo.serializers.ObjectField$ObjectDoubleField: void write(com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.minlog.Log: void info(java.lang.String,java.lang.String,java.lang.Throwable)
org.conscrypt.TrustManagerImpl: java.security.cert.X509Certificate[] acceptedIssuers(java.security.KeyStore)
com.esotericsoftware.kryo.serializers.OptionalSerializers$OptionalIntSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.SessionSnapshot: int getApplicationBufferSize()
de.javakaffee.kryoserializers.SubListSerializers: java.lang.Class getClass(java.lang.String)
org.conscrypt.OpenSSLX509CRL: java.util.Date getNextUpdate()
com.esotericsoftware.kryo.serializers.TimeSerializers$LocalDateSerializer: TimeSerializers$LocalDateSerializer(com.esotericsoftware.kryo.serializers.TimeSerializers$1)
androidx.recyclerview.widget.RecyclerView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)
org.conscrypt.OpenSSLCipherChaCha20: java.lang.String getBaseCipherName()
de.javakaffee.kryoserializers.SubListSerializers$JavaUtilSubListSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.NativeCrypto: void asn1_write_uint64(long,long)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForeground(android.graphics.drawable.Drawable)
com.esotericsoftware.kryo.util.IntArray: void set(int,int)
org.conscrypt.OpenSSLSocketImpl: int getTrafficClass()
de.javakaffee.kryoserializers.FieldAnnotationAwareSerializer$Factory: com.esotericsoftware.kryo.Serializer makeSerializer(com.esotericsoftware.kryo.Kryo,java.lang.Class)
com.esotericsoftware.kryo.Kryo: boolean isRegistrationRequired()
androidx.recyclerview.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)
org.conscrypt.NativeCrypto: void EVP_MD_CTX_destroy(long)
com.esotericsoftware.kryo.util.IntArray: void clear()
androidx.recyclerview.widget.RecyclerView: void markItemDecorInsetsDirty()
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
org.conscrypt.ConscryptEngineSocket: java.io.InputStream access$1100(org.conscrypt.ConscryptEngineSocket)
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
org.conscrypt.OpenSSLMessageDigestJDK: OpenSSLMessageDigestJDK(long,int,org.conscrypt.OpenSSLMessageDigestJDK$1)
org.conscrypt.NativeSslSession: java.lang.String getPeerHost()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
org.conscrypt.ct.CTVerifier: org.conscrypt.ct.VerifiedSCT$Status verifySingleSCT(org.conscrypt.ct.SignedCertificateTimestamp,org.conscrypt.ct.CertificateEntry)
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
com.esotericsoftware.kryo.io.KryoDataOutput: void write(byte[],int,int)
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
com.google.android.material.card.MaterialCardView: int getStrokeWidth()
org.conscrypt.ConscryptEngine: javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[],int,int,java.nio.ByteBuffer)
com.esotericsoftware.kryo.serializers.FieldSerializerConfig: boolean isIgnoreSyntheticFields()
com.esotericsoftware.kryo.util.ObjectMap: int hash3(int)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getStrokeColor()
com.esotericsoftware.kryo.util.IdentityMap$Values: java.util.ArrayList toArray()
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorResource(int)
org.conscrypt.OpenSSLCipher: org.conscrypt.OpenSSLCipher$Padding getPadding()
org.conscrypt.OpenSSLECPrivateKey: java.math.BigInteger getS()
com.esotericsoftware.minlog.Log: void DEBUG()
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.esotericsoftware.kryo.io.UnsafeOutput: void writeInt(int)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
org.conscrypt.Java8EngineSocket: Java8EngineSocket(java.net.InetAddress,int,org.conscrypt.SSLParametersImpl)
de.javakaffee.kryoserializers.guava.ImmutableSortedSetSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.SSLNullSession: void removeValue(java.lang.String)
com.esotericsoftware.kryo.io.Input: void rewind()
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeObjectField: void copy(java.lang.Object,java.lang.Object)
com.google.android.material.internal.CheckableImageButton: void setCheckable(boolean)
com.esotericsoftware.kryo.io.UnsafeMemoryOutput: UnsafeMemoryOutput()
com.esotericsoftware.kryo.io.KryoDataInput: void setInput(com.esotericsoftware.kryo.io.Input)
org.conscrypt.FileClientSessionCache$CacheFile: FileClientSessionCache$CacheFile(java.io.File,java.lang.String)
com.esotericsoftware.kryo.io.Output: void writeInts(int[],boolean)
com.esotericsoftware.kryo.serializers.DefaultSerializers$FloatSerializer: java.lang.Float read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.ConscryptEngine: java.nio.ByteBuffer[] singleSrcBuffer(java.nio.ByteBuffer)
org.conscrypt.ct.DigitallySigned: org.conscrypt.ct.DigitallySigned$HashAlgorithm getHashAlgorithm()
com.google.android.material.internal.VisibilityAwareImageButton: void setVisibility(int)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getRippleColor()
com.esotericsoftware.kryo.serializers.OptionalSerializers$OptionalDoubleSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageResource(int)
org.conscrypt.OpenSSLRSAPrivateKey: org.conscrypt.OpenSSLKey getInstance(java.security.interfaces.RSAPrivateKey)
com.google.android.material.chip.Chip: void setCloseIconVisible(int)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
com.esotericsoftware.kryo.serializers.FieldSerializerGenericsUtil: java.lang.Class getTypeVarConcreteClass(java.lang.Class[],int,java.lang.String)
org.conscrypt.NativeSslSession$Impl: NativeSslSession$Impl(org.conscrypt.AbstractSessionContext,org.conscrypt.NativeRef$SSL_SESSION,java.lang.String,int,java.security.cert.X509Certificate[],byte[],byte[])
com.esotericsoftware.kryo.Kryo: void setAsmEnabled(boolean)
com.esotericsoftware.kryo.io.FastOutput: int writeInt(int,boolean)
org.conscrypt.TrustManagerImpl: void setDefaultHostnameVerifier(org.conscrypt.ConscryptHostnameVerifier)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
io.paperdb.DbStoragePlainFile: void assertInit()
org.conscrypt.OpenSSLMessageDigestJDK$SHA256: OpenSSLMessageDigestJDK$SHA256()
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: void setSoTimeout(int)
org.conscrypt.Java8EngineWrapper: java.lang.String[] getSupportedProtocols()
com.esotericsoftware.kryo.serializers.FieldSerializerConfig: boolean isCopyTransient()
org.conscrypt.OpenSSLRSAPrivateKey: OpenSSLRSAPrivateKey(java.security.spec.RSAPrivateKeySpec)
org.conscrypt.ConscryptEngine: org.conscrypt.ClientSessionContext clientSessionContext()
androidx.appcompat.widget.AbsActionBarView: void setVisibility(int)
com.esotericsoftware.kryo.serializers.DefaultSerializers$CalendarSerializer: DefaultSerializers$CalendarSerializer()
com.esotericsoftware.kryo.util.IdentityMap: void removeStashIndex(int)
org.conscrypt.ct.CTLogInfo: java.lang.String getUrl()
org.conscrypt.OpenSSLServerSocketFactoryImpl: OpenSSLServerSocketFactoryImpl()
org.conscrypt.Java8EngineWrapper: javax.net.ssl.SSLEngineResult$HandshakeStatus getHandshakeStatus()
org.conscrypt.OpenSSLECPrivateKey: byte[] getEncoded()
com.esotericsoftware.kryo.util.IntMap$Values: void reset()
org.conscrypt.NativeCrypto: long EVP_get_digestbyname(java.lang.String)
com.esotericsoftware.kryo.io.Output: void writeChar(char)
org.conscrypt.KeyManagerImpl: KeyManagerImpl(java.security.KeyStore,char[])
androidx.recyclerview.widget.RecyclerView: void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect)
com.esotericsoftware.kryo.util.IntMap$Values: boolean hasNext()
org.conscrypt.AbstractConscryptSocket: byte[] exportKeyingMaterial(java.lang.String,byte[],int)
com.esotericsoftware.kryo.serializers.TimeSerializers$LocalDateSerializer: java.time.LocalDate read(com.esotericsoftware.kryo.io.Input)
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeShortField: void read(com.esotericsoftware.kryo.io.Input,java.lang.Object)
org.conscrypt.GCMParameters: void engineInit(java.security.spec.AlgorithmParameterSpec)
org.conscrypt.AbstractConscryptSocket: int getSoWriteTimeout()
androidx.recyclerview.widget.RecyclerView: boolean onGenericMotionEvent(android.view.MotionEvent)
org.conscrypt.SSLParametersImpl: java.lang.Object clone()
org.conscrypt.OpenSSLECPublicKey: java.lang.String getFormat()
com.esotericsoftware.kryo.Kryo: void beginObject()
com.esotericsoftware.kryo.util.ObjectMap: java.lang.Object getStash(java.lang.Object,java.lang.Object)
org.conscrypt.SSLParametersImpl$PSKCallbacks: javax.crypto.SecretKey getPSKKey(org.conscrypt.PSKKeyManager,java.lang.String,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextColor(android.content.res.ColorStateList)
com.esotericsoftware.kryo.util.DefaultStreamFactory: com.esotericsoftware.kryo.io.Output getOutput(java.io.OutputStream)
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontalResource(int)
com.esotericsoftware.reflectasm.ConstructorAccess: ConstructorAccess()
org.conscrypt.FileClientSessionCache$Impl: void putSessionData(javax.net.ssl.SSLSession,byte[])
org.conscrypt.DuckTypedPSKKeyManager: DuckTypedPSKKeyManager(java.lang.Object)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZ(float)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: boolean getKeepAlive()
com.esotericsoftware.kryo.serializers.ExternalizableSerializer: java.io.ObjectOutput getObjectOutput(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output)
io.paperdb.DbStoragePlainFile$2: boolean accept(java.io.File,java.lang.String)
com.esotericsoftware.kryo.serializers.FieldSerializer: int compare(com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField,com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField)
org.conscrypt.ct.Serialization: void writeVariableBytes(java.io.OutputStream,byte[],int)
org.conscrypt.ExternalSession: void invalidate()
org.conscrypt.OpenSSLCipherChaCha20: void checkSupportedKeySize(int)
androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)
org.conscrypt.SSLNullSession: javax.security.cert.X509Certificate[] getPeerCertificateChain()
org.conscrypt.ExternalSession: void removeValue(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void handleMissingPreInfoForChangeError(long,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.esotericsoftware.kryo.serializers.MapSerializer: void setValuesCanBeNull(boolean)
org.conscrypt.OpenSSLRandom: void engineSetSeed(byte[])
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
com.esotericsoftware.kryo.serializers.DefaultSerializers$IntSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Integer)
org.conscrypt.ConscryptEngine: java.lang.String getApplicationProtocol()
org.conscrypt.AbstractConscryptSocket: java.io.InputStream getInputStream()
org.conscrypt.Java8EngineWrapper: java.lang.String[] getSupportedCipherSuites()
org.conscrypt.AbstractConscryptSocket: void connect(java.net.SocketAddress,int)
org.conscrypt.OpenSSLRSAPrivateKey: java.math.BigInteger getModulus()
com.google.android.material.internal.FlowLayout: FlowLayout(android.content.Context,android.util.AttributeSet)
org.conscrypt.Java7ExtendedSSLSession: void removeValue(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationZ(float)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
com.esotericsoftware.kryo.serializers.GenericsResolver: void pushScope(java.lang.Class,com.esotericsoftware.kryo.serializers.Generics)
com.esotericsoftware.kryo.serializers.TimeSerializers$InstantSerializer: TimeSerializers$InstantSerializer(com.esotericsoftware.kryo.serializers.TimeSerializers$1)
org.conscrypt.Conscrypt: byte[] getTlsUnique(javax.net.ssl.SSLEngine)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCustomSize(int)
org.conscrypt.OpenSSLX509CRLEntry: boolean hasUnsupportedCriticalExtension()
org.conscrypt.AllocatedBuffer$1: java.nio.ByteBuffer nioBuffer()
org.conscrypt.FileClientSessionCache$Impl: FileClientSessionCache$Impl(java.io.File)
org.conscrypt.ConscryptEngine: java.lang.String getHandshakeApplicationProtocol()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setEndIconOnLongClickListener(android.view.View$OnLongClickListener)
de.javakaffee.kryoserializers.guava.HashMultimapSerializer: com.google.common.collect.HashMultimap read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
de.javakaffee.kryoserializers.CollectionsSingletonListSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.util.List)
org.conscrypt.Conscrypt: java.lang.String getHostnameOrIP(javax.net.ssl.SSLSocket)
com.esotericsoftware.kryo.serializers.DefaultSerializers$StringSerializer: java.lang.String read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.OpenSSLX509Certificate: boolean hasUnsupportedCriticalExtension()
com.google.android.material.card.MaterialCardView: void setOnCheckedChangeListener(com.google.android.material.card.MaterialCardView$OnCheckedChangeListener)
org.conscrypt.OpenSSLKey: int hashCode()
androidx.recyclerview.widget.RecyclerView: void onDetachedFromWindow()
androidx.recyclerview.widget.RecyclerView: void saveFocusInfo()
com.esotericsoftware.kryo.Kryo: void setCopyReferences(boolean)
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeCharField: void copy(java.lang.Object,java.lang.Object)
org.conscrypt.Java8EngineWrapper: javax.net.ssl.SSLSession getSession()
com.esotericsoftware.kryo.io.KryoDataInput: byte readByte()
com.esotericsoftware.reflectasm.AccessClassLoader: int activeAccessClassLoaders()
com.esotericsoftware.kryo.io.UnsafeOutput: int writeInt(int,boolean)
org.conscrypt.OpenSSLECGroupContext: OpenSSLECGroupContext(org.conscrypt.NativeRef$EC_GROUP)
com.esotericsoftware.kryo.serializers.DefaultSerializers$CollectionsSingletonMapSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.util.Map)
org.conscrypt.AbstractSessionContext: void setSessionCacheSize(int)
org.conscrypt.ConscryptEngine: boolean getEnableSessionCreation()
com.esotericsoftware.kryo.serializers.BeanSerializer$CachedProperty: java.lang.Object get(java.lang.Object)
de.javakaffee.kryoserializers.guava.ImmutableSetSerializer$SomeEnum: ImmutableSetSerializer$SomeEnum(java.lang.String,int)
com.google.android.material.internal.ForegroundLinearLayout: int getForegroundGravity()
org.conscrypt.Conscrypt: javax.net.ssl.X509TrustManager getDefaultX509TrustManager()
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector valueOf(java.lang.String)
de.javakaffee.kryoserializers.UUIDSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.util.UUID)
com.esotericsoftware.kryo.serializers.BlowfishSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.ConscryptFileDescriptorSocket: org.conscrypt.AbstractSessionContext sessionContext()
com.esotericsoftware.kryo.serializers.FieldSerializer: com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField[] getTransientFields()
org.conscrypt.FileClientSessionCache$CacheFile: int compareTo(java.lang.Object)
org.conscrypt.NativeCrypto: byte[][] SSL_get0_peer_certificates(long,org.conscrypt.NativeSsl)
org.conscrypt.OpenSSLAeadCipher: int updateInternal(byte[],int,int,byte[],int,int)
androidx.recyclerview.widget.RecyclerView: void smoothScrollToPosition(int)
de.javakaffee.kryoserializers.guava.ImmutableMapSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,com.google.common.collect.ImmutableMap)
org.conscrypt.Conscrypt: byte[] getChannelId(javax.net.ssl.SSLEngine)
org.conscrypt.ct.CTPolicy: boolean doesResultConformToPolicy(org.conscrypt.ct.CTVerificationResult,java.lang.String,java.security.cert.X509Certificate[])
com.esotericsoftware.kryo.io.UnsafeInput: double readDouble()
com.esotericsoftware.kryo.serializers.EnumNameSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.serializers.FieldSerializerConfig: com.esotericsoftware.kryo.serializers.FieldSerializer$CachedFieldNameStrategy getCachedFieldNameStrategy()
com.esotericsoftware.kryo.io.InputChunked: InputChunked(java.io.InputStream)
androidx.recyclerview.widget.RecyclerView: void onChildAttachedToWindow(android.view.View)
org.conscrypt.NativeCrypto: long EVP_MD_CTX_create()
org.conscrypt.OpenSSLRSAKeyPairGenerator: java.security.KeyPair generateKeyPair()
org.conscrypt.IvParameters$DESEDE: IvParameters$DESEDE()
com.esotericsoftware.kryo.io.UnsafeMemoryOutput: int writeVarLong(long,boolean)
com.esotericsoftware.kryo.util.IdentityMap: void clear(int)
com.esotericsoftware.kryo.io.ByteBufferOutput: ByteBufferOutput(java.nio.ByteBuffer,int)
org.conscrypt.ConscryptEngine: long serverSessionRequested(byte[])
com.esotericsoftware.kryo.serializers.ObjectField$ObjectDoubleField: void copy(java.lang.Object,java.lang.Object)
org.conscrypt.Platform: void checkClientTrusted(javax.net.ssl.X509TrustManager,java.security.cert.X509Certificate[],java.lang.String,org.conscrypt.AbstractConscryptSocket)
de.javakaffee.kryoserializers.guava.LinkedListMultimapSerializer: LinkedListMultimapSerializer()
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
org.conscrypt.GCMParameters: byte[] engineGetEncoded(java.lang.String)
com.esotericsoftware.kryo.serializers.TimeSerializers$LocalTimeSerializer: void write(com.esotericsoftware.kryo.io.Output,java.time.LocalTime)
org.conscrypt.Platform: void setSSLParameters(javax.net.ssl.SSLParameters,org.conscrypt.SSLParametersImpl,org.conscrypt.AbstractConscryptSocket)
org.conscrypt.Platform: java.lang.String getOriginalHostNameFromInetAddress(java.net.InetAddress)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.esotericsoftware.reflectasm.FieldAccess: java.lang.String getString(java.lang.Object,int)
org.conscrypt.ExternalSession: void putValue(java.lang.String,java.lang.Object)
org.conscrypt.OpenSSLCipherRSA$OAEP$SHA224: OpenSSLCipherRSA$OAEP$SHA224()
org.conscrypt.PSSParameters: void engineInit(byte[],java.lang.String)
com.google.android.material.button.MaterialButton: void setBackground(android.graphics.drawable.Drawable)
org.conscrypt.OpenSSLAeadCipherAES: OpenSSLAeadCipherAES(org.conscrypt.OpenSSLCipher$Mode)
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
de.javakaffee.kryoserializers.guava.ImmutableMapSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpecResource(int)
com.google.android.material.chip.Chip: void setChipMinHeight(float)
org.conscrypt.OpenSSLX509CRL: java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: void setChipIconEnabledResource(int)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
org.conscrypt.OpenSSLCipher: void engineSetPadding(java.lang.String)
org.conscrypt.OpenSSLX509CertificateFactory: java.security.cert.Certificate engineGenerateCertificate(java.io.InputStream)
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
org.conscrypt.OpenSSLBIOSource$ByteBufferInputStream: int read()
org.conscrypt.PeerInfoProvider$1: java.lang.String getHostname()
org.conscrypt.Conscrypt: void setApplicationProtocols(javax.net.ssl.SSLSocket,java.lang.String[])
com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.util.IdentityMap getOriginalToCopyMap()
org.conscrypt.NativeSsl: void setTimeout(long)
org.conscrypt.SSLParametersImpl: void setUseCipherSuitesOrder(boolean)
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
org.conscrypt.ConscryptEngine: void setChannelIdPrivateKey(java.security.PrivateKey)
com.esotericsoftware.kryo.serializers.OptionalSerializers: OptionalSerializers()
org.conscrypt.NativeCrypto$SSLHandshakeCallbacks: void onNewSessionEstablished(long)
org.conscrypt.ct.CTVerifier: CTVerifier(org.conscrypt.ct.CTLogStore)
org.conscrypt.ConscryptEngineSocket$2: void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String,javax.net.ssl.SSLEngine)
org.conscrypt.NativeCrypto: long asn1_read_sequence(long)
com.esotericsoftware.kryo.io.UnsafeOutput: void writeInts(int[])
com.esotericsoftware.kryo.serializers.TimeSerializers$LocalDateTimeSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
androidx.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
org.conscrypt.OpenSSLX509CertificateFactory$2: OpenSSLX509CertificateFactory$2(org.conscrypt.OpenSSLX509CertificateFactory)
com.esotericsoftware.kryo.io.UnsafeOutput: void writeLong(long)
org.conscrypt.OpenSSLSocketImpl: void shutdownInput()
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
org.conscrypt.ct.Serialization: byte readByte(java.io.InputStream)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForLayoutPosition(int)
org.conscrypt.OpenSSLSocketImpl: void setPerformancePreferences(int,int,int)
com.google.android.material.button.MaterialButton: void setIconGravity(int)
com.esotericsoftware.kryo.io.Input: int readUtf8Length(int)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
org.conscrypt.KeyGeneratorImpl$HmacSHA512: KeyGeneratorImpl$HmacSHA512()
com.esotericsoftware.kryo.serializers.FieldSerializer: boolean getUseAsmEnabled()
com.esotericsoftware.kryo.Serializer: Serializer(boolean,boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
org.conscrypt.SSLUtils$SessionType: boolean isSupportedType(int)
com.esotericsoftware.kryo.serializers.DefaultSerializers$TreeMapSerializer: java.util.Map create(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.google.android.material.internal.BaselineLayout: int getBaseline()
org.conscrypt.OpenSSLECPointContext: boolean equals(java.lang.Object)
de.javakaffee.kryoserializers.CollectionsSingletonListSerializer: java.util.List read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.Registration: void setSerializer(com.esotericsoftware.kryo.Serializer)
org.conscrypt.NativeCrypto: void EVP_DigestVerifyUpdateDirect(org.conscrypt.NativeRef$EVP_MD_CTX,long,int)
com.esotericsoftware.minlog.Log: void NONE()
androidx.recyclerview.widget.RecyclerView: void recordAnimationInfoIfBouncedHiddenView(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
org.conscrypt.Conscrypt: void setApplicationProtocolSelector(javax.net.ssl.SSLSocket,org.conscrypt.ApplicationProtocolSelector)
de.javakaffee.kryoserializers.jodatime.JodaDateTimeSerializer: JodaDateTimeSerializer()
com.google.android.material.card.MaterialCardView: void setClickable(boolean)
org.conscrypt.SSLParametersImpl: org.conscrypt.PSKKeyManager getPSKKeyManager()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZResource(int)
org.conscrypt.NativeSslSession$Impl: byte[] getPeerOcspStapledResponse()
com.google.android.material.circularreveal.CircularRevealFrameLayout: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
org.conscrypt.Java7ExtendedSSLSession: void putValue(java.lang.String,java.lang.Object)
de.javakaffee.kryoserializers.DateSerializer: java.util.Date read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.util.ObjectMap: java.lang.Object getStash(java.lang.Object)
org.conscrypt.NativeSsl: java.util.Set getCipherKeyTypes()
com.esotericsoftware.kryo.util.DefaultStreamFactory: com.esotericsoftware.kryo.io.Input getInput(java.io.InputStream,int)
com.esotericsoftware.kryo.serializers.FieldSerializer: com.esotericsoftware.kryo.serializers.FieldSerializer$CachedFieldFactory getAsmFieldFactory()
com.esotericsoftware.kryo.serializers.TaggedFieldSerializerConfig: java.lang.Object clone()
org.conscrypt.OpenSSLSignature$RSAPSSPadding: void engineSetParameter(java.security.spec.AlgorithmParameterSpec)
com.esotericsoftware.kryo.io.OutputChunked: void writeChunkSize()
com.esotericsoftware.kryo.io.UnsafeInput: short readShort()
org.conscrypt.SSLNullSession: long getLastAccessedTime()
org.conscrypt.OpenSSLSocketImpl: OpenSSLSocketImpl()
org.conscrypt.OpenSSLCipherRSA$OAEP: void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)
com.esotericsoftware.kryo.serializers.BeanSerializer: BeanSerializer(com.esotericsoftware.kryo.Kryo,java.lang.Class)
org.conscrypt.ct.SignedCertificateTimestamp: byte[] getLogID()
androidx.recyclerview.widget.RecyclerView: void ensureRightGlow()
org.conscrypt.KeyManagerImpl: java.security.cert.X509Certificate[] getCertificateChain(java.lang.String)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getAnimationMode()
com.google.android.material.chip.Chip: void setCloseIconHovered(boolean)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: java.io.InputStream getInputStream()
de.javakaffee.kryoserializers.guava.LinkedHashMultimapSerializer: void registerSerializers(com.esotericsoftware.kryo.Kryo)
com.google.android.material.chip.Chip: void setChecked(boolean)
com.google.android.material.chip.Chip: float getChipCornerRadius()
androidx.recyclerview.widget.RecyclerView: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
org.conscrypt.NativeCrypto: long d2i_X509(byte[])
org.conscrypt.OpenSSLMessageDigestJDK: OpenSSLMessageDigestJDK(long,int,org.conscrypt.NativeRef$EVP_MD_CTX,boolean)
org.conscrypt.Java8EngineWrapper: byte[] getChannelId()
org.conscrypt.ConscryptEngine: javax.net.ssl.SSLEngineResult$HandshakeStatus pendingStatus(int)
com.esotericsoftware.kryo.Kryo: void setWarnUnregisteredClasses(boolean)
androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()
com.esotericsoftware.kryo.serializers.TimeSerializers$ZoneIdSerializer: TimeSerializers$ZoneIdSerializer(com.esotericsoftware.kryo.serializers.TimeSerializers$1)
androidx.core.view.WindowInsetsCompat$Impl: boolean isRound()
de.javakaffee.kryoserializers.guava.ArrayListMultimapSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.io.Output: int writeVarInt(int,boolean)
com.esotericsoftware.kryo.ClassResolver: com.esotericsoftware.kryo.Registration registerImplicit(java.lang.Class)
de.javakaffee.kryoserializers.EnumMapSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.io.UnsafeOutput: void writeFloats(float[])
org.conscrypt.ConscryptServerSocket: ConscryptServerSocket(int,int,org.conscrypt.SSLParametersImpl)
de.javakaffee.kryoserializers.EnumMapSerializer: java.lang.Object copy(com.esotericsoftware.kryo.Kryo,java.lang.Object)
androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep3()
org.conscrypt.AbstractSessionContext: void removeSession(org.conscrypt.NativeSslSession)
org.conscrypt.NativeCrypto: void setLocalCertsAndPrivateKey(long,org.conscrypt.NativeSsl,byte[][],org.conscrypt.NativeRef$EVP_PKEY)
de.javakaffee.kryoserializers.GregorianCalendarSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.AbstractConscryptEngine: javax.net.ssl.SSLSession handshakeSession()
com.esotericsoftware.kryo.Kryo: void setMaxDepth(int)
com.esotericsoftware.kryo.StreamFactory: com.esotericsoftware.kryo.io.Input getInput(byte[])
com.esotericsoftware.kryo.pool.KryoPool$Builder: com.esotericsoftware.kryo.pool.KryoPool$Builder softReferences()
com.esotericsoftware.kryo.io.FastInput: FastInput(int)
com.esotericsoftware.kryo.serializers.MapSerializer: java.util.Map createCopy(com.esotericsoftware.kryo.Kryo,java.util.Map)
com.google.android.material.chip.Chip: void setChipBackgroundColorResource(int)
org.conscrypt.OpenSSLCipher: void checkSupportedMode(org.conscrypt.OpenSSLCipher$Mode)
com.esotericsoftware.kryo.util.IntArray: IntArray(com.esotericsoftware.kryo.util.IntArray)
com.google.android.material.chip.Chip: java.lang.CharSequence getChipText()
org.conscrypt.ConscryptEngine: java.nio.ByteBuffer[] singleDstBuffer(java.nio.ByteBuffer)
com.esotericsoftware.kryo.io.ByteBufferInput: int readShortUnsigned()
com.google.android.material.card.MaterialCardView: void setCheckedIcon(android.graphics.drawable.Drawable)
com.esotericsoftware.kryo.util.IdentityObjectIntMap: java.lang.String toString()
de.javakaffee.kryoserializers.guava.ImmutableSetSerializer: com.google.common.collect.ImmutableSet read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.OpenSSLECPrivateKey: java.math.BigInteger getPrivateKey()
com.esotericsoftware.kryo.io.Output: int writeInt(int,boolean)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()
org.conscrypt.OpenSSLRSAPublicKey: boolean equals(java.lang.Object)
com.esotericsoftware.kryo.util.ObjectMap: java.lang.Object findKey(java.lang.Object,boolean)
com.google.android.material.chip.Chip: void setRippleColor(android.content.res.ColorStateList)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$FloatArraySerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.NativeCrypto: void SSL_set_ocsp_response(long,org.conscrypt.NativeSsl,byte[])
com.google.android.material.bottomappbar.BottomAppBar: void setElevation(float)
com.esotericsoftware.kryo.serializers.FieldSerializerUnsafeUtil: void createUnsafeCacheFieldsAndRegions(java.util.List,java.util.List,int,com.esotericsoftware.kryo.util.IntArray)
org.conscrypt.NativeSslSession$Impl: void offerToResume(org.conscrypt.NativeSsl)
com.esotericsoftware.kryo.Kryo: void setClassLoader(java.lang.ClassLoader)
org.conscrypt.OpenSSLECPublicKey: OpenSSLECPublicKey(org.conscrypt.OpenSSLECGroupContext,org.conscrypt.OpenSSLKey)
org.conscrypt.OpenSSLECGroupContext: java.lang.String getCurveName()
com.esotericsoftware.kryo.io.UnsafeMemoryInput: byte[] readBytes(int)
com.esotericsoftware.kryo.util.ObjectMap$Keys: void reset()
com.esotericsoftware.kryo.io.UnsafeMemoryOutput: void writeDouble(double)
com.esotericsoftware.kryo.io.UnsafeMemoryInput: boolean readBoolean()
com.esotericsoftware.kryo.util.IdentityMap: java.lang.Object get(java.lang.Object,java.lang.Object)
de.javakaffee.kryoserializers.URISerializer: URISerializer()
org.conscrypt.OpenSSLAeadCipher: long getEVP_AEAD(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29()
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmDoubleField: AsmCacheFields$AsmDoubleField()
com.google.android.material.appbar.HeaderScrollingViewBehavior: HeaderScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$FloatArraySerializer: float[] copy(com.esotericsoftware.kryo.Kryo,float[])
com.esotericsoftware.kryo.util.IdentityMap: int hash3(int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getShrinkMotionSpec()
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
com.esotericsoftware.kryo.io.ByteBufferOutput: void writeShort(int)
com.esotericsoftware.kryo.io.Output: void writeString_slow(java.lang.CharSequence,int,int)
de.javakaffee.kryoserializers.guava.UnmodifiableNavigableSetSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.X509PublicKey: java.lang.String getFormat()
org.conscrypt.OpenSSLAeadCipherChaCha20: int getOutputSizeForFinal(int)
com.esotericsoftware.kryo.serializers.ObjectField$ObjectByteField: ObjectField$ObjectByteField(com.esotericsoftware.kryo.serializers.FieldSerializer)
com.esotericsoftware.kryo.io.ByteBufferInput: float readFloat(float,boolean)
org.conscrypt.OpenSSLX509CRL: void verify(java.security.PublicKey,java.lang.String)
org.conscrypt.CertificatePriorityComparator: int compare(java.lang.Object,java.lang.Object)
org.conscrypt.Preconditions: void checkPositionIndexes(int,int,int)
com.esotericsoftware.kryo.util.IntMap$Entries: boolean hasNext()
org.conscrypt.OpenSSLSignature: byte[] engineSign()
org.conscrypt.NativeRef$SSL_SESSION: NativeRef$SSL_SESSION(long)
com.esotericsoftware.kryo.serializers.ObjectField$ObjectCharField: void write(com.esotericsoftware.kryo.io.Output,java.lang.Object)
de.javakaffee.kryoserializers.guava.TreeMultimapSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,com.google.common.collect.TreeMultimap)
org.conscrypt.Conscrypt$ProviderBuilder: org.conscrypt.Conscrypt$ProviderBuilder provideTrustManager(boolean)
com.esotericsoftware.kryo.io.ByteBufferInput: float[] readFloats(int)
org.conscrypt.ConscryptFileDescriptorSocket: java.lang.String[] getSupportedCipherSuites()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
com.esotericsoftware.kryo.io.ByteBufferOutput: void writeByte(byte)
com.esotericsoftware.kryo.serializers.MapSerializer$BindMap: java.lang.Class valueSerializer()
com.google.android.material.button.MaterialButton: void setIconTintMode(android.graphics.PorterDuff$Mode)
org.conscrypt.NativeSslSession: void access$200(java.lang.Throwable)
org.conscrypt.Java8EngineWrapper$1: java.lang.String selectApplicationProtocol(javax.net.ssl.SSLSocket,java.util.List)
org.conscrypt.NativeCrypto: void EVP_PKEY_CTX_free(long)
org.conscrypt.NativeSslSession$Impl$1: int getPeerPort()
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer: DefaultArraySerializers$ObjectArraySerializer(com.esotericsoftware.kryo.Kryo,java.lang.Class)
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
com.esotericsoftware.kryo.util.Util: boolean isClassAvailable(java.lang.String)
org.conscrypt.NativeCrypto: void clinit()
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
com.esotericsoftware.kryo.serializers.AsmCachedFieldFactory: com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField createCachedField(java.lang.Class,java.lang.reflect.Field,com.esotericsoftware.kryo.serializers.FieldSerializer)
com.esotericsoftware.kryo.serializers.CompatibleFieldSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.serializers.TimeSerializers$ZoneOffsetSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.NativeCrypto: long X509_REVOKED_get_ext(long,java.lang.String)
org.conscrypt.OpenSSLSocketImpl: void setNpnProtocols(byte[])
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmDoubleField: void copy(java.lang.Object,java.lang.Object)
org.conscrypt.AbstractConscryptSocket$1: int getPort()
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
org.conscrypt.OpenSSLX509Certificate: int getVersion()
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
org.conscrypt.ConscryptServerSocket: java.net.Socket accept()
com.esotericsoftware.kryo.serializers.OptionalSerializers$OptionalIntSerializer: java.util.OptionalInt read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.ct.CTVerificationResult: java.util.List getValidSCTs()
androidx.recyclerview.widget.RecyclerView: boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder)
org.conscrypt.OpenSSLX509Certificate: org.conscrypt.OpenSSLX509Certificate fromX509PemInputStream(java.io.InputStream)
com.google.android.material.chip.Chip: void setIconStartPaddingResource(int)
androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)
org.conscrypt.DESEDESecretKeyFactory: javax.crypto.SecretKey engineTranslateKey(javax.crypto.SecretKey)
com.esotericsoftware.kryo.util.IdentityObjectIntMap: void resize(int)
org.conscrypt.ConscryptEngine: javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[],int,int)
org.conscrypt.OpenSSLX509CRL: byte[] getEncoded()
com.google.android.material.card.MaterialCardView: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
org.conscrypt.NativeCrypto: int EVP_PKEY_cmp(org.conscrypt.NativeRef$EVP_PKEY,org.conscrypt.NativeRef$EVP_PKEY)
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
org.conscrypt.OpenSSLEvpCipherAES: void checkSupportedMode(org.conscrypt.OpenSSLCipher$Mode)
com.esotericsoftware.kryo.serializers.CollectionSerializer: CollectionSerializer()
com.esotericsoftware.kryo.io.UnsafeOutput: void supportVarInts(boolean)
org.conscrypt.ConscryptEngine: void resetSingleSrcBuffer()
org.conscrypt.OpenSSLMac$HmacSHA512: OpenSSLMac$HmacSHA512()
org.conscrypt.ExternalSession: javax.net.ssl.SSLSessionContext getSessionContext()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
org.conscrypt.OpenSSLCipherChaCha20: void reset()
org.conscrypt.BaseOpenSSLSocketAdapterFactory: java.net.Socket createSocket(java.net.InetAddress,int)
com.esotericsoftware.kryo.serializers.DefaultSerializers$CollectionsEmptyListSerializer: DefaultSerializers$CollectionsEmptyListSerializer()
com.esotericsoftware.kryo.util.IdentityMap: IdentityMap()
de.javakaffee.kryoserializers.dexx.SetSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,com.github.andrewoma.dexx.collection.Set)
com.esotericsoftware.kryo.KryoSerializable: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output)
com.esotericsoftware.kryo.util.ObjectMap$Keys: java.util.ArrayList toArray()
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: void setTrafficClass(int)
com.esotericsoftware.kryo.Kryo: boolean isClosure(java.lang.Class)
org.conscrypt.X509PublicKey: byte[] getEncoded()
com.esotericsoftware.kryo.util.ObjectMap: void ensureCapacity(int)
org.conscrypt.Java8FileDescriptorSocket: Java8FileDescriptorSocket(java.net.InetAddress,int,java.net.InetAddress,int,org.conscrypt.SSLParametersImpl)
org.conscrypt.ConscryptServerSocket: boolean isChannelIdEnabled()
com.esotericsoftware.kryo.serializers.DefaultSerializers$VoidSerializer: DefaultSerializers$VoidSerializer()
com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField: void write(com.esotericsoftware.kryo.io.Output,java.lang.Object)
androidx.recyclerview.widget.RecyclerView: boolean onInterceptTouchEvent(android.view.MotionEvent)
org.conscrypt.NativeCrypto: long SSL_get_time(long,org.conscrypt.NativeSsl)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: void clientCertificateRequested(byte[],byte[][])
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
org.conscrypt.ct.Serialization: byte[][] readList(java.io.InputStream,int,int)
org.conscrypt.Java8EngineWrapper: javax.net.ssl.SSLSession handshakeSession()
com.esotericsoftware.kryo.io.ByteBufferInput: void order(java.nio.ByteOrder)
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker: boolean isForwardCheckingSupported()
com.esotericsoftware.kryo.pool.SoftReferenceQueue: boolean equals(java.lang.Object)
com.esotericsoftware.kryo.io.ByteBufferInput: void setInputStream(java.io.InputStream)
org.conscrypt.ConscryptFileDescriptorSocket$SSLInputStream: void awaitPendingOps()
com.esotericsoftware.kryo.serializers.CollectionSerializer: java.util.Collection createCopy(com.esotericsoftware.kryo.Kryo,java.util.Collection)
com.google.android.material.chip.ChipGroup: void setDividerDrawableVertical(android.graphics.drawable.Drawable)
org.conscrypt.OpenSSLX509CRL: java.util.Set getRevokedCertificates()
org.conscrypt.TrustManagerImpl: void setCTVerifier(org.conscrypt.ct.CTVerifier)
org.conscrypt.Java8EngineWrapper: javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer,java.nio.ByteBuffer)
com.esotericsoftware.kryo.util.IntMap$MapIterator: void reset()
com.esotericsoftware.kryo.util.ObjectMap$Entries: com.esotericsoftware.kryo.util.ObjectMap$Entry next()
de.javakaffee.kryoserializers.RegexSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: void setEnabledProtocols(java.lang.String[])
com.esotericsoftware.kryo.Kryo: boolean setReferences(boolean)
org.conscrypt.Conscrypt: org.conscrypt.AbstractConscryptSocket toConscrypt(javax.net.ssl.SSLSocket)
com.esotericsoftware.kryo.io.UnsafeMemoryInput: float[] readFloats(int)
androidx.core.view.WindowInsetsCompat$Impl: WindowInsetsCompat$Impl(androidx.core.view.WindowInsetsCompat)
org.conscrypt.OpenSSLAeadCipherAES: int getCipherBlockSize()
org.conscrypt.NativeCrypto: boolean get_EVP_CIPHER_CTX_final_used(org.conscrypt.NativeRef$EVP_CIPHER_CTX)
org.conscrypt.EvpMdRef: EvpMdRef()
androidx.recyclerview.widget.RecyclerView: void dispatchSaveInstanceState(android.util.SparseArray)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getBackgroundTintList()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior(android.content.Context,android.util.AttributeSet)
org.conscrypt.ConscryptEngineSocket$SSLOutputStream: void flush()
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection$1: java.lang.Object create(java.lang.Object)
com.esotericsoftware.reflectasm.MethodAccess: void recursiveAddInterfaceMethodsToList(java.lang.Class,java.util.ArrayList)
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHintFromLayout()
org.conscrypt.OpenSSLCipherRSA: byte[] engineDoFinal(byte[],int,int)
com.esotericsoftware.reflectasm.FieldAccess: void insertGetObject(org.objectweb.asm.ClassWriter,java.lang.String,java.util.ArrayList)
com.google.android.material.textfield.TextInputLayout: void setStartIconTintList(android.content.res.ColorStateList)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: void verifyCertificateChain(byte[][],java.lang.String)
org.conscrypt.ExternalSession: javax.security.cert.X509Certificate[] getPeerCertificateChain()
com.esotericsoftware.kryo.serializers.DefaultSerializers$ClassSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.NativeRef: boolean equals(java.lang.Object)
org.conscrypt.Conscrypt$ProviderBuilder: org.conscrypt.Conscrypt$ProviderBuilder provideTrustManager()
com.esotericsoftware.kryo.util.ObjectMap: com.esotericsoftware.kryo.util.ObjectMap$Values values()
com.esotericsoftware.kryo.serializers.DefaultSerializers$BigDecimalSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: void shutdownOutput()
io.paperdb.DbStoragePlainFile: void deleteIfExists(java.lang.String)
com.esotericsoftware.kryo.Kryo: java.lang.Object copy(java.lang.Object,com.esotericsoftware.kryo.Serializer)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$StringArraySerializer: java.lang.String[] copy(com.esotericsoftware.kryo.Kryo,java.lang.String[])
org.conscrypt.OpenSSLCipherRSA$OAEP: void readOAEPParameters(javax.crypto.spec.OAEPParameterSpec)
com.esotericsoftware.kryo.io.Output: int writeLong(long,boolean)
com.esotericsoftware.kryo.serializers.DefaultSerializers$StringBuilderSerializer: java.lang.Object copy(com.esotericsoftware.kryo.Kryo,java.lang.Object)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationY(float)
com.esotericsoftware.kryo.Serializer: void setGenerics(com.esotericsoftware.kryo.Kryo,java.lang.Class[])
androidx.appcompat.widget.AbsActionBarView: int getAnimatedVisibility()
com.esotericsoftware.kryo.serializers.DefaultSerializers$CurrencySerializer: java.util.Currency read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.google.android.material.chip.Chip: void setEnsureMinTouchTargetSize(boolean)
org.conscrypt.io.IoUtils: IoUtils()
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.internal.ForegroundLinearLayout: ForegroundLinearLayout(android.content.Context,android.util.AttributeSet)
com.esotericsoftware.minlog.Log: void error(java.lang.String,java.lang.String)
org.conscrypt.Platform: org.conscrypt.ConscryptFileDescriptorSocket createFileDescriptorSocket(java.lang.String,int,java.net.InetAddress,int,org.conscrypt.SSLParametersImpl)
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmIntField: AsmCacheFields$AsmIntField()
org.conscrypt.NativeCrypto: byte[] SSL_get_tls_unique(long,org.conscrypt.NativeSsl)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$IntArraySerializer: DefaultArraySerializers$IntArraySerializer()
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
org.conscrypt.ConscryptEngineSocket$SSLInputStream: int read(byte[])
com.esotericsoftware.kryo.serializers.FieldSerializer: void setFieldsAsAccessible(boolean)
com.esotericsoftware.kryo.io.Input: Input(byte[],int,int)
io.paperdb.DbStoragePlainFile: java.io.File getOriginalFile(java.lang.String)
androidx.appcompat.widget.SearchView: int getMaxWidth()
org.conscrypt.ConscryptEngine: org.conscrypt.ConscryptSession provideHandshakeSession()
org.conscrypt.SSLUtils$EngineStates: SSLUtils$EngineStates()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.esotericsoftware.kryo.serializers.DefaultSerializers$BigDecimalSerializer: java.math.BigDecimal read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.io.UnsafeMemoryOutput: void writeInts(int[],boolean)
org.conscrypt.ConscryptFileDescriptorSocket: javax.net.ssl.SSLSession getHandshakeSession()
de.javakaffee.kryoserializers.JdkProxySerializer: java.lang.Object copy(com.esotericsoftware.kryo.Kryo,java.lang.Object)
org.conscrypt.OpenSSLCipher: int engineUpdate(byte[],int,int,byte[],int)
org.conscrypt.ct.CTLogInfo: byte[] getID()
org.conscrypt.NativeCrypto: long X509_CRL_get_lastUpdate(long,org.conscrypt.OpenSSLX509CRL)
org.conscrypt.BaseOpenSSLSocketAdapterFactory: java.net.Socket createSocket(java.lang.String,int)
com.esotericsoftware.kryo.serializers.CollectionSerializer: java.util.Collection create(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: void shutdownOutput()
com.esotericsoftware.kryo.serializers.DefaultSerializers$CalendarSerializer: java.util.Calendar copy(com.esotericsoftware.kryo.Kryo,java.util.Calendar)
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependencySortedChildren()
org.conscrypt.OpenSSLSocketImpl: OpenSSLSocketImpl(java.net.InetAddress,int)
org.conscrypt.OpenSSLX509CertificateFactory$1: java.lang.Object fromX509DerInputStream(java.io.InputStream)
org.conscrypt.SSLParametersImpl: void setCTVerificationEnabled(boolean)
de.javakaffee.kryoserializers.dexx.ListSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,com.github.andrewoma.dexx.collection.List)
de.javakaffee.kryoserializers.GregorianCalendarSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
de.javakaffee.kryoserializers.DateSerializer: java.lang.Object copy(com.esotericsoftware.kryo.Kryo,java.lang.Object)
org.conscrypt.FileClientSessionCache$Impl: java.lang.String fileName(java.lang.String,int)
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(int)
com.esotericsoftware.kryo.io.ByteBufferInput: double[] readDoubles(int)
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
androidx.recyclerview.widget.RecyclerView: void invalidateGlows()
org.conscrypt.ConscryptFileDescriptorSocket: org.conscrypt.ConscryptSession access$000(org.conscrypt.ConscryptFileDescriptorSocket)
org.conscrypt.ConscryptEngine: org.conscrypt.ConscryptSession access$100(org.conscrypt.ConscryptEngine)
org.conscrypt.AbstractConscryptSocket: boolean isClosed()
com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()
org.conscrypt.ConscryptEngine: void setBufferAllocator(org.conscrypt.BufferAllocator)
com.esotericsoftware.kryo.serializers.FieldSerializer: FieldSerializer(com.esotericsoftware.kryo.Kryo,java.lang.Class,java.lang.Class[])
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeRegionField: void write(com.esotericsoftware.kryo.io.Output,java.lang.Object)
androidx.core.graphics.drawable.IconCompat: IconCompat()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
com.esotericsoftware.kryo.serializers.MapSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
org.conscrypt.SSLUtils: javax.net.ssl.SSLException toSSLException(java.lang.Throwable)
org.conscrypt.OpenSSLECPointContext: OpenSSLECPointContext(org.conscrypt.OpenSSLECGroupContext,org.conscrypt.NativeRef$EC_POINT)
org.conscrypt.TrustManagerImpl: TrustManagerImpl(java.security.KeyStore,org.conscrypt.CertPinManager,org.conscrypt.ConscryptCertStore,org.conscrypt.CertBlacklist,org.conscrypt.ct.CTLogStore,org.conscrypt.ct.CTVerifier,org.conscrypt.ct.CTPolicy)
de.javakaffee.kryoserializers.SubListSerializers: java.lang.Class getClassOrNull(java.lang.String)
org.conscrypt.Platform: void checkServerTrusted(javax.net.ssl.X509TrustManager,java.security.cert.X509Certificate[],java.lang.String,org.conscrypt.ConscryptEngine)
org.conscrypt.OpenSSLECPrivateKey: OpenSSLECPrivateKey(org.conscrypt.OpenSSLECGroupContext,org.conscrypt.OpenSSLKey)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemWindowInsets()
com.google.android.material.card.MaterialCardView: float getProgress()
com.esotericsoftware.kryo.io.ByteBufferOutput: void write(int)
org.conscrypt.OpenSSLX509Certificate: java.security.Principal getIssuerDN()
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: java.net.InetAddress getInetAddress()
org.conscrypt.OpenSSLSignatureRawECDSA: void engineInitSign(java.security.PrivateKey)
org.conscrypt.ConscryptEngineSocket: void setUseClientMode(boolean)
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
com.esotericsoftware.kryo.serializers.ObjectField$ObjectShortField: java.lang.Object getField(java.lang.Object)
org.conscrypt.OpenSSLSignatureRawECDSA: boolean engineVerify(byte[])
net.sourceforge.jtds.util.SSPIJNIClient: byte[] prepareSSORequest()
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setAnimationMode(int)
org.conscrypt.OpenSSLSocketImpl: void removeHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener)
org.conscrypt.OpenSSLSocketImpl: OpenSSLSocketImpl(java.lang.String,int)
org.conscrypt.NativeSsl: int serverPSKKeyRequested(java.lang.String,java.lang.String,byte[])
androidx.recyclerview.widget.RecyclerView: void assertNotInLayoutOrScroll(java.lang.String)
org.conscrypt.Conscrypt: boolean isConscrypt(javax.net.ssl.SSLEngine)
com.esotericsoftware.kryo.serializers.TaggedFieldSerializerConfig: TaggedFieldSerializerConfig()
org.conscrypt.ChainStrengthAnalyzer: ChainStrengthAnalyzer()
org.conscrypt.AllocatedBuffer: org.conscrypt.AllocatedBuffer wrap(java.nio.ByteBuffer)
org.conscrypt.OpenSSLServerSocketFactoryImpl: void setUseEngineSocket(boolean)
com.esotericsoftware.kryo.serializers.DefaultSerializers$CollectionsEmptyMapSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.io.ByteBufferOutput: int writeVarLong(long,boolean)
org.conscrypt.OpenSSLServerSocketFactoryImpl: java.lang.String[] getSupportedCipherSuites()
org.conscrypt.EvpMdRef$SHA512: EvpMdRef$SHA512()
org.conscrypt.AbstractConscryptEngine: javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer)
org.conscrypt.NativeCrypto: byte[] get_X509_sig_alg_parameter(long,org.conscrypt.OpenSSLX509Certificate)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet,int)
com.esotericsoftware.kryo.ClassResolver: void setKryo(com.esotericsoftware.kryo.Kryo)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29)
org.conscrypt.OpenSSLX509CertificateFactory$2: java.util.List fromPkcs7DerInputStream(java.io.InputStream)
org.conscrypt.OpenSSLEvpCipherAES$AES_128$ECB$NoPadding: OpenSSLEvpCipherAES$AES_128$ECB$NoPadding()
com.esotericsoftware.kryo.io.ByteBufferInput: void rewind()
org.conscrypt.ConscryptFileDescriptorSocket: javax.crypto.SecretKey getPSKKey(org.conscrypt.PSKKeyManager,java.lang.String,java.lang.String)
com.esotericsoftware.kryo.util.ObjectMap$Values: void reset()
com.esotericsoftware.kryo.serializers.DefaultArraySerializers: DefaultArraySerializers()
org.conscrypt.AbstractConscryptSocket: java.lang.String getHandshakeApplicationProtocol()
com.esotericsoftware.kryo.serializers.ObjectField$ObjectLongField: void write(com.esotericsoftware.kryo.io.Output,java.lang.Object)
de.javakaffee.kryoserializers.jodatime.JodaLocalDateTimeSerializer: JodaLocalDateTimeSerializer()
org.conscrypt.NativeCrypto: long EVP_aead_aes_256_gcm_siv()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColor(int)
org.conscrypt.OpenSSLX509CertificateFactory$1: java.lang.Object fromX509PemInputStream(java.io.InputStream)
com.esotericsoftware.kryo.io.ByteBufferInputStream: ByteBufferInputStream(java.nio.ByteBuffer)
org.conscrypt.ConscryptCertStore: java.util.Set findAllIssuers(java.security.cert.X509Certificate)
com.esotericsoftware.kryo.io.UnsafeInput: long readLong()
com.esotericsoftware.reflectasm.FieldAccess: byte getByte(java.lang.Object,int)
com.esotericsoftware.kryo.util.IntArray: boolean contains(int)
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
org.conscrypt.Java8EngineSocket$1: java.lang.String selectApplicationProtocol(javax.net.ssl.SSLSocket,java.util.List)
androidx.recyclerview.widget.RecyclerView: void onChildDetachedFromWindow(android.view.View)
org.conscrypt.OpenSSLSignatureRawRSA: java.lang.Object engineGetParameter(java.lang.String)
org.conscrypt.ct.CTVerificationResult: java.util.List getInvalidSCTs()
org.conscrypt.OpenSSLMac: OpenSSLMac(long,int,org.conscrypt.OpenSSLMac$1)
com.stronger.bankNotification.notification_listener_service: notification_listener_service()
org.conscrypt.OpenSSLX509CertificateFactory: java.security.cert.CertPath engineGenerateCertPath(java.util.List)
org.conscrypt.Conscrypt$Version: Conscrypt$Version(int,int,int)
org.conscrypt.AbstractConscryptEngine: java.lang.String getHandshakeApplicationProtocol()
com.esotericsoftware.kryo.serializers.DefaultSerializers$TreeSetSerializer: DefaultSerializers$TreeSetSerializer()
com.google.android.material.bottomappbar.BottomAppBar: void setFabAnimationMode(int)
com.esotericsoftware.kryo.pool.KryoFactory: com.esotericsoftware.kryo.Kryo create()
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
com.esotericsoftware.kryo.util.ObjectMap: java.lang.Object remove(java.lang.Object)
org.conscrypt.ConscryptEngine: void verifyCertificateChain(byte[][],java.lang.String)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: boolean isInputShutdown()
com.esotericsoftware.kryo.serializers.TimeSerializers$DurationSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.time.Duration)
com.esotericsoftware.kryo.serializers.TimeSerializers$YearMonthSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getActionTextColorAlpha()
org.conscrypt.OpenSSLSignature$SHA1ECDSA: OpenSSLSignature$SHA1ECDSA()
com.esotericsoftware.kryo.Kryo: boolean isFinal(java.lang.Class)
io.paperdb.Book: java.lang.String getPath()
org.conscrypt.OpenSSLSocketImpl: boolean getTcpNoDelay()
com.esotericsoftware.kryo.io.FastInput: FastInput(byte[])
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmStringField: void write(com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.OpenSSLX509Certificate: java.util.Date getNotBefore()
com.google.android.material.textfield.TextInputEditText: TextInputEditText(android.content.Context,android.util.AttributeSet)
com.esotericsoftware.kryo.serializers.TimeSerializers$LocalDateTimeSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.Registration register(java.lang.Class)
org.conscrypt.ConscryptServerSocket: boolean getWantClientAuth()
com.esotericsoftware.kryo.Kryo: java.lang.Object readObject(com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.OpenSSLSocketImpl: int getSoWriteTimeout()
org.conscrypt.OpenSSLECDHKeyAgreement: byte[] engineGenerateSecret()
org.conscrypt.KeyGeneratorImpl$HmacSHA256: KeyGeneratorImpl$HmacSHA256()
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeRegionField: UnsafeCacheFields$UnsafeRegionField(long,long)
de.javakaffee.kryoserializers.guava.ImmutableSetSerializer: ImmutableSetSerializer()
androidx.recyclerview.widget.RecyclerView: boolean hasUpdatedView()
org.conscrypt.ConscryptEngineSocket: java.lang.String[] getApplicationProtocols()
org.conscrypt.NativeCrypto: java.lang.String[] get_X509_CRL_ext_oids(long,org.conscrypt.OpenSSLX509CRL,int)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getBackgroundDrawable()
org.conscrypt.OpenSSLEvpCipherAES: void checkSupportedPadding(org.conscrypt.OpenSSLCipher$Padding)
org.conscrypt.Java8EngineWrapper: void setEnabledCipherSuites(java.lang.String[])
org.conscrypt.ConscryptEngineSocket: ConscryptEngineSocket(java.lang.String,int,java.net.InetAddress,int,org.conscrypt.SSLParametersImpl)
org.conscrypt.TrustManagerFactoryImpl: void engineInit(java.security.KeyStore)
com.esotericsoftware.kryo.util.IntArray: int peek()
org.conscrypt.Java8EngineWrapper: java.lang.String getHandshakeApplicationProtocol()
org.conscrypt.OpenSSLX509Certificate: java.util.List getExtendedKeyUsage()
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment getTopEdgeTreatment()
androidx.recyclerview.widget.RecyclerView: void defaultOnMeasure(int,int)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$LongArraySerializer: long[] copy(com.esotericsoftware.kryo.Kryo,long[])
com.esotericsoftware.kryo.serializers.ObjectField$ObjectByteField: void read(com.esotericsoftware.kryo.io.Input,java.lang.Object)
com.google.android.material.bottomappbar.BottomAppBar: int getBottomInset()
com.esotericsoftware.kryo.util.IntMap: java.lang.Object get(int,java.lang.Object)
io.paperdb.Book: boolean exist(java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int)
org.conscrypt.ConscryptEngine: void setNeedClientAuth(boolean)
de.javakaffee.kryoserializers.guava.ImmutableMultimapSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,com.google.common.collect.ImmutableMultimap)
org.conscrypt.NativeSslSession$Impl$1: void putValue(java.lang.String,java.lang.Object)
org.conscrypt.Java8EngineWrapper: javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer[],java.nio.ByteBuffer[])
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$StringArraySerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.io.Input: double readDouble(double,boolean)
com.esotericsoftware.kryo.io.ByteBufferOutput: ByteBufferOutput(int,int)
com.esotericsoftware.kryo.serializers.ObjectField$ObjectShortField: void read(com.esotericsoftware.kryo.io.Input,java.lang.Object)
org.conscrypt.OpenSSLCipherRSA: int paddedBlockSizeBytes()
com.google.android.material.internal.NavigationMenuItemView: NavigationMenuItemView(android.content.Context,android.util.AttributeSet)
org.conscrypt.Java8FileDescriptorSocket$1: Java8FileDescriptorSocket$1(java.util.function.BiFunction)
org.conscrypt.NativeCrypto: byte[] SSL_export_keying_material(long,org.conscrypt.NativeSsl,byte[],byte[],int)
org.conscrypt.NativeSslSession$Impl: byte[] toBytes()
org.conscrypt.AbstractConscryptEngine: byte[] getTlsUnique()
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: void setChannelIdPrivateKey(java.security.PrivateKey)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$FloatArraySerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.EvpMdRef: int getDigestSizeBytesByJcaDigestAlgorithmStandardName(java.lang.String)
org.conscrypt.AbstractConscryptSocket: int getReceiveBufferSize()
com.esotericsoftware.kryo.io.Input: long[] readLongs(int,boolean)
com.esotericsoftware.kryo.io.UnsafeMemoryInput: int readInt(boolean)
org.conscrypt.OpenSSLAeadCipherAES$GCM_SIV: boolean allowsNonceReuse()
androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener)
org.conscrypt.NativeSsl$BioWrapper: int readDirectByteBuffer(long,int)
org.conscrypt.OpenSSLECPrivateKey: org.conscrypt.OpenSSLKey wrapJCAPrivateKeyForTLSStackOnly(java.security.PrivateKey,java.security.spec.ECParameterSpec)
org.conscrypt.ArrayUtils: void checkOffsetAndCount(int,int,int)
org.conscrypt.ActiveSession: java.security.Principal getPeerPrincipal()
androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()
org.conscrypt.GCMParameters: int getTLen()
com.esotericsoftware.reflectasm.MethodAccess: java.lang.Class[] getReturnTypes()
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
org.conscrypt.ConscryptEngine: void finishHandshake()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
org.conscrypt.ct.DigitallySigned$HashAlgorithm: org.conscrypt.ct.DigitallySigned$HashAlgorithm[] values()
org.conscrypt.AbstractConscryptSocket: java.io.FileDescriptor getFileDescriptor$()
com.esotericsoftware.kryo.pool.SoftReferenceQueue: java.lang.Object peek()
com.esotericsoftware.kryo.io.Input: void setTotal(long)
org.conscrypt.ConscryptEngineSocket: void setEnabledProtocols(java.lang.String[])
com.esotericsoftware.kryo.serializers.DefaultSerializers$CollectionsSingletonListSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.ct.CertificateEntry: byte[] getCertificate()
androidx.cardview.widget.CardView: int getContentPaddingTop()
com.esotericsoftware.kryo.Kryo$DefaultInstantiatorStrategy$1: java.lang.Object newInstance()
com.esotericsoftware.kryo.serializers.ObjectField$ObjectShortField: void write(com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.AbstractConscryptSocket: void shutdownOutput()
org.conscrypt.ct.CTLogInfo: java.security.PublicKey getPublicKey()
com.google.android.material.chip.Chip: void setElevation(float)
org.conscrypt.ConscryptEngineSocket$2: java.security.cert.X509Certificate[] getAcceptedIssuers()
org.conscrypt.OpenSSLBIOSource$ByteBufferInputStream: int read(byte[],int,int)
com.esotericsoftware.kryo.io.KryoObjectInput: int available()
com.esotericsoftware.kryo.io.Input: int readByteUnsigned()
com.google.android.material.chip.ChipGroup: void setSingleLine(int)
com.esotericsoftware.kryo.serializers.TimeSerializers$PeriodSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScrollTargetViewId(int)
org.conscrypt.EvpMdRef: long getEVP_MDByJcaDigestAlgorithmStandardName(java.lang.String)
com.esotericsoftware.kryo.io.ByteBufferOutput: int writeLong(long,boolean)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: void setKeepAlive(boolean)
com.esotericsoftware.kryo.util.Util: java.lang.String string(java.lang.Object)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.card.MaterialCardView: float getCardViewRadius()
org.conscrypt.ConscryptEngine: javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[])
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHint()
com.esotericsoftware.kryo.util.IntMap$MapIterator: void remove()
org.conscrypt.ConscryptFileDescriptorSocket: int getSoWriteTimeout()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getStartIconContentDescription()
com.esotericsoftware.kryo.util.IdentityObjectIntMap: boolean containsKeyStash(java.lang.Object)
com.esotericsoftware.minlog.Log: void info(java.lang.String,java.lang.String)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getError()
com.esotericsoftware.kryo.util.IdentityMap$Values: void toArray(java.util.ArrayList)
org.conscrypt.OpenSSLAeadCipherChaCha20: void checkSupportedMode(org.conscrypt.OpenSSLCipher$Mode)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: int getSoTimeout()
com.esotericsoftware.kryo.serializers.DefaultSerializers$EnumSerializer: DefaultSerializers$EnumSerializer(java.lang.Class)
org.conscrypt.OpenSSLRSAPrivateCrtKey: boolean equals(java.lang.Object)
org.conscrypt.Java8EngineWrapper: javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[])
com.google.android.material.internal.NavigationMenuView: int getWindowAnimations()
com.esotericsoftware.minlog.Log: void trace(java.lang.String,java.lang.String)
org.conscrypt.OpenSSLRSAKeyFactory: java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)
com.google.android.material.chip.Chip: void setCloseIconEndPadding(float)
com.google.android.material.card.MaterialCardView: void setCheckable(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.esotericsoftware.kryo.util.IdentityMap: int hash4(int)
com.esotericsoftware.kryo.KryoSerializable: void read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input)
org.conscrypt.OpenSSLX509Certificate: boolean[] getIssuerUniqueID()
org.conscrypt.EvpMdRef$SHA384: EvpMdRef$SHA384()
org.conscrypt.NativeCrypto: void X509_CRL_free(long,org.conscrypt.OpenSSLX509CRL)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
org.conscrypt.CertBlacklist: boolean isPublicKeyBlackListed(java.security.PublicKey)
org.conscrypt.Conscrypt: byte[] getChannelId(javax.net.ssl.SSLSocket)
org.conscrypt.OpenSSLKeyHolder: org.conscrypt.OpenSSLKey getOpenSSLKey()
com.esotericsoftware.kryo.serializers.DefaultSerializers$CollectionsEmptyMapSerializer: DefaultSerializers$CollectionsEmptyMapSerializer()
com.esotericsoftware.kryo.util.IdentityObjectIntMap: int remove(java.lang.Object,int)
com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.Registration getRegistration(int)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
org.conscrypt.OpenSSLSignatureRawECDSA: byte[] engineSign()
com.google.android.material.theme.MaterialComponentsViewInflater: boolean shouldInflateAppCompatButton(android.content.Context,android.util.AttributeSet)
com.esotericsoftware.kryo.serializers.DefaultSerializers$CharsetSerializer: java.nio.charset.Charset read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
de.javakaffee.kryoserializers.dexx.SetSerializer: com.github.andrewoma.dexx.collection.Set read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.util.IdentityMap$Keys: void reset()
org.conscrypt.NativeCrypto: long SSL_BIO_new(long,org.conscrypt.NativeSsl)
org.conscrypt.OpenSSLRSAPublicKey: byte[] getEncoded()
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmBooleanField: void copy(java.lang.Object,java.lang.Object)
com.google.android.material.chip.Chip: void setCloseIconSizeResource(int)
de.javakaffee.kryoserializers.dexx.MapSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,com.github.andrewoma.dexx.collection.Map)
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
org.conscrypt.SSLServerSessionCache: byte[] getSessionData(byte[])
org.conscrypt.NativeCrypto: void EVP_DigestSignUpdate(org.conscrypt.NativeRef$EVP_MD_CTX,byte[],int,int)
org.conscrypt.ConscryptFileDescriptorSocket: void transitionTo(int)
org.conscrypt.NativeCrypto: long X509_get_notBefore(long,org.conscrypt.OpenSSLX509Certificate)
org.conscrypt.SSLParametersImpl: void setUseClientMode(boolean)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: javax.net.ssl.SSLSession getSession()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
org.conscrypt.NativeCrypto: boolean[] get_X509_issuerUID(long,org.conscrypt.OpenSSLX509Certificate)
de.javakaffee.kryoserializers.GregorianCalendarSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.util.GregorianCalendar)
org.conscrypt.NativeCrypto: void HMAC_Init_ex(org.conscrypt.NativeRef$HMAC_CTX,byte[],long)
com.esotericsoftware.kryo.util.IdentityMap: IdentityMap(int)
com.esotericsoftware.kryo.io.UnsafeMemoryOutput: void writeChars(char[])
org.conscrypt.DefaultSSLContextImpl$TLSv12: DefaultSSLContextImpl$TLSv12()
de.javakaffee.kryoserializers.SubListSerializers$ArrayListSubListSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.google.android.material.card.MaterialCardView: void setProgress(float)
com.esotericsoftware.kryo.serializers.TaggedFieldSerializer: void setSkipUnknownTags(boolean)
org.conscrypt.ConscryptFileDescriptorSocket: java.lang.String[] getSupportedProtocols()
com.esotericsoftware.kryo.io.ByteBufferOutput: ByteBufferOutput(java.io.OutputStream,int)
org.conscrypt.SSLNullSession: SSLNullSession()
com.esotericsoftware.kryo.io.UnsafeMemoryOutput: void writeDoubles(double[])
org.conscrypt.PeerInfoProvider: org.conscrypt.PeerInfoProvider forHostAndPort(java.lang.String,int)
com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable getIcon()
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
org.conscrypt.Java8EngineWrapper: boolean getWantClientAuth()
com.esotericsoftware.kryo.serializers.OptionalSerializers$OptionalLongSerializer: java.util.OptionalLong read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.ConscryptEngineSocket: int access$800(org.conscrypt.ConscryptEngineSocket)
org.conscrypt.ConscryptEngine: javax.net.ssl.SSLEngineResult readPendingBytesFromBIO(java.nio.ByteBuffer,int,int,javax.net.ssl.SSLEngineResult$HandshakeStatus)
io.paperdb.DbStoragePlainFile: boolean exists(java.lang.String)
org.conscrypt.SSLParametersImpl: void setOCSPResponse(byte[])
org.conscrypt.OpenSSLSocketImpl: OpenSSLSocketImpl(java.lang.String,int,java.net.InetAddress,int)
com.esotericsoftware.kryo.serializers.DefaultSerializers$CollectionsEmptyMapSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.ConscryptEngine: javax.crypto.SecretKey getPSKKey(org.conscrypt.PSKKeyManager,java.lang.String,java.lang.String)
org.conscrypt.ConscryptEngineSocket: void setBufferAllocator(org.conscrypt.BufferAllocator)
com.esotericsoftware.kryo.KryoException: KryoException(java.lang.String)
org.conscrypt.NativeCrypto: int SSL_pending_readable_bytes(long,org.conscrypt.NativeSsl)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet)
com.google.android.material.button.MaterialButton: void setCornerRadiusResource(int)
org.conscrypt.Java7ExtendedSSLSession: java.lang.String[] getValueNames()
com.esotericsoftware.kryo.io.KryoDataInput: java.lang.String readLine()
org.conscrypt.ConscryptEngine: void closeInbound()
org.conscrypt.PeerInfoProvider$2: java.lang.String getHostnameOrIP()
org.conscrypt.IvParameters: java.security.spec.AlgorithmParameterSpec engineGetParameterSpec(java.lang.Class)
com.esotericsoftware.kryo.serializers.DefaultSerializers$CalendarSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.OpenSSLEvpCipher: int updateInternal(byte[],int,int,byte[],int,int)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: void setReceiveBufferSize(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
org.conscrypt.ConscryptFileDescriptorSocket: java.lang.String getApplicationProtocol()
com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)
org.conscrypt.OpenSSLX509CertPath: java.security.cert.CertPath fromEncoding(java.io.InputStream)
org.conscrypt.ct.CertificateEntry: void encode(java.io.OutputStream)
org.conscrypt.ConscryptEngine: java.lang.String getHostname()
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: boolean getReuseAddress()
androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
com.esotericsoftware.kryo.io.ByteBufferInput: boolean canReadInt()
io.paperdb.KeyLocker: void releaseGlobal()
com.esotericsoftware.kryo.serializers.ObjectField$ObjectDoubleField: java.lang.Object getField(java.lang.Object)
com.esotericsoftware.kryo.util.MapReferenceResolver: java.lang.Object getReadObject(java.lang.Class,int)
com.esotericsoftware.kryo.util.ObjectMap$MapIterator: void remove()
org.conscrypt.OpenSSLContextImpl$TLSv1: OpenSSLContextImpl$TLSv1()
org.conscrypt.NativeCrypto: byte[] getApplicationProtocol(long,org.conscrypt.NativeSsl)
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmObjectField: java.lang.Object getField(java.lang.Object)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
org.conscrypt.PSKKeyManager: java.lang.String chooseServerKeyIdentityHint(java.net.Socket)
com.esotericsoftware.kryo.io.ByteBufferInput: void setBuffer(byte[])
org.conscrypt.BaseOpenSSLSocketAdapterFactory: java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int)
org.conscrypt.OpenSSLProvider: void putImplClassWithKeyConstraints(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
org.conscrypt.AbstractConscryptSocket: java.net.InetAddress getLocalAddress()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(int)
androidx.recyclerview.widget.RecyclerView: java.lang.CharSequence getAccessibilityClassName()
org.conscrypt.OpenSSLSignatureRawECDSA: org.conscrypt.OpenSSLKey verifyKey(org.conscrypt.OpenSSLKey)
org.conscrypt.AbstractConscryptSocket: AbstractConscryptSocket(java.net.InetAddress,int)
com.esotericsoftware.kryo.io.Input: Input(java.io.InputStream,int)
org.conscrypt.OpenSSLCipherChaCha20: OpenSSLCipherChaCha20()
com.esotericsoftware.kryo.util.IdentityMap$Keys: java.util.Iterator iterator()
de.javakaffee.kryoserializers.cglib.CGLibProxySerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.pool.KryoPoolQueueImpl: KryoPoolQueueImpl(com.esotericsoftware.kryo.pool.KryoFactory,java.util.Queue)
org.conscrypt.NativeCrypto: byte[] i2d_PKCS7(long[])
org.conscrypt.OpenSSLMac: byte[] engineDoFinal()
org.conscrypt.AbstractConscryptSocket: void setApplicationProtocolSelector(org.conscrypt.ApplicationProtocolSelectorAdapter)
org.conscrypt.OpenSSLECPublicKey: OpenSSLECPublicKey(java.security.spec.ECPublicKeySpec)
com.esotericsoftware.kryo.util.FastestStreamFactory: com.esotericsoftware.kryo.io.Input getInput()
com.esotericsoftware.kryo.Kryo: void writeObject(com.esotericsoftware.kryo.io.Output,java.lang.Object,com.esotericsoftware.kryo.Serializer)
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat getLastWindowInsets()
de.javakaffee.kryoserializers.jodatime.JodaDateTimeSerializer: org.joda.time.DateTime read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.io.KryoDataOutput: void writeByte(int)
com.esotericsoftware.kryo.io.ByteBufferInput: java.lang.StringBuilder readStringBuilder()
com.esotericsoftware.kryo.serializers.ObjectField$ObjectByteField: java.lang.Object getField(java.lang.Object)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
org.conscrypt.NativeSsl: void configureServerCertificate()
org.conscrypt.ActiveSession: java.security.cert.Certificate[] getLocalCertificates()
com.esotericsoftware.kryo.serializers.VersionFieldSerializer: VersionFieldSerializer(com.esotericsoftware.kryo.Kryo,java.lang.Class)
org.conscrypt.SessionSnapshot: javax.net.ssl.SSLSessionContext getSessionContext()
com.esotericsoftware.kryo.util.ListReferenceResolver: int nextReadId(java.lang.Class)
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior()
com.esotericsoftware.kryo.util.IdentityObjectIntMap: void putResize(java.lang.Object,int)
com.esotericsoftware.kryo.util.IdentityObjectIntMap: IdentityObjectIntMap(int)
org.conscrypt.NativeCrypto: java.lang.String[] get_X509_ext_oids(long,org.conscrypt.OpenSSLX509Certificate,int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
com.esotericsoftware.kryo.serializers.ClosureSerializer: java.lang.Object copy(com.esotericsoftware.kryo.Kryo,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setEndIconVisible(boolean)
org.conscrypt.PSSParameters: byte[] engineGetEncoded()
org.conscrypt.SessionSnapshot: java.security.cert.Certificate[] getPeerCertificates()
org.conscrypt.OpenSSLRSAPrivateCrtKey: java.math.BigInteger getPrimeP()
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeCharField: UnsafeCacheFields$UnsafeCharField(java.lang.reflect.Field)
org.conscrypt.Platform: void logStackTraceSnippet(java.lang.String,java.lang.Throwable)
com.esotericsoftware.kryo.serializers.DefaultSerializers$CollectionsEmptyListSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.serializers.TimeSerializers$LocalDateTimeSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.time.LocalDateTime)
androidx.recyclerview.widget.RecyclerView: void addOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
com.esotericsoftware.kryo.StreamFactory: com.esotericsoftware.kryo.io.Output getOutput(int,int)
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
com.esotericsoftware.kryo.io.Output: int longLength(long,boolean)
org.conscrypt.NativeSsl: void forceRead()
de.javakaffee.kryoserializers.dexx.MapSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.google.android.material.bottomappbar.BottomAppBar: void setSubtitle(java.lang.CharSequence)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ByteArraySerializer: java.lang.Object copy(com.esotericsoftware.kryo.Kryo,java.lang.Object)
org.conscrypt.OpenSSLX509CertPath: OpenSSLX509CertPath(java.util.List)
org.conscrypt.OpenSSLSocketFactoryImpl: java.lang.String[] getDefaultCipherSuites()
org.conscrypt.GCMParameters: java.lang.String engineToString()
org.conscrypt.OpenSSLRSAPrivateCrtKey: OpenSSLRSAPrivateCrtKey(java.security.spec.RSAPrivateCrtKeySpec)
org.conscrypt.NativeCrypto: java.lang.String get_X509_sig_alg_oid(long,org.conscrypt.OpenSSLX509Certificate)
org.conscrypt.ConscryptEngineSocket$SSLOutputStream: void write(byte[])
com.esotericsoftware.kryo.serializers.GenericsResolver: boolean isSet()
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmIntField: void copy(java.lang.Object,java.lang.Object)
com.esotericsoftware.kryo.io.Input: short[] readShorts(int)
com.google.android.material.bottomappbar.BottomAppBar: androidx.appcompat.widget.ActionMenuView getActionMenuView()
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmObjectField: void copy(java.lang.Object,java.lang.Object)
io.paperdb.Paper: java.lang.Object get(java.lang.String)
com.esotericsoftware.kryo.io.UnsafeMemoryOutput: void writeBytes(java.lang.Object,long,long,long)
org.conscrypt.OpenSSLCipher: byte[] checkAndSetEncodedKey(int,java.security.Key)
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundResource(int)
io.paperdb.Book: Book(android.content.Context,java.lang.String,java.util.HashMap)
org.conscrypt.NativeCrypto: void EVP_PKEY_CTX_set_rsa_padding(long,int)
org.conscrypt.ConscryptEngineSocket$SSLOutputStream: void write(byte[],int,int)
com.esotericsoftware.kryo.io.UnsafeInput: long[] readLongs(int)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$StringArraySerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int)
org.conscrypt.OpenSSLSignature$SHA256RSA: OpenSSLSignature$SHA256RSA()
org.conscrypt.NativeSslSession$Impl$1: int getApplicationBufferSize()
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreScroll(int,int,int[],int[])
com.esotericsoftware.kryo.io.InputChunked: InputChunked(int)
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
org.conscrypt.DuckTypedPSKKeyManager: javax.crypto.SecretKey getKey(java.lang.String,java.lang.String,java.net.Socket)
org.conscrypt.TrustManagerImpl: byte[] getTlsSctDataFromSession(javax.net.ssl.SSLSession)
com.esotericsoftware.kryo.serializers.DefaultSerializers$EnumSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField: com.esotericsoftware.kryo.Serializer getSerializer()
org.conscrypt.SSLUtils$SessionType: org.conscrypt.SSLUtils$SessionType valueOf(java.lang.String)
org.conscrypt.OpenSSLSignature: void engineInitVerify(java.security.PublicKey)
com.esotericsoftware.kryo.io.Output: void writeInts(int[])
org.conscrypt.SessionSnapshot: boolean isValid()
com.esotericsoftware.kryo.serializers.TaggedFieldSerializer: boolean isIgnoreUnkownTags()
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getMaterialThemeColorsTintList()
com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.Registration readClass(com.esotericsoftware.kryo.io.Input)
org.conscrypt.KeyGeneratorImpl$AES: void checkKeySize(int)
com.esotericsoftware.kryo.io.Input: byte[] readBytes(int)
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeLongField: void write(com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.OpenSSLCipher: java.security.Key engineUnwrap(byte[],java.lang.String,int)
org.conscrypt.OpenSSLSignature$SHA384RSA: OpenSSLSignature$SHA384RSA()
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView: void scrollTo(int,int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtended(boolean)
com.esotericsoftware.kryo.serializers.ObjectField$ObjectBooleanField: void write(com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.ConscryptEngine: ConscryptEngine(org.conscrypt.SSLParametersImpl,org.conscrypt.PeerInfoProvider)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
org.conscrypt.ConscryptFileDescriptorSocket: ConscryptFileDescriptorSocket(java.lang.String,int,org.conscrypt.SSLParametersImpl)
com.esotericsoftware.kryo.util.ObjectMap$Keys: ObjectMap$Keys(com.esotericsoftware.kryo.util.ObjectMap)
com.esotericsoftware.kryo.serializers.FieldSerializerAnnotationsUtil: void processAnnotatedFields(com.esotericsoftware.kryo.serializers.FieldSerializer)
org.conscrypt.OpenSSLCipherRSA$OAEP: int doCryptoOperation(byte[],byte[])
com.esotericsoftware.kryo.util.IdentityObjectIntMap: void putStash(java.lang.Object,int)
com.esotericsoftware.kryo.serializers.FieldSerializer: void createCachedFields(com.esotericsoftware.kryo.util.IntArray,java.util.List,java.util.List,int)
com.esotericsoftware.kryo.util.DefaultClassResolver: com.esotericsoftware.kryo.Registration readClass(com.esotericsoftware.kryo.io.Input)
com.esotericsoftware.kryo.serializers.TimeSerializers$ZonedDateTimeSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.time.ZonedDateTime)
org.conscrypt.NativeCrypto: void SSL_set_session_creation_enabled(long,org.conscrypt.NativeSsl,boolean)
com.esotericsoftware.kryo.util.IdentityObjectIntMap: void clear()
org.conscrypt.OpenSSLECPointContext: int hashCode()
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
io.paperdb.Paper: void init(android.content.Context)
org.conscrypt.NativeSsl: java.security.cert.X509Certificate[] getPeerCertificates()
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmStringField: AsmCacheFields$AsmStringField()
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: void setNpnProtocols(byte[])
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnAttachStateChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnAttachStateChangeListener)
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
com.esotericsoftware.kryo.serializers.TimeSerializers$ZonedDateTimeSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.google.android.material.internal.NavigationMenuItemView: void setActionView(android.view.View)
androidx.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
org.conscrypt.NativeCrypto: void setEnabledCipherSuites(long,org.conscrypt.NativeSsl,java.lang.String[],java.lang.String[])
org.conscrypt.ConscryptEngine: javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer[],int,int,java.nio.ByteBuffer[],int,int)
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
com.esotericsoftware.kryo.io.UnsafeMemoryInput: void readBytes(java.lang.Object,long,long,int)
org.conscrypt.Conscrypt: Conscrypt()
org.conscrypt.PSSParameters: java.security.spec.AlgorithmParameterSpec engineGetParameterSpec(java.lang.Class)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator()
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: void setEnabledCipherSuites(java.lang.String[])
org.conscrypt.NativeCrypto: byte[] EC_GROUP_get_cofactor(org.conscrypt.NativeRef$EC_GROUP)
com.esotericsoftware.kryo.serializers.DefaultSerializers$ClassSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.io.ByteBufferInputStream: ByteBufferInputStream()
com.esotericsoftware.kryo.util.IntMap: void removeStashIndex(int)
org.conscrypt.Java8EngineWrapper: void setChannelIdEnabled(boolean)
org.conscrypt.Conscrypt: void setChannelIdEnabled(javax.net.ssl.SSLSocket,boolean)
org.conscrypt.FileClientSessionCache$Impl: void logWriteError(java.lang.String,java.io.File,java.lang.Throwable)
com.esotericsoftware.kryo.io.UnsafeMemoryOutput: int writeVarInt(int,boolean)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
org.conscrypt.NativeCrypto: void asn1_write_cleanup(long)
org.conscrypt.AbstractConscryptEngine: void setBufferAllocator(org.conscrypt.BufferAllocator)
org.conscrypt.OpenSSLRSAPrivateKey: org.conscrypt.OpenSSLKey wrapPlatformKey(java.security.interfaces.RSAPrivateKey)
org.conscrypt.SSLUtils: java.lang.String[] decodeProtocols(byte[])
com.esotericsoftware.kryo.serializers.TimeSerializers$InstantSerializer: TimeSerializers$InstantSerializer()
com.esotericsoftware.kryo.io.FastOutput: FastOutput(int)
org.conscrypt.OpenSSLX509CertPath$Encoding: org.conscrypt.OpenSSLX509CertPath$Encoding[] values()
org.conscrypt.OpenSSLX509CertificateFactory: java.security.cert.CertPath engineGenerateCertPath(java.io.InputStream)
com.esotericsoftware.kryo.serializers.DefaultSerializers$CurrencySerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.BufferAllocator: BufferAllocator()
com.google.android.material.chip.Chip: void setOnCheckedChangeListenerInternal(android.widget.CompoundButton$OnCheckedChangeListener)
org.conscrypt.OpenSSLX509CRL: java.lang.String toString()
org.conscrypt.NativeSslSession$Impl$1: void removeValue(java.lang.String)
org.conscrypt.OpenSSLX509CRLEntry: java.lang.String toString()
org.conscrypt.ConscryptEngine: int maxSealOverhead()
org.conscrypt.ExternalSession: java.security.Principal getLocalPrincipal()
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
org.conscrypt.Platform: void setSSLParameters(javax.net.ssl.SSLParameters,org.conscrypt.SSLParametersImpl,org.conscrypt.ConscryptEngine)
com.google.android.material.internal.ForegroundLinearLayout: void setForeground(android.graphics.drawable.Drawable)
org.conscrypt.OpenSSLSocketImpl: int getSendBufferSize()
com.esotericsoftware.kryo.Registration: Registration(java.lang.Class,com.esotericsoftware.kryo.Serializer,int)
com.esotericsoftware.kryo.serializers.OptionalSerializers$OptionalSerializer: java.util.Optional read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.AbstractConscryptSocket: byte[] getTlsUnique()
com.esotericsoftware.kryo.io.KryoObjectInput: KryoObjectInput(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input)
org.conscrypt.AbstractSessionContext$2: java.lang.Object nextElement()
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: int getSendBufferSize()
org.conscrypt.ActiveSession: void putValue(java.lang.String,java.lang.Object)
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
org.conscrypt.OpenSSLX509CertificateFactory$Parser: java.lang.Object fromX509DerInputStream(java.io.InputStream)
org.conscrypt.OpenSSLMac$HmacMD5: OpenSSLMac$HmacMD5()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
com.esotericsoftware.kryo.io.ByteBufferOutputStream: ByteBufferOutputStream()
com.esotericsoftware.kryo.serializers.DefaultSerializers$DoubleSerializer: java.lang.Double read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.serializers.DefaultSerializers$ByteSerializer: DefaultSerializers$ByteSerializer()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setVisibility(int)
org.conscrypt.ConscryptEngine: java.lang.String getPeerHost()
org.conscrypt.ct.CertificateEntry: org.conscrypt.ct.CertificateEntry createForPrecertificate(byte[],byte[])
org.conscrypt.KeyManagerImpl: java.lang.String chooseServerAlias(java.lang.String,java.security.Principal[],java.net.Socket)
org.conscrypt.NativeCrypto: int get_EVP_CIPHER_CTX_buf_len(org.conscrypt.NativeRef$EVP_CIPHER_CTX)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getBackgroundOverlayColorAlpha()
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: void setReuseAddress(boolean)
de.javakaffee.kryoserializers.guava.ReverseListSerializer$ReverseList: ReverseListSerializer$ReverseList()
org.conscrypt.NativeCrypto: long EVP_parse_public_key(byte[])
org.conscrypt.TrustManagerImpl: java.util.List checkTrustedRecursive(java.security.cert.X509Certificate[],byte[],byte[],java.lang.String,boolean,java.util.ArrayList,java.util.ArrayList,java.util.Set)
com.esotericsoftware.reflectasm.FieldAccess: java.lang.Object get(java.lang.Object,int)
com.esotericsoftware.kryo.pool.SoftReferenceQueue: com.esotericsoftware.kryo.Kryo peek()
org.conscrypt.AbstractConscryptSocket: java.lang.String getHostname()
org.conscrypt.NativeSsl: byte[] exportKeyingMaterial(java.lang.String,byte[],int)
androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: boolean getOOBInline()
com.esotericsoftware.kryo.io.ByteBufferInput: boolean canReadLong()
com.esotericsoftware.minlog.Log: void error(java.lang.String,java.lang.Throwable)
org.conscrypt.OpenSSLMac$HmacSHA384: OpenSSLMac$HmacSHA384()
com.esotericsoftware.kryo.util.DefaultStreamFactory: com.esotericsoftware.kryo.io.Output getOutput(byte[])
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: java.io.FileDescriptor getFileDescriptor$()
org.conscrypt.NativeCrypto$SSLHandshakeCallbacks: long serverSessionRequested(byte[])
com.esotericsoftware.kryo.serializers.FieldSerializerConfig: boolean isSetFieldsAsAccessible()
org.conscrypt.OpenSSLSocketImpl: java.net.SocketAddress getRemoteSocketAddress()
org.conscrypt.ClientSessionContext: ClientSessionContext()
com.esotericsoftware.reflectasm.FieldAccess: void set(java.lang.Object,java.lang.String,java.lang.Object)
org.conscrypt.OpenSSLECPublicKey: java.security.spec.ECPoint getW()
org.conscrypt.OpenSSLECKeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$StringArraySerializer: java.lang.Object copy(com.esotericsoftware.kryo.Kryo,java.lang.Object)
com.google.android.material.button.MaterialButton: int getIconPadding()
androidx.recyclerview.widget.RecyclerView: void getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect)
org.conscrypt.OpenSSLECPrivateKey: boolean equals(java.lang.Object)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
org.conscrypt.Conscrypt$Version: int major()
org.conscrypt.NativeCrypto: byte[] X509_REVOKED_get_ext_oid(long,java.lang.String)
com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.Serializer getDefaultSerializerForAnnotatedType(java.lang.Class)
org.conscrypt.ConscryptEngine: javax.net.ssl.SSLEngineResult newResult(int,int,javax.net.ssl.SSLEngineResult$HandshakeStatus)
androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
io.paperdb.Paper: Paper()
de.javakaffee.kryoserializers.DateSerializer: DateSerializer(java.lang.Class)
org.conscrypt.X509PublicKey: java.lang.String toString()
com.esotericsoftware.kryo.serializers.DefaultSerializers$BigIntegerSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.util.IntMap$Keys: void remove()
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior(android.content.Context,android.util.AttributeSet)
de.javakaffee.kryoserializers.guava.ArrayListMultimapSerializer: ArrayListMultimapSerializer()
com.esotericsoftware.reflectasm.AccessClassLoader: java.lang.Class defineClass(java.lang.String,byte[])
org.conscrypt.NativeCrypto: long[] SSL_get_ciphers(long,org.conscrypt.NativeSsl)
com.esotericsoftware.kryo.serializers.ObjectField$ObjectByteField: void write(com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior()
org.conscrypt.ct.CTVerifier: java.util.List getSCTsFromX509Extension(org.conscrypt.OpenSSLX509Certificate)
org.conscrypt.OpenSSLEvpCipher: int getOutputSizeForFinal(int)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setFitsSystemWindows(boolean)
com.esotericsoftware.kryo.io.KryoDataOutput: void writeBoolean(boolean)
org.conscrypt.OpenSSLCipher: void checkSupportedPadding(org.conscrypt.OpenSSLCipher$Padding)
com.esotericsoftware.kryo.serializers.ObjectField$ObjectCharField: ObjectField$ObjectCharField(com.esotericsoftware.kryo.serializers.FieldSerializer)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean)
org.conscrypt.OpenSSLECPublicKey: boolean equals(java.lang.Object)
com.esotericsoftware.kryo.serializers.DefaultSerializers$TreeSetSerializer: java.util.TreeSet create(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.Kryo: void writeObjectOrNull(com.esotericsoftware.kryo.io.Output,java.lang.Object,com.esotericsoftware.kryo.Serializer)
com.google.android.material.bottomappbar.BottomAppBar: int getFabAnimationMode()
org.conscrypt.Platform: boolean isCTVerificationRequired(java.lang.String)
com.esotericsoftware.kryo.serializers.DefaultSerializers$StringBufferSerializer: java.lang.Object copy(com.esotericsoftware.kryo.Kryo,java.lang.Object)
org.conscrypt.SSLNullSession: java.lang.String getRequestedServerName()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29(androidx.core.view.WindowInsetsCompat)
org.conscrypt.OpenSSLAeadCipher: void engineInitInternal(byte[],java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)
com.esotericsoftware.kryo.io.ByteBufferInput: boolean isNativeOrder()
org.conscrypt.NativeCrypto: long SSL_SESSION_get_timeout(long)
com.esotericsoftware.kryo.io.ByteBufferInput: int readVarInt(boolean)
com.esotericsoftware.reflectasm.FieldAccess: java.lang.Object get(java.lang.Object,java.lang.String)
org.conscrypt.PSKKeyManager: javax.crypto.SecretKey getKey(java.lang.String,java.lang.String,javax.net.ssl.SSLEngine)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$BooleanArraySerializer: java.lang.Object copy(com.esotericsoftware.kryo.Kryo,java.lang.Object)
org.conscrypt.NativeCrypto: java.lang.String[] getSupportedProtocols()
org.conscrypt.KeyManagerImpl: java.security.PrivateKey getPrivateKey(java.lang.String)
com.esotericsoftware.kryo.util.IdentityObjectIntMap: int getAndIncrementStash(java.lang.Object,int,int)
io.paperdb.DbStoragePlainFile: DbStoragePlainFile(java.lang.String,java.lang.String,java.util.HashMap)
org.conscrypt.NativeSslSession$Impl: byte[] getPeerSignedCertificateTimestamp()
com.esotericsoftware.kryo.util.IntMap: com.esotericsoftware.kryo.util.IntMap$Entries entries()
com.esotericsoftware.kryo.util.IdentityMap: int hash2(int)
com.esotericsoftware.kryo.io.FastInput: FastInput(java.io.InputStream,int)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
org.conscrypt.ConscryptSession: byte[] getPeerSignedCertificateTimestamp()
org.conscrypt.TrustManagerImpl$GlobalHostnameVerifierAdapter: org.conscrypt.TrustManagerImpl$GlobalHostnameVerifierAdapter[] values()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getDefaultHintTextColor()
com.esotericsoftware.kryo.serializers.FieldSerializerAnnotationsUtil: FieldSerializerAnnotationsUtil(com.esotericsoftware.kryo.serializers.FieldSerializer)
org.conscrypt.SSLNullSession: java.security.cert.Certificate[] getLocalCertificates()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getStartIconDrawable()
org.conscrypt.ExternalSession: int getApplicationBufferSize()
com.esotericsoftware.kryo.serializers.CollectionSerializer: java.util.Collection copy(com.esotericsoftware.kryo.Kryo,java.util.Collection)
org.conscrypt.NativeCrypto: byte[][] EC_GROUP_get_curve(org.conscrypt.NativeRef$EC_GROUP)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
org.conscrypt.KeyGeneratorImpl: KeyGeneratorImpl(java.lang.String,int)
org.conscrypt.NativeSsl: byte[] getApplicationProtocol()
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$DoubleArraySerializer: java.lang.Object copy(com.esotericsoftware.kryo.Kryo,java.lang.Object)
com.esotericsoftware.kryo.io.ByteBufferInputStream: int read(byte[],int,int)
com.esotericsoftware.kryo.io.UnsafeOutput: UnsafeOutput(byte[])
org.conscrypt.OpenSSLSocketImpl: boolean isClosed()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
org.conscrypt.ct.CTLogInfo: boolean equals(java.lang.Object)
org.conscrypt.Platform: boolean serverNamePermitted(org.conscrypt.SSLParametersImpl,java.lang.String)
com.esotericsoftware.kryo.io.ByteBufferOutput: void setOutputStream(java.io.OutputStream)
com.esotericsoftware.kryo.serializers.OptionalSerializers$OptionalSerializer: java.util.Optional copy(com.esotericsoftware.kryo.Kryo,java.util.Optional)
org.conscrypt.Java8EngineWrapper: boolean isOutboundDone()
com.esotericsoftware.kryo.serializers.DefaultSerializers$IntSerializer: DefaultSerializers$IntSerializer()
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: int getReceiveBufferSize()
org.conscrypt.OpenSSLX509CRL: java.util.Date toDate(long)
com.esotericsoftware.kryo.io.Output: void writeBytes(byte[])
org.conscrypt.ConscryptFileDescriptorSocket$SSLOutputStream: void write(byte[],int,int)
org.conscrypt.ConscryptEngineSocket: java.lang.Object access$700(org.conscrypt.ConscryptEngineSocket)
com.esotericsoftware.kryo.serializers.DefaultSerializers$EnumSetSerializer: java.util.EnumSet read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
com.esotericsoftware.kryo.serializers.TimeSerializers$YearMonthSerializer: TimeSerializers$YearMonthSerializer(com.esotericsoftware.kryo.serializers.TimeSerializers$1)
org.conscrypt.io.IoUtils: void closeQuietly(java.io.Closeable)
org.conscrypt.OpenSSLCipher: int getCipherBlockSize()
de.javakaffee.kryoserializers.guava.ImmutableListSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.util.ObjectMap: void shrink(int)
org.conscrypt.AbstractConscryptSocket: void checkOpen()
com.google.android.material.button.MaterialButton: void setIconPadding(int)
androidx.recyclerview.widget.RecyclerView: boolean isNestedScrollingEnabled()
org.conscrypt.ConscryptEngineSocket$SSLInputStream: int readUntilDataAvailable(byte[],int,int)
org.conscrypt.NativeRef$EC_GROUP: void doFree(long)
com.google.android.material.appbar.ViewOffsetBehavior: ViewOffsetBehavior()
org.conscrypt.BufferAllocator: org.conscrypt.AllocatedBuffer allocateDirectBuffer(int)
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
org.conscrypt.ConscryptEngineSocket: ConscryptEngineSocket(java.lang.String,int,org.conscrypt.SSLParametersImpl)
org.conscrypt.AbstractConscryptSocket: javax.net.ssl.SSLSession getHandshakeSession()
org.conscrypt.ct.CTVerificationResult: void add(org.conscrypt.ct.VerifiedSCT)
org.conscrypt.SSLParametersImpl$PSKCallbacks: java.lang.String chooseClientPSKIdentity(org.conscrypt.PSKKeyManager,java.lang.String)
com.esotericsoftware.kryo.serializers.DefaultSerializers$CalendarSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.PeerInfoProvider: java.lang.String getHostname()
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: void shutdownInput()
com.esotericsoftware.kryo.serializers.OptionalSerializers$OptionalDoubleSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
de.javakaffee.kryoserializers.guava.ImmutableListSerializer: void registerSerializers(com.esotericsoftware.kryo.Kryo)
com.esotericsoftware.kryo.util.IdentityObjectIntMap: int removeStash(java.lang.Object,int)
org.conscrypt.Conscrypt: boolean isConscrypt(javax.net.ssl.SSLSocketFactory)
com.esotericsoftware.kryo.serializers.FieldSerializer: void setIgnoreSyntheticFields(boolean)
org.conscrypt.Java7ExtendedSSLSession: java.security.cert.Certificate[] getPeerCertificates()
org.conscrypt.ApplicationProtocolSelectorAdapter: ApplicationProtocolSelectorAdapter(javax.net.ssl.SSLSocket,org.conscrypt.ApplicationProtocolSelector)
com.google.android.material.appbar.MaterialToolbar: MaterialToolbar(android.content.Context,android.util.AttributeSet)
de.javakaffee.kryoserializers.URISerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.net.URI)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20()
org.conscrypt.SSLParametersImpl: java.lang.String[] getEnabledCipherSuites()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipIconTint()
com.esotericsoftware.kryo.StreamFactory: com.esotericsoftware.kryo.io.Input getInput()
de.javakaffee.kryoserializers.jodatime.IdentifiableChronology: de.javakaffee.kryoserializers.jodatime.IdentifiableChronology[] values()
com.esotericsoftware.kryo.serializers.TimeSerializers$YearSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.serializers.TimeSerializers$ZoneOffsetSerializer: TimeSerializers$ZoneOffsetSerializer()
org.conscrypt.ct.DigitallySigned$HashAlgorithm: DigitallySigned$HashAlgorithm(java.lang.String,int)
org.conscrypt.ct.SignedCertificateTimestamp$Version: org.conscrypt.ct.SignedCertificateTimestamp$Version[] values()
org.conscrypt.IvParameters: void engineInit(byte[],java.lang.String)
org.conscrypt.OpenSSLECKeyFactory: java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl()
com.google.android.material.chip.Chip: void setChipEndPadding(float)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
com.esotericsoftware.kryo.util.DefaultStreamFactory: com.esotericsoftware.kryo.io.Output getOutput()
org.conscrypt.OpenSSLRSAPrivateCrtKey: void readObject(java.io.ObjectInputStream)
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection$7: SynchronizedCollectionsSerializer$SynchronizedCollection$7(java.lang.String,int,java.lang.Class,java.lang.reflect.Field)
org.conscrypt.NativeRef$SSL_SESSION: void doFree(long)
org.conscrypt.NativeCrypto: byte[] i2d_X509(long,org.conscrypt.OpenSSLX509Certificate)
com.google.android.material.appbar.AppBarLayout: void setElevation(float)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: Snackbar$SnackbarLayout(android.content.Context,android.util.AttributeSet)
org.conscrypt.TrustedCertificateIndex: java.security.cert.TrustAnchor findBySubjectAndPublicKey(java.security.cert.X509Certificate)
org.conscrypt.Java8EngineWrapper: void setApplicationProtocolSelector(org.conscrypt.ApplicationProtocolSelector)
com.esotericsoftware.kryo.util.ObjectMap: ObjectMap()
com.google.android.material.button.MaterialButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior(android.content.Context,android.util.AttributeSet)
com.esotericsoftware.kryo.serializers.DefaultSerializers$KryoSerializableSerializer: DefaultSerializers$KryoSerializableSerializer()
org.conscrypt.OpenSSLECPublicKey: java.lang.String getAlgorithm()
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setCircularRevealScrimColor(int)
com.google.android.material.button.MaterialButton: int getCornerRadius()
com.esotericsoftware.kryo.serializers.ObjectField$ObjectShortField: ObjectField$ObjectShortField(com.esotericsoftware.kryo.serializers.FieldSerializer)
com.esotericsoftware.kryo.pool.KryoPool: com.esotericsoftware.kryo.Kryo borrow()
org.conscrypt.OpenSSLX509Certificate: java.util.Collection alternativeNameArrayToList(java.lang.Object[][])
de.javakaffee.kryoserializers.guava.ImmutableMultimapSerializer: ImmutableMultimapSerializer()
org.conscrypt.Platform: void setCurveName(java.security.spec.ECParameterSpec,java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
org.conscrypt.OpenSSLEvpCipherAES: OpenSSLEvpCipherAES(org.conscrypt.OpenSSLCipher$Mode,org.conscrypt.OpenSSLCipher$Padding)
org.conscrypt.ConscryptEngineSocket$SSLOutputStream: ConscryptEngineSocket$SSLOutputStream(org.conscrypt.ConscryptEngineSocket)
org.conscrypt.Conscrypt: void setHostname(javax.net.ssl.SSLEngine,java.lang.String)
org.conscrypt.NativeSsl: byte[] getPeerCertificateOcspData()
com.esotericsoftware.kryo.io.Input: long readVarLong(boolean)
com.google.android.material.textfield.TextInputLayout: int getCounterMaxLength()
org.conscrypt.SSLParametersImpl: boolean isSniEnabledByDefault()
androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollExtent()
org.conscrypt.NativeCrypto: void EVP_DigestUpdate(org.conscrypt.NativeRef$EVP_MD_CTX,byte[],int,int)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: java.nio.channels.SocketChannel getChannel()
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object[])
org.conscrypt.TrustManagerImpl: TrustManagerImpl(java.security.KeyStore,org.conscrypt.CertPinManager,org.conscrypt.ConscryptCertStore,org.conscrypt.CertBlacklist)
org.conscrypt.NativeSslSession: NativeSslSession()
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.OpenSSLSocketImpl: void setSoWriteTimeout(int)
org.conscrypt.ConscryptEngine: int writePlaintextData(java.nio.ByteBuffer,int)
com.esotericsoftware.minlog.Log: void info(java.lang.String,java.lang.Throwable)
org.conscrypt.ConscryptEngineSocket: java.lang.String[] getSupportedProtocols()
de.javakaffee.kryoserializers.guava.ReverseListSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.util.List)
io.paperdb.KeyLocker: KeyLocker()
org.conscrypt.ConscryptSession: java.lang.String getApplicationProtocol()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
org.conscrypt.OpenSSLRSAPrivateCrtKey: java.math.BigInteger getPrimeQ()
de.javakaffee.kryoserializers.DateSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
de.javakaffee.kryoserializers.UUIDSerializer: java.util.UUID read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.OpenSSLECDHKeyAgreement: OpenSSLECDHKeyAgreement()
org.conscrypt.NativeCrypto: long PEM_read_bio_X509_CRL(long)
com.google.android.material.textfield.TextInputLayout: void setErrorIconVisible(boolean)
org.conscrypt.ByteArray: ByteArray(byte[])
de.javakaffee.kryoserializers.guava.ImmutableMapSerializer: void registerSerializers(com.esotericsoftware.kryo.Kryo)
org.conscrypt.OpenSSLX509CertificateFactory: java.security.cert.CRL engineGenerateCRL(java.io.InputStream)
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
org.conscrypt.PreKitKatPlatformOpenSSLSocketAdapterFactory: PreKitKatPlatformOpenSSLSocketAdapterFactory(org.conscrypt.OpenSSLSocketFactoryImpl)
org.conscrypt.OpenSSLEvpCipherARC4: int getCipherBlockSize()
org.conscrypt.NativeSslSession$Impl$1: java.lang.Object getValue(java.lang.String)
com.esotericsoftware.kryo.serializers.DefaultSerializers$DateSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.GCMParameters: byte[] engineGetEncoded()
org.conscrypt.ConscryptEngineSocket$1: void onHandshakeFinished()
org.conscrypt.NativeCrypto: java.lang.String[] get_X509_REVOKED_ext_oids(long,int)
com.esotericsoftware.kryo.util.UnsafeUtil: java.lang.reflect.Field[] sortFieldsByOffset(java.util.List)
org.conscrypt.Conscrypt: javax.net.ssl.SSLEngineResult unwrap(javax.net.ssl.SSLEngine,java.nio.ByteBuffer[],int,int,java.nio.ByteBuffer[],int,int)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
com.esotericsoftware.kryo.util.IdentityMap$Entries: com.esotericsoftware.kryo.util.IdentityMap$Entry next()
org.conscrypt.OpenSSLX509Certificate: java.security.PublicKey getPublicKey()
org.conscrypt.OpenSSLMac: void resetContext()
org.conscrypt.ExperimentalApi: java.lang.String value()
com.esotericsoftware.kryo.serializers.ObjectField$ObjectFloatField: void write(com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.NativeCrypto: int EVP_AEAD_CTX_open(long,byte[],int,byte[],int,byte[],byte[],int,int,byte[])
com.esotericsoftware.kryo.serializers.ObjectField: void copy(java.lang.Object,java.lang.Object)
org.conscrypt.AllocatedBuffer$1: AllocatedBuffer$1(java.nio.ByteBuffer)
org.conscrypt.AbstractConscryptSocket: void bind(java.net.SocketAddress)
com.google.android.material.internal.NavigationMenuItemView: void setNeedsEmptyIcon(boolean)
org.conscrypt.CryptoUpcalls: java.util.ArrayList getExternalProviders(java.lang.String)
com.esotericsoftware.kryo.Kryo: void reset()
org.conscrypt.ct.DigitallySigned: byte[] getSignature()
com.esotericsoftware.kryo.io.UnsafeMemoryInput: int readInt()
org.conscrypt.NativeCrypto: byte[] get_X509_CRL_sig_alg_parameter(long,org.conscrypt.OpenSSLX509CRL)
org.conscrypt.ConscryptEngineSocket: void setUseSessionTickets(boolean)
org.conscrypt.AbstractSessionContext: int getSessionCacheSize()
de.javakaffee.kryoserializers.SubListSerializers$ArrayListSubListSerializer: boolean canSerialize(java.lang.Class)
org.conscrypt.ConscryptEngine$2: org.conscrypt.ConscryptSession provideSession()
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer: java.lang.Object[] read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.ConscryptFileDescriptorSocket: java.lang.String getHandshakeApplicationProtocol()
com.esotericsoftware.kryo.Kryo: void writeObjectOrNull(com.esotericsoftware.kryo.io.Output,java.lang.Object,java.lang.Class)
com.esotericsoftware.kryo.util.IdentityMap: java.lang.Object removeStash(java.lang.Object)
com.esotericsoftware.kryo.serializers.ObjectField$ObjectBooleanField: void read(com.esotericsoftware.kryo.io.Input,java.lang.Object)
org.conscrypt.ExternalSession: byte[] getPeerSignedCertificateTimestamp()
org.conscrypt.ConscryptFileDescriptorSocket: void onSSLStateChange(int,int)
de.javakaffee.kryoserializers.dexx.SetSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.serializers.TimeSerializers$InstantSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.AbstractSessionContext: void onBeforeAddSession(org.conscrypt.NativeSslSession)
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmByteField: void write(com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.serializers.DefaultSerializers$CharsetSerializer: DefaultSerializers$CharsetSerializer()
com.esotericsoftware.kryo.io.Input: int optional(int)
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
org.conscrypt.NativeCrypto: void EVP_PKEY_CTX_set_rsa_mgf1_md(long,long)
org.conscrypt.ConscryptFileDescriptorSocket$1: ConscryptFileDescriptorSocket$1(org.conscrypt.ConscryptFileDescriptorSocket)
org.conscrypt.Java8EngineWrapper$1: java.lang.String selectApplicationProtocol(javax.net.ssl.SSLEngine,java.util.List)
com.esotericsoftware.reflectasm.FieldAccess: org.objectweb.asm.MethodVisitor insertThrowExceptionForFieldType(org.objectweb.asm.MethodVisitor,java.lang.String)
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
org.conscrypt.NativeRef: void finalize()
com.esotericsoftware.kryo.serializers.DefaultSerializers$CollectionsEmptyListSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.appcompat.widget.SearchView: void setImeOptions(int)
com.esotericsoftware.kryo.io.ByteBufferOutput: void writeBytes(byte[])
org.conscrypt.SSLParametersImpl: java.lang.String[] filterFromProtocols(java.lang.String[],java.lang.String)
org.conscrypt.DuckTypedPSKKeyManager: javax.crypto.SecretKey getKey(java.lang.String,java.lang.String,javax.net.ssl.SSLEngine)
com.esotericsoftware.kryo.serializers.DefaultSerializers$TreeMapSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.NativeCrypto: long EC_KEY_get1_group(org.conscrypt.NativeRef$EVP_PKEY)
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
com.esotericsoftware.kryo.io.KryoDataOutput: void writeFloat(float)
org.conscrypt.OpenSSLAeadCipherAES: java.security.AlgorithmParameters engineGetParameters()
org.conscrypt.OpenSSLX509CertPath: java.util.Iterator getEncodings()
org.conscrypt.ct.Serialization: int readNumber(java.io.InputStream,int)
com.esotericsoftware.kryo.serializers.TimeSerializers$ZoneOffsetSerializer: void write(com.esotericsoftware.kryo.io.Output,java.time.ZoneOffset)
org.conscrypt.OpenSSLMessageDigestJDK$SHA512: OpenSSLMessageDigestJDK$SHA512()
de.javakaffee.kryoserializers.guava.UnmodifiableNavigableSetSerializer: java.lang.Object copy(com.esotericsoftware.kryo.Kryo,java.lang.Object)
org.conscrypt.ConscryptFileDescriptorSocket: void clientCertificateRequested(byte[],int[],byte[][])
org.conscrypt.ct.SignedCertificateTimestamp: org.conscrypt.ct.DigitallySigned getSignature()
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection: UnmodifiableCollectionsSerializer$UnmodifiableCollection(java.lang.String,int,java.lang.Class,java.lang.reflect.Field,de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$1)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: java.net.SocketAddress getLocalSocketAddress()
org.conscrypt.NativeCrypto: long d2i_SSL_SESSION(byte[])
com.google.android.material.appbar.AppBarLayout: void setVisibility(int)
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
androidx.recyclerview.widget.RecyclerView: long getChildItemId(android.view.View)
com.google.android.material.chip.ChipGroup: void setChipSpacingResource(int)
com.esotericsoftware.kryo.util.ObjectMap$Entry: java.lang.String toString()
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$LongArraySerializer: DefaultArraySerializers$LongArraySerializer()
com.esotericsoftware.kryo.serializers.FieldSerializer$CachedFieldNameStrategy$1: FieldSerializer$CachedFieldNameStrategy$1()
com.esotericsoftware.kryo.util.IntArray: void addAll(com.esotericsoftware.kryo.util.IntArray)
org.conscrypt.ExternalSession: void removeValue(javax.net.ssl.SSLSession,java.lang.String)
de.javakaffee.kryoserializers.guava.ReverseListSerializer$RandomAccessReverseList: java.util.List read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.google.android.material.bottomappbar.BottomAppBar: int getFabAlignmentMode()
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.esotericsoftware.kryo.serializers.DefaultSerializers$CharSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Character)
com.esotericsoftware.kryo.util.UnsafeUtil: java.nio.ByteBuffer getDirectBufferAt(long,int)
org.conscrypt.ExternalSession: java.lang.String getCipherSuite()
com.google.android.material.chip.Chip: void setChipIcon(android.graphics.drawable.Drawable)
com.esotericsoftware.kryo.serializers.FieldSerializer: com.esotericsoftware.kryo.Kryo getKryo()
org.conscrypt.ConscryptEngineSocket: void startHandshake()
com.google.android.material.textfield.TextInputLayout: void setStartIconOnClickListener(android.view.View$OnClickListener)
org.conscrypt.NativeCrypto: boolean[] get_X509_subjectUID(long,org.conscrypt.OpenSSLX509Certificate)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatEditText createEditText(android.content.Context,android.util.AttributeSet)
org.conscrypt.ConscryptEngineSocket: void close()
com.esotericsoftware.minlog.Log: void warn(java.lang.String)
com.esotericsoftware.kryo.serializers.TimeSerializers$ZoneOffsetSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.google.android.material.chip.Chip: com.google.android.material.resources.TextAppearance getTextAppearance()
io.paperdb.Paper: io.paperdb.Book getBook(java.lang.String,java.lang.String)
com.esotericsoftware.kryo.serializers.TimeSerializers$ZoneIdSerializer: TimeSerializers$ZoneIdSerializer()
org.conscrypt.Conscrypt: java.security.Provider newProvider()
org.conscrypt.ConscryptEngineSocket: void setChannelIdPrivateKey(java.security.PrivateKey)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopStart()
org.conscrypt.AbstractSessionContext: void onBeforeRemoveSession(org.conscrypt.NativeSslSession)
com.google.android.material.chip.Chip: void setCloseIconTintResource(int)
com.esotericsoftware.kryo.io.ByteBufferOutput: void writeString(java.lang.CharSequence)
org.conscrypt.OpenSSLX509CertPath: byte[] getEncoded(org.conscrypt.OpenSSLX509CertPath$Encoding)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: void close()
androidx.appcompat.widget.AppCompatEditText: AppCompatEditText(android.content.Context,android.util.AttributeSet)
com.esotericsoftware.kryo.serializers.CollectionSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.ConscryptFileDescriptorSocket$SSLInputStream: int read()
com.esotericsoftware.kryo.KryoException: java.lang.String getMessage()
io.paperdb.DbStoragePlainFile: com.esotericsoftware.kryo.Kryo createKryoInstance(boolean)
com.esotericsoftware.kryo.io.KryoDataOutput: void writeLong(long)
com.esotericsoftware.kryo.serializers.TimeSerializers$ZoneIdSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.OpenSSLCipher: byte[] engineUpdate(byte[],int,int)
com.esotericsoftware.kryo.serializers.DefaultSerializers$ClassSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Class)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeStableInsets()
org.conscrypt.ConscryptEngineSocket: void setWantClientAuth(boolean)
org.conscrypt.OpenSSLMessageDigestJDK: void engineUpdate(byte[],int,int)
org.conscrypt.OpenSSLAeadCipherAES$GCM_SIV: OpenSSLAeadCipherAES$GCM_SIV()
org.conscrypt.AbstractConscryptEngine: java.lang.String[] getApplicationProtocols()
com.esotericsoftware.kryo.Kryo: java.lang.Object newInstance(java.lang.Class)
org.conscrypt.Platform: void getSSLParameters(javax.net.ssl.SSLParameters,org.conscrypt.SSLParametersImpl,org.conscrypt.AbstractConscryptSocket)
org.conscrypt.OpenSSLX509CertPath: java.util.List getCertificates()
org.conscrypt.Java8ExtendedSSLSession: java.util.List getRequestedServerNames()
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
org.conscrypt.OpenSSLKey: org.conscrypt.OpenSSLKey fromPrivateKeyForTLSStackOnly(java.security.PrivateKey,java.security.PublicKey)
org.conscrypt.TrustManagerImpl: byte[] getOcspDataFromSession(javax.net.ssl.SSLSession)
de.javakaffee.kryoserializers.BitSetSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.util.BitSet)
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection: de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection valueOf(java.lang.String)
androidx.appcompat.widget.SearchView: int getInputType()
org.conscrypt.KeyManagerFactoryImpl: void engineInit(javax.net.ssl.ManagerFactoryParameters)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZResource(int)
org.conscrypt.NativeSslSession: boolean isSingleUse()
com.google.android.material.appbar.HeaderBehavior: HeaderBehavior(android.content.Context,android.util.AttributeSet)
com.esotericsoftware.reflectasm.FieldAccess: void insertGetPrimitive(org.objectweb.asm.ClassWriter,java.lang.String,java.util.ArrayList,org.objectweb.asm.Type)
org.conscrypt.OpenSSLECPublicKey: java.security.spec.ECParameterSpec getParams()
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: void setSendBufferSize(int)
org.conscrypt.OpenSSLSocketImpl: void setTrafficClass(int)
org.conscrypt.NativeCrypto: void SSL_CTX_set_session_id_context(long,org.conscrypt.AbstractSessionContext,byte[])
com.esotericsoftware.kryo.io.UnsafeOutput: UnsafeOutput(byte[],int)
com.esotericsoftware.kryo.util.DefaultStreamFactory: com.esotericsoftware.kryo.io.Input getInput(byte[])
org.conscrypt.SSLUtils: java.lang.String getClientKeyTypeFromSignatureAlg(int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForItemId(long)
org.conscrypt.CryptoUpcalls: byte[] signDigestWithPrivateKey(java.security.PrivateKey,byte[],java.lang.String)
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeRegionField: void read(com.esotericsoftware.kryo.io.Input,java.lang.Object)
org.conscrypt.NativeSslSession$Impl$1: java.lang.String getCipherSuite()
org.conscrypt.NativeCrypto: long d2i_X509_bio(long)
org.conscrypt.NativeCrypto: int RSA_public_decrypt(int,byte[],byte[],org.conscrypt.NativeRef$EVP_PKEY,int)
org.conscrypt.NativeCrypto: void ENGINE_SSL_shutdown(long,org.conscrypt.NativeSsl,org.conscrypt.NativeCrypto$SSLHandshakeCallbacks)
org.conscrypt.FileClientSessionCache: java.util.logging.Logger access$000()
org.conscrypt.AbstractConscryptSocket$1: java.lang.String getHostname()
org.conscrypt.NativeCrypto: void asn1_write_oid(long,java.lang.String)
com.esotericsoftware.kryo.serializers.OptionalSerializers$OptionalDoubleSerializer: OptionalSerializers$OptionalDoubleSerializer(com.esotericsoftware.kryo.serializers.OptionalSerializers$1)
org.conscrypt.Conscrypt: boolean isAvailable()
com.google.android.material.textfield.TextInputLayout: void setStartIconCheckable(boolean)
com.esotericsoftware.kryo.io.KryoObjectOutput: KryoObjectOutput(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output)
androidx.recyclerview.widget.RecyclerView: void addFocusables(java.util.ArrayList,int,int)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ShortArraySerializer: java.lang.Object copy(com.esotericsoftware.kryo.Kryo,java.lang.Object)
org.conscrypt.OpenSSLAeadCipherAES$GCM: long getEVP_AEAD(int)
com.esotericsoftware.kryo.io.InputChunked: void readChunkSize()
androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()
de.javakaffee.kryoserializers.guava.ImmutableSortedSetSerializer: void registerSerializers(com.esotericsoftware.kryo.Kryo)
com.esotericsoftware.kryo.util.IntMap: java.lang.String toString()
org.conscrypt.KeyGeneratorImpl$HmacSHA224: KeyGeneratorImpl$HmacSHA224()
de.javakaffee.kryoserializers.guava.HashMultimapSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,com.google.common.collect.HashMultimap)
org.conscrypt.OpenSSLRSAKeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)
org.conscrypt.Conscrypt: int maxSealOverhead(javax.net.ssl.SSLEngine)
org.conscrypt.ExternalSession: java.lang.String getPeerHost()
com.google.android.material.button.MaterialButton: void setIconTint(android.content.res.ColorStateList)
org.conscrypt.OpenSSLCipherRSA: int engineGetKeySize(java.security.Key)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: java.lang.String toString()
org.conscrypt.NativeCrypto: java.lang.String cipherSuiteFromJava(java.lang.String)
com.esotericsoftware.reflectasm.FieldAccess: void setDouble(java.lang.Object,int,double)
androidx.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
com.esotericsoftware.kryo.ClassResolver: com.esotericsoftware.kryo.Registration writeClass(com.esotericsoftware.kryo.io.Output,java.lang.Class)
org.conscrypt.Conscrypt: void setChannelIdPrivateKey(javax.net.ssl.SSLSocket,java.security.PrivateKey)
org.conscrypt.NativeSsl: void setCertificate(java.lang.String)
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeCharField: void read(com.esotericsoftware.kryo.io.Input,java.lang.Object)
androidx.recyclerview.widget.RecyclerView: void considerReleasingGlowsOnScroll(int,int)
com.esotericsoftware.kryo.factories.SerializerFactory: com.esotericsoftware.kryo.Serializer makeSerializer(com.esotericsoftware.kryo.Kryo,java.lang.Class)
com.esotericsoftware.kryo.io.UnsafeOutput: int writeVarInt(int,boolean)
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
org.conscrypt.OpenSSLSignatureRawECDSA: java.lang.Object engineGetParameter(java.lang.String)
org.conscrypt.Java8EngineWrapper: void setHandshakeListener(org.conscrypt.HandshakeListener)
org.conscrypt.ActiveSession: java.security.cert.X509Certificate[] getPeerCertificates()
org.conscrypt.NativeSsl: byte[] getTlsChannelId()
org.conscrypt.ConscryptFileDescriptorSocket: java.lang.String[] getEnabledCipherSuites()
org.conscrypt.ExternalSession: java.util.List getStatusResponses()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
org.conscrypt.OpenSSLRSAPrivateKey: byte[] getEncoded()
org.conscrypt.SSLNullSession: java.security.cert.X509Certificate[] getPeerCertificates()
org.conscrypt.AbstractConscryptSocket$1: java.lang.String getHostnameOrIP()
org.conscrypt.NativeSslSession: java.lang.String getProtocol()
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: java.io.OutputStream getOutputStream()
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
androidx.appcompat.widget.AppCompatImageButton: AppCompatImageButton(android.content.Context,android.util.AttributeSet)
io.paperdb.Paper: io.paperdb.Book put(java.lang.String,java.lang.Object)
com.esotericsoftware.kryo.Serializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.serializers.TimeSerializers$OffsetTimeSerializer: java.time.OffsetTime read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.AbstractConscryptEngine: byte[] exportKeyingMaterial(java.lang.String,byte[],int)
org.conscrypt.IvParameters$ChaCha20: IvParameters$ChaCha20()
org.conscrypt.Java8ExtendedSSLSession: Java8ExtendedSSLSession(org.conscrypt.ExternalSession)
org.conscrypt.OAEPParameters: java.lang.String readHash(long)
org.conscrypt.OpenSSLX509CRL: org.conscrypt.OpenSSLX509CRL fromX509PemInputStream(java.io.InputStream)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$BooleanArraySerializer: boolean[] copy(com.esotericsoftware.kryo.Kryo,boolean[])
org.conscrypt.BaseOpenSSLSocketAdapterFactory: java.lang.String[] getDefaultCipherSuites()
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
com.esotericsoftware.kryo.serializers.DefaultSerializers$TreeSetSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.util.ObjectMap: int hash4(int)
org.conscrypt.OpenSSLEvpCipherDESEDE: OpenSSLEvpCipherDESEDE(org.conscrypt.OpenSSLCipher$Mode,org.conscrypt.OpenSSLCipher$Padding)
org.conscrypt.OpenSSLSocketFactoryImpl: void setUseEngineSocket(boolean)
com.esotericsoftware.kryo.util.IntMap: boolean containsKey(int)
org.conscrypt.ConscryptEngine: byte[] exportKeyingMaterial(java.lang.String,byte[],int)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.google.android.material.button.MaterialButton: int getIconGravity()
org.conscrypt.AbstractConscryptSocket: void setOOBInline(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(android.content.res.ColorStateList)
androidx.recyclerview.widget.RecyclerView: void animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean)
com.esotericsoftware.kryo.io.ByteBufferInput: int read(byte[],int,int)
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
com.esotericsoftware.kryo.serializers.FieldSerializerConfig: boolean isUseAsm()
org.conscrypt.OpenSSLSignatureRawRSA: boolean engineVerify(byte[])
com.esotericsoftware.kryo.util.ObjectMap$Keys: boolean hasNext()
com.google.android.material.textfield.TextInputLayout: int getErrorCurrentTextColors()
org.conscrypt.AbstractConscryptSocket: void setTrafficClass(int)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatImageButton createImageButton(android.content.Context,android.util.AttributeSet)
org.conscrypt.OpenSSLAeadCipherChaCha20: void checkSupportedKeySize(int)
com.esotericsoftware.kryo.io.UnsafeMemoryOutput: void writeLongs(long[],boolean)
com.esotericsoftware.kryo.io.UnsafeMemoryInput: double[] readDoubles(int)
com.esotericsoftware.kryo.io.Output: void writeLongs(long[])
org.conscrypt.ct.SerializationException: SerializationException(java.lang.Throwable)
org.conscrypt.ct.DigitallySigned$SignatureAlgorithm: org.conscrypt.ct.DigitallySigned$SignatureAlgorithm valueOf(java.lang.String)
org.conscrypt.ct.SerializationException: SerializationException(java.lang.String,java.lang.Throwable)
com.esotericsoftware.kryo.io.UnsafeMemoryInput: byte readByte()
com.esotericsoftware.kryo.serializers.TimeSerializers$ZonedDateTimeSerializer: java.time.ZonedDateTime read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.NativeCrypto: int ENGINE_SSL_do_handshake(long,org.conscrypt.NativeSsl,org.conscrypt.NativeCrypto$SSLHandshakeCallbacks)
org.conscrypt.OpenSSLX509CRL: java.security.cert.X509CRLEntry getRevokedCertificate(java.security.cert.X509Certificate)
org.conscrypt.OpenSSLX509Certificate: void verifyOpenSSL(org.conscrypt.OpenSSLKey)
org.conscrypt.ConscryptEngineSocket$SSLInputStream: int readFromSocket()
com.esotericsoftware.kryo.io.ByteBufferInputStream: ByteBufferInputStream(int)
org.conscrypt.OpenSSLCipherRSA: void engineInit(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom)
androidx.recyclerview.widget.RecyclerView: android.os.Parcelable onSaveInstanceState()
org.conscrypt.NativeCrypto: long SSL_new(long,org.conscrypt.AbstractSessionContext)
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
org.conscrypt.OpenSSLX509CRL: void finalize()
com.esotericsoftware.kryo.util.IntMap: boolean containsValue(java.lang.Object,boolean)
com.google.android.material.textfield.TextInputLayout: void setEndIconMode(int)
com.esotericsoftware.kryo.io.ByteBufferInput: int readInt_slow(boolean)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior(android.content.Context,android.util.AttributeSet)
com.esotericsoftware.kryo.io.Input: int readUtf8Length_slow(int)
com.esotericsoftware.kryo.Serializer: Serializer(boolean)
com.esotericsoftware.kryo.io.FastInput: long readLong(boolean)
androidx.recyclerview.widget.RecyclerView: void scrollToPosition(int)
org.conscrypt.NativeCrypto: java.lang.String SSL_SESSION_cipher(long)
com.esotericsoftware.kryo.util.IntArray: int get(int)
org.conscrypt.Conscrypt$ProviderBuilder: java.security.Provider build()
org.conscrypt.NativeSslSession: org.conscrypt.NativeSslSession newInstance(org.conscrypt.NativeRef$SSL_SESSION,org.conscrypt.ConscryptSession)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemWindowInsets(androidx.core.graphics.Insets)
org.conscrypt.NativeCrypto: long X509_CRL_get_ext(long,org.conscrypt.OpenSSLX509CRL,java.lang.String)
org.conscrypt.ByteArray: boolean equals(java.lang.Object)
org.conscrypt.OpenSSLX509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedFling(float,float,boolean)
net.sourceforge.jtds.util.SSPIJNIClient: void initialize()
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
org.conscrypt.ct.DigitallySigned$SignatureAlgorithm: org.conscrypt.ct.DigitallySigned$SignatureAlgorithm[] values()
org.conscrypt.NativeSslSession$Impl: java.lang.String getCipherSuite()
org.conscrypt.Java8EngineWrapper: void setChannelIdPrivateKey(java.security.PrivateKey)
org.conscrypt.Conscrypt: void setBufferAllocator(javax.net.ssl.SSLEngine,org.conscrypt.BufferAllocator)
org.conscrypt.ConscryptEngineSocket$SSLInputStream: void release()
org.conscrypt.AddressUtils: AddressUtils()
com.esotericsoftware.kryo.pool.SoftReferenceQueue: boolean add(com.esotericsoftware.kryo.Kryo)
com.google.android.material.card.MaterialCardView: void setUseCompatPadding(boolean)
de.javakaffee.kryoserializers.guava.ImmutableSortedSetSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,com.google.common.collect.ImmutableSortedSet)
org.conscrypt.OpenSSLRSAPrivateKey: OpenSSLRSAPrivateKey(org.conscrypt.OpenSSLKey)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)
org.conscrypt.OpenSSLKey: org.conscrypt.OpenSSLKey fromPrivateKey(java.security.PrivateKey)
com.esotericsoftware.kryo.serializers.BeanSerializer: java.lang.Object copy(com.esotericsoftware.kryo.Kryo,java.lang.Object)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$CharArraySerializer: java.lang.Object copy(com.esotericsoftware.kryo.Kryo,java.lang.Object)
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHint()
com.esotericsoftware.kryo.io.ByteBufferInput: java.nio.ByteBuffer getByteBuffer()
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: void close()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
com.esotericsoftware.kryo.serializers.MapSerializer$BindMap: java.lang.Class keyClass()
org.conscrypt.NativeCrypto: long SSL_get_mode(long,org.conscrypt.NativeSsl)
com.esotericsoftware.kryo.io.Input: int position()
com.google.android.material.appbar.AppBarLayout: int getUpNestedPreScrollRange()
de.javakaffee.kryoserializers.guava.ReverseListSerializer: de.javakaffee.kryoserializers.guava.ReverseListSerializer forRandomAccessReverseList()
org.conscrypt.AbstractConscryptEngine: void setUseSessionTickets(boolean)
org.conscrypt.NativeSsl: void doHandshake(java.io.FileDescriptor,int)
com.esotericsoftware.kryo.util.IntMap: java.lang.Object remove(int)
org.conscrypt.OpenSSLRSAPrivateCrtKey: java.math.BigInteger getPrimeExponentP()
com.esotericsoftware.kryo.util.IntArray: IntArray(int)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: java.lang.String[] getEnabledProtocols()
androidx.recyclerview.widget.RecyclerView: int getDeepestFocusedViewWithId(android.view.View)
com.esotericsoftware.kryo.serializers.FieldSerializerConfig: void setSerializeTransient(boolean)
org.conscrypt.OpenSSLX509CertificateFactory$1: java.util.List fromPkcs7PemInputStream(java.io.InputStream)
com.google.android.material.button.MaterialButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.RecyclerView: boolean isLayoutFrozen()
com.esotericsoftware.kryo.util.IntMap: java.lang.Object get(int)
org.conscrypt.NativeCrypto: long SSL_get_options(long,org.conscrypt.NativeSsl)
com.esotericsoftware.kryo.serializers.TimeSerializers$PeriodSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer: SynchronizedCollectionsSerializer()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
org.conscrypt.SSLNullSession: java.util.List getStatusResponses()
com.esotericsoftware.kryo.serializers.FieldSerializerConfig: void setFieldsAsAccessible(boolean)
org.conscrypt.NativeCrypto: void EC_POINT_clear_free(long)
com.google.android.material.chip.Chip: void setCloseIconEnabled(boolean)
org.conscrypt.PSKKeyManager: java.lang.String chooseClientKeyIdentity(java.lang.String,java.net.Socket)
org.conscrypt.NativeSsl: boolean isClient()
org.conscrypt.ct.DigitallySigned: org.conscrypt.ct.DigitallySigned decode(java.io.InputStream)
androidx.cardview.widget.CardView: void setCardElevation(float)
org.conscrypt.TrustManagerImpl: java.util.Set trustAnchors(java.security.cert.X509Certificate[])
com.esotericsoftware.kryo.io.KryoDataInput: int readUnsignedByte()
org.conscrypt.NativeCrypto: long X509_REVOKED_dup(long)
org.conscrypt.SSLParametersImpl$AliasChooser: java.lang.String chooseClientAlias(javax.net.ssl.X509KeyManager,javax.security.auth.x500.X500Principal[],java.lang.String[])
org.conscrypt.AbstractConscryptEngine: java.lang.String getHostname()
androidx.appcompat.widget.ScrollingTabContainerView: void setContentHeight(int)
org.conscrypt.OpenSSLSocketImpl: javax.net.ssl.SSLSession getHandshakeSession()
com.esotericsoftware.kryo.serializers.DefaultSerializers$LongSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Long)
com.esotericsoftware.kryo.serializers.ExternalizableSerializer: com.esotericsoftware.kryo.serializers.JavaSerializer getCachedSerializer(java.lang.Class)
org.conscrypt.AbstractSessionContext: void setSessionTimeout(int)
com.google.android.material.button.MaterialButton: void setStrokeWidthResource(int)
de.javakaffee.kryoserializers.UUIDSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.google.android.material.internal.NavigationMenuItemView: void setIconSize(int)
com.esotericsoftware.kryo.pool.KryoPool$Builder: com.esotericsoftware.kryo.pool.KryoPool build()
org.conscrypt.NativeRef$EVP_MD_CTX: void doFree(long)
androidx.recyclerview.widget.RecyclerView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
de.javakaffee.kryoserializers.guava.ImmutableSetSerializer$SomeEnum: de.javakaffee.kryoserializers.guava.ImmutableSetSerializer$SomeEnum valueOf(java.lang.String)
org.conscrypt.io.IoUtils: void closeQuietly(java.net.Socket)
org.conscrypt.TrustedCertificateIndex: TrustedCertificateIndex()
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: java.lang.String[] getEnabledCipherSuites()
com.google.android.material.internal.NavigationMenuItemView: void setIconPadding(int)
com.google.android.material.appbar.AppBarLayout: int getPendingAction()
com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.StreamFactory getStreamFactory()
com.esotericsoftware.kryo.io.UnsafeMemoryOutput: void writeBoolean(boolean)
com.esotericsoftware.kryo.serializers.DefaultSerializers$CharSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.FileClientSessionCache: void reset()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()
org.conscrypt.ConscryptEngineSocket$SSLOutputStream: void flushInternal()
org.conscrypt.ConscryptEngineSocket$SSLInputStream: void init()
androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()
org.conscrypt.ct.CertificateEntry: org.conscrypt.ct.CertificateEntry createForX509Certificate(byte[])
org.conscrypt.ConscryptServerSocket: ConscryptServerSocket(org.conscrypt.SSLParametersImpl)
com.esotericsoftware.kryo.serializers.DeflateSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.ConscryptEngineSocket$2: void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String,java.net.Socket)
com.esotericsoftware.kryo.serializers.DefaultSerializers$StringSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.util.IdentityMap$Entries: void remove()
com.google.android.material.bottomappbar.BottomAppBar: android.content.res.ColorStateList getBackgroundTint()
org.conscrypt.OpenSSLEvpCipherAES$AES_128: OpenSSLEvpCipherAES$AES_128(org.conscrypt.OpenSSLCipher$Mode,org.conscrypt.OpenSSLCipher$Padding)
com.esotericsoftware.reflectasm.FieldAccess: java.lang.String[] getFieldNames()
org.conscrypt.OpenSSLCipher$Padding: OpenSSLCipher$Padding(java.lang.String,int)
org.conscrypt.OpenSSLRSAPrivateCrtKey: java.lang.String toString()
de.javakaffee.kryoserializers.dexx.MapSerializer: void registerSerializers(com.esotericsoftware.kryo.Kryo)
com.esotericsoftware.kryo.serializers.DefaultSerializers$VoidSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
androidx.recyclerview.widget.RecyclerView: int getBaseline()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(int)
com.esotericsoftware.kryo.util.ObjectMap$Entries: void reset()
org.conscrypt.OpenSSLX509Certificate: long getContext()
de.javakaffee.kryoserializers.CollectionsSingletonMapSerializer: java.util.Map read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.NativeCrypto: int ENGINE_SSL_read_BIO_heap(long,org.conscrypt.NativeSsl,long,byte[],int,int,org.conscrypt.NativeCrypto$SSLHandshakeCallbacks)
org.conscrypt.Platform: void getSSLParameters(javax.net.ssl.SSLParameters,org.conscrypt.SSLParametersImpl,org.conscrypt.ConscryptEngine)
com.esotericsoftware.kryo.pool.SoftReferenceQueue: boolean removeAll(java.util.Collection)
org.conscrypt.SessionSnapshot: java.security.cert.Certificate[] getLocalCertificates()
org.conscrypt.OpenSSLRSAPublicKey: void ensureReadParams()
org.conscrypt.Preconditions: java.lang.String badPositionIndex(int,int,java.lang.String)
com.esotericsoftware.kryo.io.Output: void writeFloat(float)
com.esotericsoftware.kryo.io.KryoDataOutput: void write(int)
org.conscrypt.NativeCrypto: java.lang.String[] getSupportedCipherSuites()
org.conscrypt.NativeCrypto: void RAND_bytes(byte[])
org.conscrypt.OpenSSLEvpCipher: int getOutputSizeForUpdate(int)
org.conscrypt.SSLUtils: java.lang.String getClientKeyType(byte)
org.conscrypt.ConscryptServerSocket: void setEnabledProtocols(java.lang.String[])
org.conscrypt.DuckTypedPSKKeyManager: java.lang.String chooseClientKeyIdentity(java.lang.String,java.net.Socket)
com.esotericsoftware.kryo.util.IntMap$Values: java.util.ArrayList toArray()
de.javakaffee.kryoserializers.jodatime.JodaIntervalSerializer: org.joda.time.Interval read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.SSLParametersImpl: javax.net.ssl.X509TrustManager getX509TrustManager()
com.esotericsoftware.reflectasm.AccessClassLoader: java.lang.ClassLoader getParentClassLoader(java.lang.Class)
org.conscrypt.AbstractConscryptSocket: boolean isBound()
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: int getReceiveBufferSize()
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
com.google.android.material.button.MaterialButton: void setBackgroundTintList(android.content.res.ColorStateList)
com.esotericsoftware.kryo.util.ObjectMap: ObjectMap(int,float)
com.esotericsoftware.kryo.util.ObjectMap$Entry: ObjectMap$Entry()
org.conscrypt.OpenSSLSignature: void resetContext()
org.conscrypt.SSLUtils: int getEncryptedPacketLength(java.nio.ByteBuffer[],int)
de.javakaffee.kryoserializers.jodatime.JodaLocalDateTimeSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,org.joda.time.LocalDateTime)
com.esotericsoftware.kryo.io.UnsafeInput: UnsafeInput(java.io.InputStream)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatHoveredFocusedTranslationZ()
org.conscrypt.ConscryptServerSocket: java.lang.String[] getEnabledCipherSuites()
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
com.esotericsoftware.kryo.serializers.FieldSerializer: void setFieldsCanBeNull(boolean)
com.esotericsoftware.kryo.serializers.FieldSerializer$CachedFieldNameStrategy$2: FieldSerializer$CachedFieldNameStrategy$2()
org.conscrypt.Platform: void closeGuardWarnIfOpen(java.lang.Object)
org.conscrypt.SSLNullSession: java.lang.String[] getValueNames()
org.conscrypt.OpenSSLBIOSink: int available()
org.conscrypt.DuckTypedPSKKeyManager: java.lang.String chooseServerKeyIdentityHint(java.net.Socket)
com.esotericsoftware.kryo.pool.SoftReferenceQueue: java.lang.Object[] toArray(java.lang.Object[])
androidx.recyclerview.widget.RecyclerView: void dispatchOnScrollStateChanged(int)
org.conscrypt.NativeSsl: long access$100(org.conscrypt.NativeSsl)
com.esotericsoftware.kryo.io.ByteBufferOutput: java.nio.ByteBuffer getByteBuffer()
de.javakaffee.kryoserializers.guava.ImmutableListSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.OpenSSLEvpCipherARC4: OpenSSLEvpCipherARC4()
org.conscrypt.ConscryptEngineSocket: void setApplicationProtocolSelector(org.conscrypt.ApplicationProtocolSelectorAdapter)
org.conscrypt.TrustedCertificateIndex: void index(java.security.cert.TrustAnchor)
org.conscrypt.Java8FileDescriptorSocket: java.util.function.BiFunction getHandshakeApplicationProtocolSelector()
org.conscrypt.Conscrypt: boolean isConscrypt(java.security.Provider)
org.conscrypt.ApplicationProtocolSelector: ApplicationProtocolSelector()
com.esotericsoftware.kryo.util.IdentityMap: java.lang.Object put(java.lang.Object,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: TextInputLayout(android.content.Context,android.util.AttributeSet)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: void setSoLinger(boolean,int)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$StringArraySerializer: java.lang.String[] read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.io.ByteBufferOutput: void writeLongs(long[])
com.esotericsoftware.reflectasm.FieldAccess: void set(java.lang.Object,int,java.lang.Object)
com.esotericsoftware.minlog.Log: void INFO()
org.conscrypt.NativeCrypto: java.lang.String get_X509_CRL_sig_alg_oid(long,org.conscrypt.OpenSSLX509CRL)
com.esotericsoftware.kryo.util.IdentityObjectIntMap: int getStash(java.lang.Object,int)
org.conscrypt.OpenSSLCipherRSA: byte[] engineGetIV()
de.javakaffee.kryoserializers.EnumSetSerializer: java.util.EnumSet copy(com.esotericsoftware.kryo.Kryo,java.util.EnumSet)
de.javakaffee.kryoserializers.guava.ImmutableListSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,com.google.common.collect.ImmutableList)
com.esotericsoftware.kryo.ReferenceResolver: int nextReadId(java.lang.Class)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getShowMotionSpec()
org.conscrypt.AbstractConscryptSocket: java.lang.String getHostnameOrIP()
io.paperdb.PaperTable: PaperTable(java.lang.Object)
de.javakaffee.kryoserializers.SubListSerializers$ArrayListSubListSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.util.List)
com.esotericsoftware.kryo.serializers.MapSerializer$BindMap: java.lang.Class keySerializer()
org.conscrypt.OpenSSLRSAPrivateKey: void readParams(byte[][])
com.google.android.material.chip.Chip: void setChipEndPaddingResource(int)
com.google.android.material.card.MaterialCardView: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
org.conscrypt.NativeCrypto$SSLHandshakeCallbacks: void clientCertificateRequested(byte[],int[],byte[][])
io.paperdb.DbStoragePlainFile: long lastModified(java.lang.String)
org.conscrypt.NativeRef$EVP_PKEY: void doFree(long)
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
org.conscrypt.SSLUtils: int calculateOutNetBufSize(int)
org.conscrypt.OpenSSLCipher$Padding: org.conscrypt.OpenSSLCipher$Padding valueOf(java.lang.String)
org.conscrypt.OpenSSLSocketFactoryImpl: java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int)
com.esotericsoftware.kryo.util.IdentityMap$Entry: IdentityMap$Entry()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20(androidx.core.view.WindowInsetsCompat)
com.google.android.material.button.MaterialButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
org.conscrypt.OpenSSLSignature: OpenSSLSignature(long,org.conscrypt.OpenSSLSignature$EngineType,org.conscrypt.OpenSSLSignature$1)
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
com.google.android.material.chip.Chip: void setRippleColorResource(int)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumHeight()
com.esotericsoftware.kryo.Kryo: boolean getAsmEnabled()
org.conscrypt.NativeCrypto: long EVP_PKEY_decrypt_init(org.conscrypt.NativeRef$EVP_PKEY)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer: UnmodifiableCollectionsSerializer()
com.esotericsoftware.kryo.util.FastestStreamFactory: com.esotericsoftware.kryo.io.Output getOutput()
org.conscrypt.KeyManagerFactoryImpl: KeyManagerFactoryImpl()
org.conscrypt.OpenSSLBIOSink: long skip(long)
org.conscrypt.OpenSSLSignature$RSAPKCS1Padding: OpenSSLSignature$RSAPKCS1Padding(long)
com.esotericsoftware.kryo.util.IntArray: void addAll(int[])
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
org.conscrypt.NativeCrypto: void SSL_enable_ocsp_stapling(long,org.conscrypt.NativeSsl)
androidx.recyclerview.widget.RecyclerView: void access$000(androidx.recyclerview.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams)
org.conscrypt.NativeCrypto: long EC_GROUP_new_by_curve_name(java.lang.String)
org.conscrypt.NativeCrypto: void SSL_set_accept_state(long,org.conscrypt.NativeSsl)
com.esotericsoftware.kryo.io.Input: char[] readChars(int)
org.conscrypt.OpenSSLX509Certificate: org.conscrypt.OpenSSLX509Certificate fromX509Der(byte[])
org.conscrypt.ConscryptEngineSocket: byte[] exportKeyingMaterial(java.lang.String,byte[],int)
com.esotericsoftware.kryo.Registration: java.lang.Class getType()
org.conscrypt.OpenSSLRSAPublicKey: int hashCode()
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColor(int)
de.javakaffee.kryoserializers.EnumMapSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.OpenSSLAeadCipherAES$GCM_SIV$AES_128: OpenSSLAeadCipherAES$GCM_SIV$AES_128()
com.esotericsoftware.kryo.serializers.DefaultSerializers$TimeZoneSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
de.javakaffee.kryoserializers.jodatime.IdentifiableChronology: java.lang.String getIdByChronology(java.lang.Class)
org.conscrypt.PSKKeyManager: java.lang.String chooseClientKeyIdentity(java.lang.String,javax.net.ssl.SSLEngine)
org.conscrypt.Conscrypt: org.conscrypt.TrustManagerImpl toConscrypt(javax.net.ssl.TrustManager)
org.conscrypt.OpenSSLBIOSink: int position()
org.conscrypt.OpenSSLEvpCipherAES: int getCipherBlockSize()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
com.esotericsoftware.kryo.Kryo: void setRegistrationRequired(boolean)
com.esotericsoftware.kryo.util.ObjectMap: boolean containsKey(java.lang.Object)
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
com.esotericsoftware.kryo.serializers.MapSerializer: void setValueClass(java.lang.Class,com.esotericsoftware.kryo.Serializer)
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
org.conscrypt.OpenSSLX509CRL: java.util.Date getThisUpdate()
org.conscrypt.OpenSSLSocketImpl: boolean isConnected()
org.conscrypt.OpenSSLECPublicKey: org.conscrypt.OpenSSLKey getInstance(java.security.interfaces.ECPublicKey)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleEnabled(boolean)
org.conscrypt.CertificatePriorityComparator: int compareSignatureAlgorithm(java.security.cert.X509Certificate,java.security.cert.X509Certificate)
org.conscrypt.OpenSSLECPublicKey: java.lang.String toString()
com.esotericsoftware.kryo.util.IdentityMap$Values: java.lang.Object next()
org.conscrypt.Conscrypt: int maxEncryptedPacketLength()
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: int getPort()
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$DoubleArraySerializer: double[] copy(com.esotericsoftware.kryo.Kryo,double[])
org.conscrypt.OpenSSLX509Certificate: java.util.Date toDate(long)
com.esotericsoftware.kryo.serializers.DefaultSerializers$EnumSetSerializer: java.util.EnumSet copy(com.esotericsoftware.kryo.Kryo,java.util.EnumSet)
com.esotericsoftware.kryo.serializers.DefaultSerializers$TreeSetSerializer: java.util.TreeSet createTreeSet(java.lang.Class,java.util.Comparator)
org.conscrypt.NativeSslSession: byte[] toBytes()
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
org.conscrypt.ConscryptEngine: java.lang.String[] getSupportedCipherSuites()
com.esotericsoftware.kryo.util.IntMap: IntMap(int)
org.conscrypt.PeerInfoProvider$2: PeerInfoProvider$2(java.lang.String,int)
org.conscrypt.AbstractConscryptSocket: void setSoLinger(boolean,int)
com.esotericsoftware.kryo.util.IntMap: com.esotericsoftware.kryo.util.IntMap$Values values()
com.esotericsoftware.kryo.serializers.ObjectField$ObjectLongField: ObjectField$ObjectLongField(com.esotericsoftware.kryo.serializers.FieldSerializer)
org.conscrypt.Java7ExtendedSSLSession: java.util.List getStatusResponses()
org.conscrypt.ArrayUtils: ArrayUtils()
com.esotericsoftware.kryo.Kryo: java.lang.Object copy(java.lang.Object)
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
org.conscrypt.ConscryptEngine: int readEncryptedDataDirect(java.nio.ByteBuffer,int,int)
com.esotericsoftware.kryo.io.ByteBufferInput: int readUtf8Length_slow(int)
org.conscrypt.OpenSSLCipherRSA: int engineGetOutputSize(int)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: java.lang.String[] getEnabledCipherSuites()
org.conscrypt.PreKitKatPlatformOpenSSLSocketAdapterFactory: java.net.Socket wrap(org.conscrypt.OpenSSLSocketImpl)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$BooleanArraySerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.util.IntArray: void swap(int,int)
org.conscrypt.OpenSSLX509CertificateFactory$2: java.util.List fromPkcs7PemInputStream(java.io.InputStream)
org.conscrypt.OpenSSLSignature$SHA384ECDSA: OpenSSLSignature$SHA384ECDSA()
org.conscrypt.OpenSSLRSAPublicKey: java.lang.String toString()
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmShortField: AsmCacheFields$AsmShortField()
com.google.android.material.appbar.HeaderScrollingViewBehavior: HeaderScrollingViewBehavior()
org.conscrypt.NativeSsl: void setTlsChannelId(org.conscrypt.OpenSSLKey)
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior()
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
com.esotericsoftware.kryo.io.Input: int[] readInts(int)
org.conscrypt.SSLUtils: java.lang.String[] concat(java.lang.String[][])
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer: java.lang.Object[] copy(com.esotericsoftware.kryo.Kryo,java.lang.Object[])
org.conscrypt.DuckTypedPSKKeyManager: org.conscrypt.DuckTypedPSKKeyManager getInstance(java.lang.Object)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ShortArraySerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.ApplicationProtocolSelector: java.lang.String selectApplicationProtocol(javax.net.ssl.SSLSocket,java.util.List)
com.esotericsoftware.kryo.serializers.DefaultSerializers$BooleanSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Boolean)
org.conscrypt.ConscryptEngineSocket$SSLInputStream: boolean isHandshakeFinished()
com.esotericsoftware.kryo.serializers.OptionalSerializers$OptionalDoubleSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.util.OptionalDouble)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: int getSendBufferSize()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
io.paperdb.DbStoragePlainFile: void setLogLevel(int)
org.conscrypt.ExternalSession: long getLastAccessedTime()
com.esotericsoftware.kryo.serializers.FieldSerializerGenericsUtil: FieldSerializerGenericsUtil(com.esotericsoftware.kryo.serializers.FieldSerializer)
org.conscrypt.OpenSSLBIOInputStream: void release()
io.paperdb.Book: void destroy()
com.google.android.material.button.MaterialButton: void setIcon(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)
org.conscrypt.OpenSSLSignature$SHA256RSAPSS: OpenSSLSignature$SHA256RSAPSS()
de.javakaffee.kryoserializers.guava.ImmutableSetSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.io.ByteBufferOutput: void setBuffer(java.nio.ByteBuffer)
androidx.recyclerview.widget.RecyclerView: boolean findInterceptingOnItemTouchListener(android.view.MotionEvent)
io.paperdb.Paper: void setLogLevel(int)
org.conscrypt.Platform: org.conscrypt.ConscryptFileDescriptorSocket createFileDescriptorSocket(java.net.InetAddress,int,org.conscrypt.SSLParametersImpl)
org.conscrypt.SessionSnapshot: java.lang.Object getValue(java.lang.String)
com.google.android.material.chip.Chip: void setCloseIconResource(int)
org.conscrypt.NativeCrypto: int EVP_MD_size(long)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: void removeHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener)
com.esotericsoftware.kryo.serializers.Generics: Generics(java.util.Map)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: void setChannelIdEnabled(boolean)
org.conscrypt.SSLUtils: java.security.cert.X509Certificate[] decodeX509CertificateChain(byte[][])
com.esotericsoftware.kryo.serializers.DefaultSerializers$StringBufferSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.Kryo: java.lang.Object readObject(com.esotericsoftware.kryo.io.Input,java.lang.Class,com.esotericsoftware.kryo.Serializer)
org.conscrypt.ConscryptEngine: void serverCertificateRequested()
org.conscrypt.TrustManagerImpl$TrustAnchorComparator: int compare(java.security.cert.TrustAnchor,java.security.cert.TrustAnchor)
org.conscrypt.TrustManagerImpl: void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String,javax.net.ssl.SSLEngine)
org.conscrypt.SSLServerSessionCache: void putSessionData(javax.net.ssl.SSLSession,byte[])
com.esotericsoftware.kryo.serializers.FieldSerializerGenericsUtil: com.esotericsoftware.kryo.serializers.Generics buildGenericsScope(java.lang.Class,java.lang.Class[])
androidx.recyclerview.widget.RecyclerView: void dispatchPendingImportantForAccessibilityChanges()
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
org.conscrypt.Conscrypt$ProviderBuilder: org.conscrypt.Conscrypt$ProviderBuilder defaultTlsProtocol(java.lang.String)
org.conscrypt.OpenSSLSocketImpl: void setSoLinger(boolean,int)
org.conscrypt.OpenSSLX509CertificateFactory$2: org.conscrypt.OpenSSLX509CRL fromX509PemInputStream(java.io.InputStream)
com.esotericsoftware.kryo.io.UnsafeMemoryOutput: void writeShort(int)
org.conscrypt.OpenSSLCipherRSA: void doCryptoInit(java.security.spec.AlgorithmParameterSpec)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ByteArraySerializer: byte[] copy(com.esotericsoftware.kryo.Kryo,byte[])
com.esotericsoftware.kryo.util.IdentityObjectIntMap: void shrink(int)
androidx.recyclerview.widget.RecyclerView: void onDraw(android.graphics.Canvas)
org.conscrypt.ConscryptEngine: javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer)
de.javakaffee.kryoserializers.guava.TreeMultimapSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setHelperText(java.lang.CharSequence)
de.javakaffee.kryoserializers.FieldAnnotationAwareSerializer$Factory: FieldAnnotationAwareSerializer$Factory(java.util.Collection,boolean)
com.esotericsoftware.kryo.Registration: com.esotericsoftware.kryo.Serializer getSerializer()
org.conscrypt.OpenSSLECGroupContext: org.conscrypt.OpenSSLECGroupContext getCurveByName(java.lang.String)
com.esotericsoftware.kryo.util.DefaultStreamFactory: com.esotericsoftware.kryo.io.Input getInput(java.io.InputStream)
org.conscrypt.OpenSSLContextImpl: OpenSSLContextImpl(java.lang.String[],boolean)
com.esotericsoftware.kryo.serializers.FieldSerializer: void setOptimizedGenerics(boolean)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
androidx.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
org.conscrypt.AllocatedBuffer: AllocatedBuffer()
com.esotericsoftware.kryo.pool.SoftReferenceQueue: com.esotericsoftware.kryo.Kryo poll()
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmCachedField: AsmCacheFields$AsmCachedField()
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
com.esotericsoftware.kryo.io.UnsafeOutput: int writeVarLong(long,boolean)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: boolean getKeepAlive()
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.esotericsoftware.kryo.io.Input: void skip(int)
org.conscrypt.ct.CTLogInfo: int hashCode()
com.google.android.material.appbar.AppBarLayout: void setExpanded(boolean)
org.conscrypt.OpenSSLSocketFactoryImpl: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)
com.google.android.material.chip.ChipGroup: void setSingleLine(boolean)
org.conscrypt.NativeCrypto: NativeCrypto()
org.conscrypt.ConscryptEngine: org.conscrypt.NativeSsl newSsl(org.conscrypt.SSLParametersImpl,org.conscrypt.ConscryptEngine)
org.conscrypt.Platform: void setSocketWriteTimeout(java.net.Socket,long)
org.conscrypt.AbstractConscryptSocket: void setReceiveBufferSize(int)
org.conscrypt.FileClientSessionCache$Impl: void indexFiles()
org.conscrypt.SSLNullSession: java.security.Principal getPeerPrincipal()
org.conscrypt.NativeSslSession: void checkRemaining(java.nio.ByteBuffer,int)
com.esotericsoftware.kryo.serializers.DefaultSerializers$TimeZoneSerializer: DefaultSerializers$TimeZoneSerializer()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList)
de.javakaffee.kryoserializers.ArraysAsListSerializer: ArraysAsListSerializer()
androidx.cardview.widget.CardView: float getMaxCardElevation()
com.esotericsoftware.kryo.factories.PseudoSerializerFactory: com.esotericsoftware.kryo.Serializer makeSerializer(com.esotericsoftware.kryo.Kryo,java.lang.Class)
org.conscrypt.ConscryptSession: java.util.List getStatusResponses()
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.TextView getMessageView()
io.paperdb.Paper: io.paperdb.Book bookOn(java.lang.String,java.lang.String)
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
com.google.android.material.textfield.TextInputLayout: void setStartIconTintMode(android.graphics.PorterDuff$Mode)
org.conscrypt.OpenSSLSignature$RSAPSSPadding: java.security.AlgorithmParameters engineGetParameters()
org.conscrypt.SSLParametersImpl: void setApplicationProtocolSelector(org.conscrypt.ApplicationProtocolSelectorAdapter)
org.conscrypt.KeyGeneratorImpl$DESEDE: void checkKeySize(int)
org.conscrypt.OpenSSLCipherRSA$OAEP: void doCryptoInit(java.security.spec.AlgorithmParameterSpec)
com.esotericsoftware.kryo.serializers.OptionalSerializers$OptionalDoubleSerializer: java.util.OptionalDouble read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.ConscryptEngine: void setHandshakeListener(org.conscrypt.HandshakeListener)
org.conscrypt.Conscrypt: java.lang.String getHostname(javax.net.ssl.SSLSocket)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context)
org.conscrypt.OpenSSLAeadCipher: void checkInitialization()
com.esotericsoftware.kryo.io.ByteBufferOutput: void writeChar(char)
org.conscrypt.Java8EngineSocket: java.util.function.BiFunction getHandshakeApplicationProtocolSelector()
com.esotericsoftware.kryo.serializers.UnsafeCacheFields: UnsafeCacheFields()
com.esotericsoftware.reflectasm.AccessClassLoader: void remove(java.lang.ClassLoader)
androidx.recyclerview.widget.RecyclerView: boolean drawChild(android.graphics.Canvas,android.view.View,long)
com.esotericsoftware.kryo.serializers.TimeSerializers$LocalDateSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.Conscrypt$ProviderBuilder: Conscrypt$ProviderBuilder()
com.esotericsoftware.kryo.serializers.DefaultSerializers$EnumSetSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundMode()
com.google.android.material.chip.Chip: void setBackground(android.graphics.drawable.Drawable)
org.conscrypt.KeyGeneratorImpl: byte[] doKeyGeneration(int)
org.conscrypt.NativeCrypto$Range: NativeCrypto$Range(java.lang.String,java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: void setWantClientAuth(boolean)
com.esotericsoftware.kryo.ClassResolver: com.esotericsoftware.kryo.Registration readClass(com.esotericsoftware.kryo.io.Input)
de.javakaffee.kryoserializers.guava.ReverseListSerializer: void registerSerializers(com.esotericsoftware.kryo.Kryo)
org.conscrypt.NativeCrypto: byte[][] EC_POINT_get_affine_coordinates(org.conscrypt.NativeRef$EC_GROUP,org.conscrypt.NativeRef$EC_POINT)
org.conscrypt.AbstractConscryptSocket: void setAlpnProtocols(byte[])
org.conscrypt.ConscryptEngineSocket$SSLOutputStream: void access$200(org.conscrypt.ConscryptEngineSocket$SSLOutputStream,java.nio.ByteBuffer)
com.esotericsoftware.kryo.serializers.DefaultSerializers$LongSerializer: DefaultSerializers$LongSerializer()
androidx.recyclerview.widget.RecyclerView: android.view.View findNextViewToFocus()
com.google.android.material.bottomappbar.BottomAppBar: void setFabAlignmentMode(int)
com.esotericsoftware.kryo.serializers.MapSerializer: void setKeysCanBeNull(boolean)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: void setHandshakeTimeout(int)
org.conscrypt.ct.SignedCertificateTimestamp$Origin: org.conscrypt.ct.SignedCertificateTimestamp$Origin[] values()
androidx.recyclerview.widget.RecyclerView: void onExitLayoutOrScroll(boolean)
com.esotericsoftware.kryo.serializers.ObjectField$ObjectDoubleField: void read(com.esotericsoftware.kryo.io.Input,java.lang.Object)
com.esotericsoftware.kryo.serializers.DeflateSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.KeyGeneratorImpl: KeyGeneratorImpl(java.lang.String,int,org.conscrypt.KeyGeneratorImpl$1)
com.esotericsoftware.kryo.io.UnsafeOutput: UnsafeOutput(java.io.OutputStream)
de.javakaffee.kryoserializers.guava.UnmodifiableNavigableSetSerializer: java.lang.Object getDelegateFromUnmodifiableNavigableSet(java.util.NavigableSet)
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
com.esotericsoftware.kryo.serializers.TimeSerializers$MonthDaySerializer: TimeSerializers$MonthDaySerializer()
androidx.appcompat.widget.DropDownListView: void setSelectorEnabled(boolean)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: void setEnabledCipherSuites(java.lang.String[])
org.conscrypt.ConscryptEngineSocket: java.io.OutputStream access$500(org.conscrypt.ConscryptEngineSocket)
org.conscrypt.Platform: javax.net.ssl.SSLSocketFactory wrapSocketFactoryIfNeeded(org.conscrypt.OpenSSLSocketFactoryImpl)
org.conscrypt.OpenSSLSignatureRawRSA: OpenSSLSignatureRawRSA()
org.conscrypt.NativeCrypto: int X509_check_issued(long,org.conscrypt.OpenSSLX509Certificate,long,org.conscrypt.OpenSSLX509Certificate)
org.conscrypt.NativeCrypto: byte[][] get_RSA_private_params(org.conscrypt.NativeRef$EVP_PKEY)
org.conscrypt.OpenSSLProvider: void putECDHKeyAgreementImplClass(java.lang.String)
org.conscrypt.ConscryptFileDescriptorSocket: java.lang.String chooseClientPSKIdentity(org.conscrypt.PSKKeyManager,java.lang.String)
com.esotericsoftware.kryo.serializers.DefaultSerializers$LocaleSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
de.javakaffee.kryoserializers.guava.ImmutableSortedSetSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.ChainStrengthAnalyzer: void checkKeyLength(java.security.cert.X509Certificate)
de.javakaffee.kryoserializers.CollectionsEmptyMapSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
androidx.core.widget.NestedScrollView: int getScrollRange()
androidx.recyclerview.widget.RecyclerView: boolean isAttachedToWindow()
com.esotericsoftware.kryo.util.Util: void log(java.lang.String,java.lang.Object)
com.google.android.material.radiobutton.MaterialRadioButton: void setUseMaterialThemeColors(boolean)
org.conscrypt.NativeSsl: void finalize()
androidx.recyclerview.widget.RecyclerView: void releaseGlows()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getErrorIconDrawable()
org.conscrypt.NativeCrypto$SSLHandshakeCallbacks: void onSSLStateChange(int,int)
org.conscrypt.SSLParametersImpl: void setAlgorithmConstraints(java.security.AlgorithmConstraints)
org.conscrypt.ConscryptEngineSocket$1: ConscryptEngineSocket$1(org.conscrypt.ConscryptEngineSocket)
com.esotericsoftware.kryo.serializers.VersionFieldSerializer$Since: int value()
org.conscrypt.GCMParameters: GCMParameters()
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection: UnmodifiableCollectionsSerializer$UnmodifiableCollection(java.lang.String,int,java.lang.Class,java.lang.reflect.Field)
com.esotericsoftware.kryo.io.Input: float readFloat()
com.esotericsoftware.kryo.util.Util: java.lang.Class getPrimitiveClass(java.lang.Class)
com.esotericsoftware.reflectasm.ConstructorAccess: java.lang.Object newInstance(java.lang.Object)
org.conscrypt.ConscryptEngine: boolean isHandshakeStarted()
org.conscrypt.OpenSSLEvpCipherAES$AES$ECB$PKCS5Padding: OpenSSLEvpCipherAES$AES$ECB$PKCS5Padding()
io.paperdb.KeyLocker: void release(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterOverflowTextColor()
org.conscrypt.Conscrypt: boolean isConscrypt(javax.net.ssl.SSLSocket)
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCheckedIcon()
com.esotericsoftware.kryo.serializers.AsmCachedFieldFactory: AsmCachedFieldFactory()
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeBooleanField: void copy(java.lang.Object,java.lang.Object)
com.google.android.material.chip.Chip: void setBackgroundTintList(android.content.res.ColorStateList)
org.conscrypt.Java8EngineSocket: Java8EngineSocket(java.lang.String,int,org.conscrypt.SSLParametersImpl)
org.conscrypt.ConscryptFileDescriptorSocket: java.lang.String[] getEnabledProtocols()
com.google.android.material.button.MaterialButton: void setBackgroundColor(int)
org.conscrypt.Platform: void setParametersSniHostname(javax.net.ssl.SSLParameters,org.conscrypt.SSLParametersImpl,org.conscrypt.AbstractConscryptSocket)
org.conscrypt.KeyGeneratorImpl$HmacSHA1: KeyGeneratorImpl$HmacSHA1()
org.conscrypt.OpenSSLAeadCipher: void throwAEADBadTagExceptionIfAvailable(java.lang.String,java.lang.Throwable)
de.javakaffee.kryoserializers.SubListSerializers$ArrayListSubListSerializer: com.esotericsoftware.kryo.Kryo addDefaultSerializer(com.esotericsoftware.kryo.Kryo)
org.conscrypt.NativeCrypto: int getProtocolConstant(java.lang.String)
com.esotericsoftware.kryo.Kryo: void writeObject(com.esotericsoftware.kryo.io.Output,java.lang.Object)
de.javakaffee.kryoserializers.CopyForIterateMapSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.util.Map)
org.conscrypt.SSLNullSession: org.conscrypt.ConscryptSession getNullSession()
org.conscrypt.AbstractSessionContext: void cacheSession(org.conscrypt.NativeSslSession)
com.esotericsoftware.kryo.Kryo: java.lang.Object copyShallow(java.lang.Object,com.esotericsoftware.kryo.Serializer)
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
com.esotericsoftware.kryo.io.UnsafeOutput: void writeLongs(long[],boolean)
com.esotericsoftware.kryo.serializers.DefaultSerializers$URLSerializer: DefaultSerializers$URLSerializer()
org.conscrypt.TrustedCertificateIndex: java.security.cert.TrustAnchor findBySubjectAndPublicKey(java.security.cert.X509Certificate,java.util.Collection)
org.conscrypt.Platform: void closeGuardOpen(java.lang.Object,java.lang.String)
com.esotericsoftware.kryo.io.ByteBufferInput: long readLong()
com.esotericsoftware.kryo.serializers.DefaultSerializers$DoubleSerializer: DefaultSerializers$DoubleSerializer()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
org.conscrypt.NativeSslSession$Impl: boolean isSingleUse()
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: byte[] getChannelId()
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet)
com.esotericsoftware.kryo.serializers.DefaultSerializers$CurrencySerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.util.Currency)
de.javakaffee.kryoserializers.CollectionsEmptySetSerializer: java.util.Set read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.ConscryptEngineSocket: void setNeedClientAuth(boolean)
com.esotericsoftware.kryo.serializers.DefaultSerializers$StringBufferSerializer: java.lang.StringBuffer copy(com.esotericsoftware.kryo.Kryo,java.lang.StringBuffer)
com.esotericsoftware.kryo.util.DefaultClassResolver: com.esotericsoftware.kryo.Registration getRegistration(java.lang.Class)
org.conscrypt.NativeCrypto: long[] X509_CRL_get_REVOKED(long,org.conscrypt.OpenSSLX509CRL)
org.conscrypt.ExternalSession: int getPacketBufferSize()
org.conscrypt.Platform: javax.net.ssl.SSLEngine unwrapEngine(javax.net.ssl.SSLEngine)
org.conscrypt.OpenSSLSignature: OpenSSLSignature(long,org.conscrypt.OpenSSLSignature$EngineType)
com.esotericsoftware.kryo.util.IntArray: int[] resize(int)
de.javakaffee.kryoserializers.guava.ReverseListSerializer$ReverseList: ReverseListSerializer$ReverseList(de.javakaffee.kryoserializers.guava.ReverseListSerializer$1)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: int getSoWriteTimeout()
org.conscrypt.AbstractConscryptSocket: void setKeepAlive(boolean)
com.esotericsoftware.kryo.serializers.DefaultSerializers$CollectionsSingletonSetSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.util.Set)
com.esotericsoftware.kryo.serializers.DefaultSerializers$CollectionsSingletonMapSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.Java8EngineWrapper: java.lang.String getPeerHost()
org.conscrypt.NativeCrypto: long EVP_aead_aes_128_gcm_siv()
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)
de.javakaffee.kryoserializers.CollectionsSingletonSetSerializer: CollectionsSingletonSetSerializer()
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: void setChannelIdEnabled(boolean)
com.google.android.material.chip.Chip: void setCloseIconContentDescription(java.lang.CharSequence)
org.conscrypt.ConscryptEngineSocket: java.lang.String[] getEnabledCipherSuites()
org.conscrypt.NativeCrypto: long EVP_aead_aes_128_gcm()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
org.conscrypt.OpenSSLProvider: OpenSSLProvider(java.lang.String,boolean,java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection$7: java.lang.Object create(java.lang.Object)
org.conscrypt.ConscryptEngineSocket: boolean getEnableSessionCreation()
org.conscrypt.TrustManagerImpl: java.util.List getTrustedChainForServer(java.security.cert.X509Certificate[],java.lang.String,java.net.Socket)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: void clientCertificateRequested(byte[],byte[][])
com.esotericsoftware.kryo.serializers.ExternalizableSerializer: boolean hasInheritableReplaceMethod(java.lang.Class,java.lang.String)
org.conscrypt.OpenSSLCipher: void engineInitInternal(byte[],java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: byte[] getNpnSelectedProtocol()
org.conscrypt.ConscryptEngineSocket: boolean getNeedClientAuth()
org.conscrypt.OpenSSLX509CertificateFactory: byte[] access$000()
com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
org.conscrypt.AbstractConscryptSocket: AbstractConscryptSocket()
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
com.esotericsoftware.kryo.serializers.DefaultSerializers$ClassSerializer: DefaultSerializers$ClassSerializer()
org.conscrypt.PSKKeyManager: java.lang.String chooseServerKeyIdentityHint(javax.net.ssl.SSLEngine)
org.conscrypt.ConscryptFileDescriptorSocket$1: org.conscrypt.ConscryptSession provideSession()
com.esotericsoftware.kryo.io.UnsafeMemoryInput: void readBytes(java.lang.Object,long,long)
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior(android.content.Context,android.util.AttributeSet)
com.esotericsoftware.kryo.io.Input: int read(byte[],int,int)
org.conscrypt.NativeCrypto: long EVP_PKEY_new_RSA(byte[],byte[],byte[],byte[],byte[],byte[],byte[],byte[])
org.conscrypt.NativeCrypto: int RSA_private_encrypt(int,byte[],byte[],org.conscrypt.NativeRef$EVP_PKEY,int)
com.esotericsoftware.kryo.io.Output: Output(java.io.OutputStream)
org.conscrypt.OpenSSLSocketImpl: byte[] getNpnSelectedProtocol()
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: PreKitKatPlatformOpenSSLSocketImplAdapter(org.conscrypt.AbstractConscryptSocket)
org.conscrypt.ConscryptEngine: int pendingInboundCleartextBytes()
org.conscrypt.SessionSnapshot: void putValue(java.lang.String,java.lang.Object)
org.conscrypt.ConscryptFileDescriptorSocket: int serverPSKKeyRequested(java.lang.String,java.lang.String,byte[])
org.conscrypt.ct.VerifiedSCT: VerifiedSCT(org.conscrypt.ct.SignedCertificateTimestamp,org.conscrypt.ct.VerifiedSCT$Status)
org.conscrypt.ConscryptFileDescriptorSocket: boolean getEnableSessionCreation()
com.esotericsoftware.kryo.util.Util: boolean isWrapperClass(java.lang.Class)
org.conscrypt.OpenSSLCipher: java.security.AlgorithmParameters engineGetParameters()
org.conscrypt.AbstractConscryptSocket: AbstractConscryptSocket(java.lang.String,int,java.net.InetAddress,int)
androidx.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
org.conscrypt.OpenSSLAeadCipherAES: int getOutputSizeForFinal(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
androidx.recyclerview.widget.RecyclerView: boolean isAccessibilityEnabled()
com.esotericsoftware.kryo.io.KryoDataInput: java.lang.String readUTF()
org.conscrypt.AbstractConscryptSocket: AbstractConscryptSocket(java.lang.String,int)
de.javakaffee.kryoserializers.DateSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.util.Date)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
com.esotericsoftware.kryo.serializers.FieldSerializerConfig: boolean isFieldsCanBeNull()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory()
com.esotericsoftware.kryo.io.ByteBufferOutput: ByteBufferOutput(long,int)
org.conscrypt.ConscryptEngine: java.lang.String chooseServerAlias(javax.net.ssl.X509KeyManager,java.lang.String)
org.conscrypt.AbstractSessionContext$1: AbstractSessionContext$1(org.conscrypt.AbstractSessionContext)
com.esotericsoftware.kryo.serializers.DefaultSerializers$DoubleSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Double)
com.esotericsoftware.kryo.io.ByteBufferInput: int readUtf8Length(int)
com.esotericsoftware.kryo.io.ByteBufferInput: ByteBufferInput(byte[])
com.google.android.material.card.MaterialCardView: void setBackground(android.graphics.drawable.Drawable)
com.esotericsoftware.kryo.util.IdentityMap: void ensureCapacity(int)
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintList(android.content.res.ColorStateList)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior()
com.esotericsoftware.kryo.ClassResolver: void reset()
com.esotericsoftware.kryo.io.Input: double readDouble()
com.esotericsoftware.kryo.serializers.TimeSerializers$ZonedDateTimeSerializer: TimeSerializers$ZonedDateTimeSerializer()
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection: de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection valueOf(java.lang.String)
org.conscrypt.OpenSSLX509CertificateFactory$1: OpenSSLX509CertificateFactory$1(org.conscrypt.OpenSSLX509CertificateFactory)
com.esotericsoftware.kryo.serializers.TaggedFieldSerializerConfig: boolean isSkipUnknownTags()
org.conscrypt.OpenSSLCipher: void engineSetMode(java.lang.String)
org.conscrypt.NativeCrypto: boolean asn1_read_next_tag_is(long,int)
org.conscrypt.OpenSSLX509CertificateFactory: java.util.Collection engineGenerateCertificates(java.io.InputStream)
org.conscrypt.CertificatePriorityComparator: CertificatePriorityComparator()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
org.conscrypt.NativeCrypto: void X509_CRL_verify(long,org.conscrypt.OpenSSLX509CRL,org.conscrypt.NativeRef$EVP_PKEY)
com.esotericsoftware.kryo.io.OutputChunked: OutputChunked()
org.conscrypt.AbstractConscryptSocket: byte[] getChannelId()
com.esotericsoftware.kryo.io.UnsafeInput: void readBytes(java.lang.Object,long,long,int)
org.conscrypt.OpenSSLCipherChaCha20: void checkSupportedPadding(org.conscrypt.OpenSSLCipher$Padding)
com.esotericsoftware.kryo.serializers.TimeSerializers$YearMonthSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.CertPinManager: void checkChainPinning(java.lang.String,java.util.List)
androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollOffset()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getRippleColor()
org.conscrypt.OpenSSLMessageDigestJDK: byte[] engineDigest()
org.conscrypt.OpenSSLKey: boolean equals(java.lang.Object)
org.conscrypt.OpenSSLX509CRL: java.lang.String getSigAlgName()
org.conscrypt.OpenSSLX509CRL: java.lang.String getSigAlgOID()
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
org.conscrypt.OpenSSLBIOInputStream: int read(byte[])
org.conscrypt.OAEPParameters: OAEPParameters()
org.conscrypt.OpenSSLSocketImpl: java.io.FileDescriptor getFileDescriptor$()
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: java.net.SocketAddress getRemoteSocketAddress()
org.conscrypt.OpenSSLServerSocketFactoryImpl: OpenSSLServerSocketFactoryImpl(org.conscrypt.SSLParametersImpl)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
com.esotericsoftware.kryo.serializers.TaggedFieldSerializer$1: int compare(com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField,com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField)
com.esotericsoftware.kryo.serializers.DefaultSerializers$LongSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCloseIconTint()
org.conscrypt.NativeRef$EVP_CIPHER_CTX: void doFree(long)
org.conscrypt.NativeCrypto: void EC_POINT_set_affine_coordinates(org.conscrypt.NativeRef$EC_GROUP,org.conscrypt.NativeRef$EC_POINT,byte[],byte[])
io.paperdb.DbStoragePlainFile: java.lang.String getRootFolderPath()
org.conscrypt.ConscryptEngineSocket: java.io.OutputStream getOutputStream()
org.conscrypt.ConscryptEngineSocket$SSLInputStream: int read(byte[],int,int)
com.google.android.material.textfield.TextInputLayout: void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate)
com.esotericsoftware.kryo.serializers.OptionalSerializers$OptionalSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.util.Optional)
org.conscrypt.ct.SignedCertificateTimestamp: org.conscrypt.ct.SignedCertificateTimestamp$Origin getOrigin()
com.google.android.material.internal.NavigationMenuItemView: void setMaxLines(int)
org.conscrypt.OpenSSLX509Certificate: java.lang.String getSigAlgOID()
org.conscrypt.NativeCrypto: void HMAC_UpdateDirect(org.conscrypt.NativeRef$HMAC_CTX,long,int)
com.google.android.material.chip.Chip: void setCloseIconTint(android.content.res.ColorStateList)
org.conscrypt.BaseOpenSSLSocketAdapterFactory: java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int)
org.conscrypt.Conscrypt$Version: int minor()
com.esotericsoftware.kryo.util.IntMap: void clear()
com.google.android.material.chip.Chip: void setChipIconTintResource(int)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: int getCircularRevealScrimColor()
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopEnd()
org.conscrypt.ConscryptEngine: void closeAll()
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
com.esotericsoftware.kryo.serializers.DefaultSerializers$CharsetSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.nio.charset.Charset)
com.google.android.material.card.MaterialCardView: void setCheckedIconTint(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
org.conscrypt.NativeCrypto: void asn1_read_null(long)
org.conscrypt.SSLNullSession: void putValue(java.lang.String,java.lang.Object)
com.esotericsoftware.kryo.util.ObjectMap: int hash2(int)
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
org.conscrypt.ConscryptEngineSocket$2: void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: boolean getNeedClientAuth()
com.esotericsoftware.kryo.util.MapReferenceResolver: void setKryo(com.esotericsoftware.kryo.Kryo)
de.javakaffee.kryoserializers.GregorianCalendarSerializer: GregorianCalendarSerializer()
org.conscrypt.AbstractConscryptSocket: int getSendBufferSize()
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmBooleanField: AsmCacheFields$AsmBooleanField()
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeIntField: void read(com.esotericsoftware.kryo.io.Input,java.lang.Object)
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmDoubleField: void write(com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.Java8EngineWrapper: int getPeerPort()
com.esotericsoftware.kryo.io.FastOutput: FastOutput(java.io.OutputStream,int)
com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField: void read(com.esotericsoftware.kryo.io.Input,java.lang.Object)
org.conscrypt.OpenSSLX509CRLEntry: java.util.Set getNonCriticalExtensionOIDs()
org.conscrypt.OpenSSLRSAPrivateKey: java.math.BigInteger getPrivateExponent()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
com.google.android.material.chip.Chip: float getCloseIconEndPadding()
org.conscrypt.ConscryptEngine: void freeIfDone()
com.esotericsoftware.kryo.serializers.TimeSerializers$InstantSerializer: java.time.Instant read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.OpenSSLAeadCipher: int doFinalInternal(byte[],int,int)
org.conscrypt.NativeCrypto: int EVP_AEAD_max_overhead(long)
com.esotericsoftware.kryo.util.IntMap: void putResize(int,java.lang.Object)
org.conscrypt.SSLUtils: java.lang.String getServerX509KeyType(long)
androidx.recyclerview.widget.RecyclerView: void initFastScroller(android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable)
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
com.google.android.material.textfield.TextInputLayout: void setStartIconOnLongClickListener(android.view.View$OnLongClickListener)
com.esotericsoftware.kryo.serializers.MapSerializer: void setGenerics(com.esotericsoftware.kryo.Kryo,java.lang.Class[])
org.conscrypt.AllocatedBuffer: org.conscrypt.AllocatedBuffer release()
org.conscrypt.ConscryptEngine: void setApplicationProtocols(java.lang.String[])
com.esotericsoftware.kryo.pool.SoftReferenceQueue: boolean offer(com.esotericsoftware.kryo.Kryo)
com.esotericsoftware.kryo.io.KryoDataOutput: void writeChar(int)
com.esotericsoftware.kryo.serializers.OptionalSerializers$OptionalLongSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.util.OptionalLong)
org.conscrypt.FileClientSessionCache$CacheFile: int compareTo(java.io.File)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: byte[] getAlpnSelectedProtocol()
com.esotericsoftware.kryo.serializers.ObjectField$ObjectShortField: void copy(java.lang.Object,java.lang.Object)
androidx.recyclerview.widget.RecyclerView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)
com.esotericsoftware.kryo.util.ObjectMap: boolean containsKeyStash(java.lang.Object)
com.esotericsoftware.kryo.serializers.TimeSerializers$LocalDateSerializer: java.time.LocalDate read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.serializers.FieldSerializer: com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField[] getFields()
com.esotericsoftware.kryo.util.UnsafeUtil: UnsafeUtil()
com.esotericsoftware.kryo.serializers.TimeSerializers: TimeSerializers()
com.esotericsoftware.kryo.serializers.TaggedFieldSerializer$Tag: boolean annexed()
com.esotericsoftware.kryo.io.UnsafeOutput: void writeLittleEndianInt(int)
com.esotericsoftware.kryo.serializers.OptionalSerializers$OptionalIntSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.serializers.TimeSerializers$LocalDateTimeSerializer: TimeSerializers$LocalDateTimeSerializer(com.esotericsoftware.kryo.serializers.TimeSerializers$1)
org.conscrypt.ConscryptFileDescriptorSocket: void shutdownAndFreeSslNative()
org.conscrypt.ConscryptEngineSocket: void access$000(org.conscrypt.ConscryptEngineSocket)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleX(float)
org.conscrypt.ct.SignedCertificateTimestamp: long getTimestamp()
de.javakaffee.kryoserializers.DateSerializer: java.util.Date copy(com.esotericsoftware.kryo.Kryo,java.util.Date)
io.paperdb.Book: io.paperdb.Book write(java.lang.String,java.lang.Object)
androidx.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
de.javakaffee.kryoserializers.guava.ArrayListMultimapSerializer: com.google.common.collect.ArrayListMultimap read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: void connect(java.net.SocketAddress)
com.esotericsoftware.kryo.io.Output: void writeShort(int)
com.esotericsoftware.kryo.serializers.FieldSerializerGenericsUtil: com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField newCachedFieldOfGenericType(java.lang.reflect.Field,int,java.lang.Class[],java.lang.reflect.Type)
com.esotericsoftware.kryo.util.IntMap$Keys: IntMap$Keys(com.esotericsoftware.kryo.util.IntMap)
org.conscrypt.OpenSSLRSAPrivateKey: org.conscrypt.OpenSSLRSAPrivateKey getInstance(org.conscrypt.OpenSSLKey)
org.conscrypt.NativeCrypto: long EVP_aead_aes_256_gcm()
org.conscrypt.Java8EngineWrapper$1: Java8EngineWrapper$1(java.util.function.BiFunction)
org.conscrypt.NativeCrypto: byte[] get_ocsp_single_extension(byte[],java.lang.String,long,org.conscrypt.OpenSSLX509Certificate,long,org.conscrypt.OpenSSLX509Certificate)
com.esotericsoftware.kryo.ReferenceResolver: java.lang.Object getReadObject(java.lang.Class,int)
com.esotericsoftware.kryo.Kryo$DefaultInstantiatorStrategy$1: Kryo$DefaultInstantiatorStrategy$1(com.esotericsoftware.kryo.Kryo$DefaultInstantiatorStrategy,com.esotericsoftware.reflectasm.ConstructorAccess,java.lang.Class)
com.google.android.material.internal.NavigationMenuItemView: void setCheckable(boolean)
org.conscrypt.ct.CTVerifier: void verifyEmbeddedSCTs(java.util.List,org.conscrypt.OpenSSLX509Certificate[],org.conscrypt.ct.CTVerificationResult)
com.google.android.material.chip.Chip: float getTextStartPadding()
org.conscrypt.SSLParametersImpl: void setSNIMatchers(java.util.Collection)
org.conscrypt.OpenSSLAeadCipherAES$GCM_SIV$AES_256: void checkSupportedKeySize(int)
androidx.recyclerview.widget.RecyclerView: void offsetChildrenVertical(int)
com.esotericsoftware.kryo.io.ByteBufferInput: java.io.InputStream getInputStream()
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: boolean getUseClientMode()
androidx.recyclerview.widget.RecyclerView: void removeItemDecorationAt(int)
de.javakaffee.kryoserializers.ArraysAsListSerializer: java.util.List read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: int getLocalPort()
org.conscrypt.CertificatePriorityComparator: int getKeySize(java.security.PublicKey)
de.javakaffee.kryoserializers.protobuf.ProtobufSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
de.javakaffee.kryoserializers.ArraysAsListSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection$1: UnmodifiableCollectionsSerializer$UnmodifiableCollection$1(java.lang.String,int,java.lang.Class,java.lang.reflect.Field)
com.esotericsoftware.kryo.util.IntMap$Values: IntMap$Values(com.esotericsoftware.kryo.util.IntMap)
com.google.android.material.chip.Chip: void setCheckedIconVisible(boolean)
com.esotericsoftware.kryo.util.ObjectMap: ObjectMap(int)
com.esotericsoftware.kryo.io.ByteBufferOutput: void writeBoolean(boolean)
org.conscrypt.OpenSSLX509CertificateFactory$Parser: OpenSSLX509CertificateFactory$Parser()
com.google.android.material.button.MaterialButton: void setChecked(boolean)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnLayoutChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnLayoutChangeListener)
org.conscrypt.OpenSSLRSAPrivateCrtKey: OpenSSLRSAPrivateCrtKey(org.conscrypt.OpenSSLKey,byte[][])
com.google.android.material.internal.NavigationMenuItemView: void setHorizontalPadding(int)
com.esotericsoftware.kryo.serializers.MapSerializer$BindMap: boolean keysCanBeNull()
androidx.recyclerview.widget.RecyclerView: void dispatchChildDetached(android.view.View)
org.conscrypt.OpenSSLSocketFactoryImpl: void setUseEngineSocketByDefault(boolean)
com.esotericsoftware.kryo.serializers.DefaultSerializers$IntSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.serializers.TimeSerializers$YearSerializer: TimeSerializers$YearSerializer()
org.conscrypt.ct.CTVerifier: java.util.List getSCTsFromSCTList(byte[],org.conscrypt.ct.SignedCertificateTimestamp$Origin)
org.conscrypt.SessionSnapshot: SessionSnapshot(org.conscrypt.ConscryptSession)
com.google.android.material.button.MaterialButton: void setStrokeWidth(int)
com.esotericsoftware.kryo.io.Output: void writeLongs(long[],boolean)
com.esotericsoftware.kryo.util.IntMap: java.lang.Object removeStash(int)
com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()
com.esotericsoftware.kryo.serializers.ObjectField$ObjectIntField: void read(com.esotericsoftware.kryo.io.Input,java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHelperText()
com.google.android.material.theme.MaterialComponentsViewInflater: androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet)
io.paperdb.DbStoragePlainFile: com.esotericsoftware.kryo.Kryo getKryo()
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection$4: UnmodifiableCollectionsSerializer$UnmodifiableCollection$4(java.lang.String,int,java.lang.Class,java.lang.reflect.Field)
com.google.android.material.textfield.TextInputLayout: void setEndIconTintList(android.content.res.ColorStateList)
com.esotericsoftware.kryo.util.IntArray: int[] toArray()
com.esotericsoftware.kryo.serializers.TaggedFieldSerializerConfig: void setIgnoreUnknownTags(boolean)
com.esotericsoftware.kryo.serializers.JavaSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.NativeCrypto: byte[] X509_CRL_get_issuer_name(long,org.conscrypt.OpenSSLX509CRL)
com.google.android.material.appbar.AppBarLayout: float getTargetElevation()
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
org.conscrypt.Java8EngineSocket: Java8EngineSocket(java.net.InetAddress,int,java.net.InetAddress,int,org.conscrypt.SSLParametersImpl)
de.javakaffee.kryoserializers.dexx.MapSerializer: com.github.andrewoma.dexx.collection.Map read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
org.conscrypt.NativeCrypto: void X509_print_ex(long,long,org.conscrypt.OpenSSLX509Certificate,long,long)
org.conscrypt.OpenSSLServerSocketFactoryImpl: java.net.ServerSocket createServerSocket(int,int)
org.conscrypt.ConscryptFileDescriptorSocket: java.lang.String chooseServerAlias(javax.net.ssl.X509KeyManager,java.lang.String)
org.conscrypt.AbstractSessionContext: java.util.Enumeration getIds()
org.conscrypt.OpenSSLEvpCipherAES$AES$CBC: OpenSSLEvpCipherAES$AES$CBC(org.conscrypt.OpenSSLCipher$Padding)
org.conscrypt.OpenSSLEvpCipherAES$AES_256$CBC$PKCS5Padding: OpenSSLEvpCipherAES$AES_256$CBC$PKCS5Padding()
org.conscrypt.OpenSSLEvpCipherARC4: void checkSupportedKeySize(int)
com.esotericsoftware.kryo.io.InputChunked: void nextChunks()
org.conscrypt.NativeSsl: byte[] getSessionId()
androidx.recyclerview.widget.RecyclerView: void absorbGlows(int,int)
com.esotericsoftware.kryo.serializers.TimeSerializers$OffsetTimeSerializer: TimeSerializers$OffsetTimeSerializer(com.esotericsoftware.kryo.serializers.TimeSerializers$1)
com.google.android.material.appbar.ViewOffsetBehavior: ViewOffsetBehavior(android.content.Context,android.util.AttributeSet)
org.conscrypt.ConscryptFileDescriptorSocket: void setWantClientAuth(boolean)
com.esotericsoftware.kryo.io.KryoDataInput: long readLong()
com.esotericsoftware.kryo.util.ObjectMap: ObjectMap(com.esotericsoftware.kryo.util.ObjectMap)
com.esotericsoftware.kryo.pool.KryoPool: java.lang.Object run(com.esotericsoftware.kryo.pool.KryoCallback)
com.esotericsoftware.kryo.ClassResolver: com.esotericsoftware.kryo.Registration getRegistration(java.lang.Class)
com.google.android.material.chip.Chip: float getChipMinHeight()
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
org.conscrypt.AbstractConscryptSocket: void setHandshakeTimeout(int)
com.google.android.material.chip.Chip: float getChipStrokeWidth()
io.paperdb.DbStoragePlainFile: java.io.File makeBackupFile(java.io.File)
org.conscrypt.AbstractConscryptEngine: AbstractConscryptEngine()
org.conscrypt.NativeSslSession$Impl$1: void invalidate()
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: java.io.FileDescriptor getFileDescriptor$()
com.esotericsoftware.kryo.io.ByteBufferOutput: byte[] toBytes()
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
org.conscrypt.NativeCrypto: byte[] SSL_get_tls_channel_id(long,org.conscrypt.NativeSsl)
org.conscrypt.NativeCrypto: void SSL_SESSION_up_ref(long)
org.conscrypt.AbstractConscryptSocket: void setSendBufferSize(int)
com.esotericsoftware.kryo.util.DefaultClassResolver: com.esotericsoftware.kryo.Registration getRegistration(int)
org.conscrypt.OpenSSLX509Certificate: java.util.List fromPkcs7PemInputStream(java.io.InputStream)
org.conscrypt.OpenSSLSignature$SHA384RSAPSS: OpenSSLSignature$SHA384RSAPSS()
org.conscrypt.ConscryptEngineSocket$SSLOutputStream: void write(int)
org.conscrypt.ct.DigitallySigned: org.conscrypt.ct.DigitallySigned decode(byte[])
de.javakaffee.kryoserializers.jodatime.JodaLocalDateTimeSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.SSLParametersImpl: void setNeedClientAuth(boolean)
com.esotericsoftware.kryo.serializers.TimeSerializers$DurationSerializer: TimeSerializers$DurationSerializer()
org.conscrypt.NativeCrypto: byte[] i2d_X509_PUBKEY(long,org.conscrypt.OpenSSLX509Certificate)
org.conscrypt.Java8FileDescriptorSocket: org.conscrypt.ApplicationProtocolSelector toApplicationProtocolSelector(java.util.function.BiFunction)
com.esotericsoftware.kryo.io.UnsafeInput: float[] readFloats(int)
com.esotericsoftware.kryo.serializers.CollectionSerializer$BindCollection: java.lang.Class elementSerializer()
org.conscrypt.ConscryptEngineSocket: java.io.InputStream getUnderlyingInputStream()
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
com.esotericsoftware.kryo.serializers.DefaultSerializers$CollectionsEmptySetSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.io.ByteBufferOutput: int writeLongS(long,boolean)
com.esotericsoftware.reflectasm.MethodAccess: int getIndex(java.lang.String)
org.conscrypt.Platform: void logEvent(java.lang.String)
org.conscrypt.NativeCrypto: int SSL_set_protocol_versions(long,org.conscrypt.NativeSsl,int,int)
com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleMargin(float)
com.esotericsoftware.kryo.serializers.TimeSerializers$YearSerializer: java.time.Year read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.serializers.EnumNameSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: void bind(java.net.SocketAddress)
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.esotericsoftware.kryo.serializers.DefaultSerializers$BigDecimalSerializer: DefaultSerializers$BigDecimalSerializer()
org.conscrypt.OpenSSLCipherRSA: void engineInitInternal(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)
com.esotericsoftware.kryo.io.Input: int available()
com.esotericsoftware.kryo.serializers.FieldSerializer$CachedFieldNameStrategy$1: java.lang.String getName(com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField)
org.conscrypt.DefaultSSLContextImpl: DefaultSSLContextImpl(java.lang.String[])
org.conscrypt.OpenSSLEvpCipherDESEDE$CBC$NoPadding: OpenSSLEvpCipherDESEDE$CBC$NoPadding()
com.esotericsoftware.kryo.io.FastInput: int readInt(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.esotericsoftware.kryo.serializers.BeanSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.OpenSSLRSAPublicKey: void writeObject(java.io.ObjectOutputStream)
com.esotericsoftware.kryo.util.DefaultStreamFactory: com.esotericsoftware.kryo.io.Input getInput(byte[],int,int)
com.esotericsoftware.kryo.io.Input: void readUtf8(int)
androidx.recyclerview.widget.RecyclerView: android.graphics.Rect getItemDecorInsetsForChild(android.view.View)
org.conscrypt.ConscryptEngineSocket: javax.net.ssl.SSLSession getSession()
org.conscrypt.NativeCrypto: byte[] i2d_SSL_SESSION(long)
com.esotericsoftware.kryo.util.IntMap: void ensureCapacity(int)
org.conscrypt.Java8EngineWrapper: void setHostname(java.lang.String)
org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker: void init(boolean)
com.esotericsoftware.kryo.io.KryoObjectInput: int read(byte[],int,int)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
com.esotericsoftware.kryo.util.IntArray: java.lang.String toString(java.lang.String)
org.conscrypt.NativeSsl: void initialize(java.lang.String,org.conscrypt.OpenSSLKey)
org.conscrypt.Java8EngineWrapper: void setEnableSessionCreation(boolean)
org.conscrypt.ActiveSession: long getCreationTime()
androidx.recyclerview.widget.RecyclerView: void setScrollState(int)
org.conscrypt.Platform: org.conscrypt.ConscryptEngineSocket createEngineSocket(java.lang.String,int,org.conscrypt.SSLParametersImpl)
org.conscrypt.OpenSSLEvpCipherAES$AES$CTR: OpenSSLEvpCipherAES$AES$CTR()
org.conscrypt.OAEPParameters: java.security.spec.AlgorithmParameterSpec engineGetParameterSpec(java.lang.Class)
org.conscrypt.OpenSSLCipher: int getOutputSizeForUpdate(int)
org.conscrypt.TrustManagerImpl: java.util.List checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String,javax.net.ssl.SSLSession)
com.esotericsoftware.kryo.serializers.BeanSerializer$1: int compare(java.beans.PropertyDescriptor,java.beans.PropertyDescriptor)
org.conscrypt.NativeCrypto: void SSL_CTX_free(long,org.conscrypt.AbstractSessionContext)
com.esotericsoftware.kryo.io.ByteBufferInput: long[] readLongs(int)
org.conscrypt.TrustManagerImpl: java.security.cert.X509Certificate[] getAcceptedIssuers()
com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.Serializer newDefaultSerializer(java.lang.Class)
com.esotericsoftware.kryo.Kryo: java.lang.ClassLoader getClassLoader()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
org.conscrypt.SSLParametersImpl: void setUseSni(boolean)
com.esotericsoftware.kryo.serializers.EnumNameSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Enum)
org.conscrypt.Java8EngineSocket$1: Java8EngineSocket$1(java.util.function.BiFunction)
com.esotericsoftware.kryo.io.Input: void close()
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: void setNeedClientAuth(boolean)
androidx.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
com.google.android.material.card.MaterialCardView: void setRadius(float)
org.conscrypt.OpenSSLX509Certificate: boolean[] getSubjectUniqueID()
com.esotericsoftware.kryo.io.ByteBufferOutput: void writeUtf8Length(int)
com.esotericsoftware.kryo.io.ByteBufferOutput: void release()
org.conscrypt.NativeCrypto: java.lang.String EVP_PKEY_print_params(org.conscrypt.NativeRef$EVP_PKEY)
org.conscrypt.ConscryptEngine: org.conscrypt.AbstractSessionContext sessionContext()
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$LongArraySerializer: long[] read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.OpenSSLProvider: OpenSSLProvider(java.lang.String)
de.javakaffee.kryoserializers.CollectionsSingletonSetSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
com.esotericsoftware.kryo.serializers.TimeSerializers$OffsetDateTimeSerializer: TimeSerializers$OffsetDateTimeSerializer()
com.google.android.material.appbar.AppBarLayout: int getLiftOnScrollTargetViewId()
androidx.recyclerview.widget.RecyclerView: boolean isAnimating()
org.conscrypt.ConscryptFileDescriptorSocket: org.conscrypt.NativeSsl access$100(org.conscrypt.ConscryptFileDescriptorSocket)
com.esotericsoftware.kryo.util.ObjectMap: void resize(int)
org.conscrypt.OpenSSLX509CertPath: java.util.Iterator getEncodingsIterator()
org.conscrypt.Java7ExtendedSSLSession: long getCreationTime()
org.conscrypt.ConscryptFileDescriptorSocket: void startHandshake()
org.conscrypt.ConscryptEngine: java.lang.String chooseClientPSKIdentity(org.conscrypt.PSKKeyManager,java.lang.String)
org.conscrypt.AbstractConscryptSocket: int getTrafficClass()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(int)
org.conscrypt.AbstractConscryptSocket: void setChannelIdEnabled(boolean)
org.conscrypt.OpenSSLProvider: void putRAWRSASignatureImplClass(java.lang.String)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: boolean isClosed()
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeByteField: void copy(java.lang.Object,java.lang.Object)
com.google.android.material.chip.ChipGroup: void setChipSpacingVerticalResource(int)
com.esotericsoftware.kryo.Kryo: java.lang.String unregisteredClassMessage(java.lang.Class)
org.conscrypt.ConscryptFileDescriptorSocket: byte[] exportKeyingMaterial(java.lang.String,byte[],int)
org.conscrypt.OpenSSLRSAPrivateKey: org.conscrypt.OpenSSLKey wrapJCAPrivateKeyForTLSStackOnly(java.security.PrivateKey,java.security.PublicKey)
de.javakaffee.kryoserializers.guava.ImmutableSetSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.X509PublicKey: int hashCode()
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeShortField: UnsafeCacheFields$UnsafeShortField(java.lang.reflect.Field)
org.conscrypt.ActiveSession: void removeValue(java.lang.String)
org.conscrypt.NativeCrypto: int get_X509_ex_pathlen(long,org.conscrypt.OpenSSLX509Certificate)
androidx.cardview.widget.CardView: void setMinimumHeight(int)
com.esotericsoftware.kryo.serializers.DefaultSerializers$DateSerializer: java.util.Date read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
org.conscrypt.ConscryptServerSocket: java.lang.String[] getEnabledProtocols()
de.javakaffee.kryoserializers.EnumSetSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.ct.DigitallySigned: DigitallySigned(org.conscrypt.ct.DigitallySigned$HashAlgorithm,org.conscrypt.ct.DigitallySigned$SignatureAlgorithm,byte[])
androidx.recyclerview.widget.RecyclerView: boolean hasNestedScrollingParent(int)
org.conscrypt.OpenSSLECPublicKey: int hashCode()
org.conscrypt.ConscryptEngine: long directByteBufferAddress(java.nio.ByteBuffer,int)
com.google.android.material.chip.ChipGroup: ChipGroup(android.content.Context,android.util.AttributeSet)
com.esotericsoftware.minlog.Log: void debug(java.lang.String,java.lang.Throwable)
org.conscrypt.OpenSSLECKeyFactory: OpenSSLECKeyFactory()
org.conscrypt.OpenSSLX509CRL: java.security.Principal getIssuerDN()
com.esotericsoftware.kryo.util.IdentityObjectIntMap: void put(java.lang.Object,int)
org.conscrypt.TrustManagerImpl$GlobalHostnameVerifierAdapter: org.conscrypt.TrustManagerImpl$GlobalHostnameVerifierAdapter valueOf(java.lang.String)
com.esotericsoftware.kryo.io.Input: int limit()
com.esotericsoftware.kryo.Registration: void setInstantiator(org.objenesis.instantiator.ObjectInstantiator)
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
org.conscrypt.OpenSSLContextImpl: javax.net.ssl.SSLServerSocketFactory engineGetServerSocketFactory()
org.conscrypt.NativeSslSession: byte[] getPeerSignedCertificateTimestamp()
com.google.android.material.internal.VisibilityAwareImageButton: int getUserSetVisibility()
com.esotericsoftware.kryo.util.IntMap$MapIterator: void findNextIndex()
de.javakaffee.kryoserializers.guava.TreeMultimapSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.OpenSSLX509CertificateFactory$1: org.conscrypt.OpenSSLX509Certificate fromX509DerInputStream(java.io.InputStream)
org.conscrypt.OpenSSLECPublicKey: java.security.spec.ECPoint getPublicKey()
org.conscrypt.OpenSSLBIOSink: long getContext()
org.conscrypt.NativeCrypto: long[] d2i_PKCS7_bio(long,int)
com.google.android.material.chip.Chip: void setChipIconTint(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPasswordVisibilityToggleContentDescription()
org.conscrypt.ct.Serialization: byte[] readDEROctetString(java.io.InputStream)
com.esotericsoftware.kryo.pool.SoftReferenceQueue: com.esotericsoftware.kryo.Kryo element()
com.google.android.material.chip.Chip: void setChipIconVisible(boolean)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$BooleanArraySerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,boolean[])
org.conscrypt.ConscryptEngine: void setWantClientAuth(boolean)
com.esotericsoftware.kryo.serializers.DefaultSerializers$ShortSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.serializers.TimeSerializers$OffsetDateTimeSerializer: java.time.OffsetDateTime read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.util.ObjectMap$Keys: void remove()
com.esotericsoftware.kryo.pool.SoftReferenceQueue: boolean containsAll(java.util.Collection)
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection: de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection valueOfType(java.lang.Class)
org.conscrypt.NativeCrypto: void SSL_set_verify(long,org.conscrypt.NativeSsl,int)
com.esotericsoftware.kryo.io.Output: void writeUtf8Length(int)
org.conscrypt.SSLNullSession: java.lang.String getApplicationProtocol()
com.esotericsoftware.kryo.serializers.DefaultSerializers$CharsetSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
com.esotericsoftware.kryo.util.ObjectMap$Values: ObjectMap$Values(com.esotericsoftware.kryo.util.ObjectMap)
de.javakaffee.kryoserializers.jodatime.JodaIntervalSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,org.joda.time.Interval)
com.esotericsoftware.kryo.serializers.DefaultSerializers$FloatSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Float)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$DoubleArraySerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
de.javakaffee.kryoserializers.guava.ImmutableSortedSetSerializer: ImmutableSortedSetSerializer()
com.esotericsoftware.kryo.io.Output: void writeBytes(byte[],int,int)
org.conscrypt.AbstractConscryptSocket: void setChannelIdPrivateKey(java.security.PrivateKey)
de.javakaffee.kryoserializers.guava.ImmutableListSerializer: com.google.common.collect.ImmutableList read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.io.ByteBufferOutput: void writeFloats(float[])
com.esotericsoftware.kryo.util.DefaultStreamFactory: com.esotericsoftware.kryo.io.Output getOutput(int)
com.esotericsoftware.kryo.serializers.DefaultSerializers$CollectionsSingletonListSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.NativeCrypto: int ENGINE_SSL_read_BIO_direct(long,org.conscrypt.NativeSsl,long,long,int,org.conscrypt.NativeCrypto$SSLHandshakeCallbacks)
com.esotericsoftware.kryo.io.Input: Input()
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.google.android.material.chip.Chip: void setChipIconSizeResource(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
com.esotericsoftware.kryo.serializers.TimeSerializers$DurationSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.NativeCrypto: void set_SSL_psk_client_callback_enabled(long,org.conscrypt.NativeSsl,boolean)
org.conscrypt.NativeCrypto: int ECDSA_verify(byte[],byte[],org.conscrypt.NativeRef$EVP_PKEY)
com.esotericsoftware.kryo.io.UnsafeMemoryOutput: UnsafeMemoryOutput(int)
androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
org.conscrypt.ct.CertificateEntry: byte[] getIssuerKeyHash()
org.conscrypt.NativeCrypto: byte[] get_X509_cert_info_enc(long,org.conscrypt.OpenSSLX509Certificate)
org.conscrypt.OpenSSLSocketFactoryImpl: java.net.Socket createSocket()
org.conscrypt.NativeSsl: int getPendingReadableBytes()
com.esotericsoftware.kryo.util.ObjectMap$Entries: boolean hasNext()
org.conscrypt.OpenSSLCipherRSA$OAEP: int paddedBlockSizeBytes()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets createWindowInsetsInstance()
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomStart()
com.esotericsoftware.kryo.util.IntMap$Entries: com.esotericsoftware.kryo.util.IntMap$Entry next()
com.esotericsoftware.kryo.serializers.DefaultSerializers$DateSerializer: java.lang.Object copy(com.esotericsoftware.kryo.Kryo,java.lang.Object)
org.conscrypt.Conscrypt: void setUseSessionTickets(javax.net.ssl.SSLEngine,boolean)
com.esotericsoftware.kryo.serializers.TimeSerializers$MonthDaySerializer: TimeSerializers$MonthDaySerializer(com.esotericsoftware.kryo.serializers.TimeSerializers$1)
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection$4: SynchronizedCollectionsSerializer$SynchronizedCollection$4(java.lang.String,int,java.lang.Class,java.lang.reflect.Field)
com.esotericsoftware.kryo.serializers.DefaultSerializers$StringBuilderSerializer: java.lang.StringBuilder read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatElevation()
com.esotericsoftware.kryo.serializers.TimeSerializers$LocalDateTimeSerializer: TimeSerializers$LocalDateTimeSerializer()
com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.Registration getRegistration(java.lang.Class)
com.esotericsoftware.kryo.serializers.FieldSerializer: FieldSerializer(com.esotericsoftware.kryo.Kryo,java.lang.Class)
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection$1: SynchronizedCollectionsSerializer$SynchronizedCollection$1(java.lang.String,int,java.lang.Class,java.lang.reflect.Field)
org.conscrypt.ClientSessionContext: org.conscrypt.NativeSslSession getSession(java.lang.String,int)
com.google.android.material.chip.Chip: void setChipStartPadding(float)
org.conscrypt.OpenSSLRandom: byte[] engineGenerateSeed(int)
com.esotericsoftware.minlog.Log: void set(int)
com.esotericsoftware.kryo.serializers.DeflateSerializer: DeflateSerializer(com.esotericsoftware.kryo.Serializer)
org.conscrypt.OpenSSLEvpCipherAES$AES_256$ECB$PKCS5Padding: OpenSSLEvpCipherAES$AES_256$ECB$PKCS5Padding()
org.conscrypt.OpenSSLEvpCipherAES$AES_128$CBC$NoPadding: OpenSSLEvpCipherAES$AES_128$CBC$NoPadding()
com.esotericsoftware.kryo.io.UnsafeMemoryInput: int[] readInts(int,boolean)
org.conscrypt.AbstractConscryptSocket: boolean isDelegating()
androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeIntField: void copy(java.lang.Object,java.lang.Object)
org.conscrypt.NativeCrypto: int SSL_max_seal_overhead(long,org.conscrypt.NativeSsl)
com.esotericsoftware.kryo.util.IntArray: void reverse()
org.conscrypt.NativeCrypto: long getRSAPrivateKeyWrapper(java.security.PrivateKey,byte[])
com.esotericsoftware.kryo.util.IdentityMap$MapIterator: void reset()
com.esotericsoftware.kryo.serializers.DefaultSerializers$CharSerializer: java.lang.Character read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
androidx.recyclerview.widget.RecyclerView: void dispatchRestoreInstanceState(android.util.SparseArray)
com.esotericsoftware.reflectasm.MethodAccess: com.esotericsoftware.reflectasm.MethodAccess get(java.lang.Class)
org.conscrypt.NativeCrypto: long asn1_read_init(byte[])
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: byte[] getChannelId()
de.javakaffee.kryoserializers.CompatibleFieldSerializerReflectionFactorySupport: CompatibleFieldSerializerReflectionFactorySupport(com.esotericsoftware.kryo.Kryo,java.lang.Class)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$IntArraySerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.OpenSSLBIOSource$ByteBufferInputStream: void reset()
com.esotericsoftware.kryo.serializers.TaggedFieldSerializer: void removeField(com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField)
org.conscrypt.NativeCrypto: void checkAvailability()
org.conscrypt.AbstractConscryptEngine: void setHandshakeListener(org.conscrypt.HandshakeListener)
org.conscrypt.FileClientSessionCache$CacheFile: long lastModified()
com.esotericsoftware.kryo.serializers.DefaultSerializers$BigDecimalSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField: void copy(java.lang.Object,java.lang.Object)
org.conscrypt.ConscryptServerSocket: java.lang.String[] getSupportedProtocols()
com.esotericsoftware.minlog.Log: void setLogger(com.esotericsoftware.minlog.Log$Logger)
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.esotericsoftware.kryo.util.FastestStreamFactory: com.esotericsoftware.kryo.io.Input getInput(java.io.InputStream,int)
org.conscrypt.KeyManagerImpl: java.lang.String[] getClientAliases(java.lang.String,java.security.Principal[])
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$FloatArraySerializer: DefaultArraySerializers$FloatArraySerializer()
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat build()
androidx.recyclerview.widget.RecyclerView: void onEnterLayoutOrScroll()
org.conscrypt.ConscryptEngine: void onNewSessionEstablished(long)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpec(com.google.android.material.animation.MotionSpec)
com.esotericsoftware.kryo.util.IntMap$Entry: java.lang.String toString()
com.esotericsoftware.kryo.serializers.TaggedFieldSerializerConfig: com.esotericsoftware.kryo.serializers.TaggedFieldSerializerConfig clone()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipStrokeColor()
org.conscrypt.ConscryptEngine: byte[] getTlsUnique()
org.conscrypt.OpenSSLSocketImpl: void setHandshakeTimeout(int)
org.conscrypt.OpenSSLContextImpl$TLSv11: OpenSSLContextImpl$TLSv11()
org.conscrypt.Platform: org.conscrypt.ct.CTLogStore newDefaultLogStore()
de.javakaffee.kryoserializers.RegexSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.util.ObjectMap$Keys: java.util.Iterator iterator()
com.esotericsoftware.kryo.util.IdentityMap: com.esotericsoftware.kryo.util.IdentityMap$Entries entries()
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()
com.google.android.material.textfield.TextInputLayout: int getBaseline()
androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback)
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
com.esotericsoftware.kryo.util.IdentityMap: java.lang.Object findKey(java.lang.Object,boolean)
org.conscrypt.NativeCryptoJni: NativeCryptoJni()
com.esotericsoftware.reflectasm.FieldAccess: FieldAccess()
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
org.conscrypt.NativeCrypto: boolean asn1_read_is_empty(long)
org.conscrypt.OAEPParameters: java.lang.String engineToString()
androidx.recyclerview.widget.RecyclerView: void addOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener)
org.conscrypt.NativeCrypto: void SSL_set1_tls_channel_id(long,org.conscrypt.NativeSsl,org.conscrypt.NativeRef$EVP_PKEY)
org.conscrypt.ct.CTLogInfo: CTLogInfo(java.security.PublicKey,java.lang.String,java.lang.String)
com.esotericsoftware.kryo.io.UnsafeOutput: UnsafeOutput(int,int)
com.esotericsoftware.kryo.io.ByteBufferInput: int read()
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: void setUseClientMode(boolean)
com.esotericsoftware.kryo.io.UnsafeInput: int readInt()
org.conscrypt.Conscrypt: void setChannelIdEnabled(javax.net.ssl.SSLEngine,boolean)
com.esotericsoftware.kryo.serializers.FieldSerializer: FieldSerializer(com.esotericsoftware.kryo.Kryo,java.lang.Class,java.lang.Class[],com.esotericsoftware.kryo.serializers.FieldSerializerConfig)
org.conscrypt.OpenSSLBIOSource: long getContext()
org.conscrypt.SSLParametersImpl: boolean getNeedClientAuth()
com.esotericsoftware.kryo.util.FastestStreamFactory: com.esotericsoftware.kryo.io.Output getOutput(java.io.OutputStream)
com.google.android.material.datepicker.MaterialCalendarGridView: MaterialCalendarGridView(android.content.Context,android.util.AttributeSet)
com.esotericsoftware.kryo.Kryo: Kryo(com.esotericsoftware.kryo.ClassResolver,com.esotericsoftware.kryo.ReferenceResolver)
org.conscrypt.ConscryptEngineSocket: boolean getUseClientMode()
org.conscrypt.OpenSSLX509CRL: byte[] getSigAlgParams()
org.conscrypt.OpenSSLMessageDigestJDK$SHA224: OpenSSLMessageDigestJDK$SHA224()
com.google.android.material.bottomappbar.BottomAppBar: void setCradleVerticalOffset(float)
org.conscrypt.OpenSSLRSAPrivateKey: int hashCode()
org.conscrypt.ECParameters: void engineInit(byte[],java.lang.String)
androidx.recyclerview.widget.RecyclerView: void markKnownViewsInvalid()
com.esotericsoftware.kryo.serializers.FieldSerializerUnsafeUtilImpl: void createUnsafeCacheFieldsAndRegions(java.util.List,java.util.List,int,com.esotericsoftware.kryo.util.IntArray)
com.esotericsoftware.kryo.util.IdentityMap$Keys: java.util.ArrayList toArray()
com.esotericsoftware.kryo.io.ByteBufferOutputStream: void setByteBuffer(java.nio.ByteBuffer)
org.conscrypt.ConscryptEngineSocket: org.conscrypt.BufferAllocator access$600(org.conscrypt.ConscryptEngineSocket)
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior()
org.conscrypt.OpenSSLECDHKeyAgreement: void checkCompleted()
org.conscrypt.OpenSSLX509CRLEntry: java.util.Date getRevocationDate()
com.google.android.material.card.MaterialCardView: void setRippleColor(android.content.res.ColorStateList)
androidx.recyclerview.widget.RecyclerView: void offsetPositionRecordsForInsert(int,int)
com.esotericsoftware.kryo.util.ListReferenceResolver: java.lang.Object getReadObject(java.lang.Class,int)
org.conscrypt.SSLParametersImpl: void setEnabledCipherSuites(java.lang.String[])
org.conscrypt.X509PublicKey: X509PublicKey(java.lang.String,byte[])
androidx.appcompat.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)
com.esotericsoftware.kryo.io.KryoDataInput: double readDouble()
org.conscrypt.NativeRef$EC_POINT: NativeRef$EC_POINT(long)
org.conscrypt.TrustManagerImpl: void checkBlacklist(java.security.cert.X509Certificate)
org.conscrypt.ActiveSession: void setLastAccessedTime(long)
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreScroll(int,int,int[],int[],int)
org.conscrypt.ClientSessionContext: org.conscrypt.NativeSslSession getCachedSession(java.lang.String,int,org.conscrypt.SSLParametersImpl)
com.google.android.material.chip.Chip: void setTextEndPadding(float)
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection$2: java.lang.Object create(java.lang.Object)
org.conscrypt.NativeCrypto: long SSL_get_timeout(long,org.conscrypt.NativeSsl)
org.conscrypt.Platform: javax.net.ssl.SSLSession wrapSSLSession(org.conscrypt.ExternalSession)
org.conscrypt.NativeCrypto: long PEM_read_bio_X509(long)
com.esotericsoftware.reflectasm.FieldAccess: void setInt(java.lang.Object,int,int)
org.conscrypt.OpenSSLCipher: int engineGetOutputSize(int)
org.conscrypt.ConscryptServerSocket: boolean getEnableSessionCreation()
org.conscrypt.OpenSSLEvpCipherAES$AES_256: void checkSupportedKeySize(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()
com.google.android.material.bottomappbar.BottomAppBar: boolean getHideOnScroll()
org.conscrypt.NativeSslSession: java.lang.String getCipherSuite()
org.conscrypt.OpenSSLEvpCipherARC4: java.lang.String getBaseCipherName()
com.esotericsoftware.kryo.serializers.ClosureSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.serializers.CollectionSerializer: CollectionSerializer(java.lang.Class,com.esotericsoftware.kryo.Serializer,boolean)
de.javakaffee.kryoserializers.SubListSerializers$JavaUtilSubListSerializer: SubListSerializers$JavaUtilSubListSerializer()
com.esotericsoftware.kryo.Serializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.serializers.CompatibleFieldSerializer: CompatibleFieldSerializer(com.esotericsoftware.kryo.Kryo,java.lang.Class)
com.esotericsoftware.kryo.serializers.DefaultSerializers$DateSerializer: java.util.Date copy(com.esotericsoftware.kryo.Kryo,java.util.Date)
com.esotericsoftware.kryo.serializers.FieldSerializer: void removeField(com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField)
com.esotericsoftware.kryo.io.KryoDataOutput: void writeDouble(double)
org.conscrypt.OpenSSLRSAPrivateCrtKey: void readParams(byte[][])
org.conscrypt.ConscryptEngine: javax.net.ssl.SSLEngineResult$HandshakeStatus handshake()
org.conscrypt.NativeSslSession: org.conscrypt.NativeSslSession newInstance(org.conscrypt.AbstractSessionContext,byte[],java.lang.String,int)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: void setOOBInline(boolean)
com.esotericsoftware.kryo.serializers.Generics: void add(java.lang.String,java.lang.Class)
org.conscrypt.OpenSSLSocketImpl: java.net.InetAddress getLocalAddress()
org.conscrypt.KitKatPlatformOpenSSLSocketAdapterFactory: java.net.Socket wrap(org.conscrypt.OpenSSLSocketImpl)
androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)
com.google.android.material.bottomappbar.BottomAppBar: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
org.conscrypt.NativeCrypto: int EVP_CIPHER_iv_length(long)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: javax.net.ssl.SSLParameters getSSLParameters()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
com.esotericsoftware.minlog.Log$Logger: void print(java.lang.String)
org.conscrypt.OpenSSLX509Certificate: byte[] getExtensionValue(java.lang.String)
com.esotericsoftware.kryo.serializers.TimeSerializers$MonthDaySerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.OpenSSLSocketImpl: java.lang.String getHostnameOrIP()
org.conscrypt.OpenSSLKey: java.security.PrivateKey getPrivateKey()
com.esotericsoftware.kryo.io.UnsafeMemoryInput: char readChar()
de.javakaffee.kryoserializers.SubListSerializers$JavaUtilSubListSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection$1: java.lang.Object create(java.lang.Object)
com.google.android.material.chip.Chip: void setChipStartPaddingResource(int)
org.conscrypt.ConscryptEngineSocket: java.lang.String getHandshakeApplicationProtocol()
com.esotericsoftware.kryo.io.ByteBufferOutputStream: ByteBufferOutputStream(java.nio.ByteBuffer)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$LongArraySerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.Java7ExtendedSSLSession: java.security.Principal getPeerPrincipal()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatSeekBar createSeekBar(android.content.Context,android.util.AttributeSet)
org.conscrypt.OpenSSLCipher: java.lang.String getBaseCipherName()
androidx.recyclerview.widget.RecyclerView: void invalidateItemDecorations()
org.conscrypt.NativeCrypto: int EC_GROUP_get_degree(org.conscrypt.NativeRef$EC_GROUP)
de.javakaffee.kryoserializers.BitSetSerializer: BitSetSerializer()
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
org.conscrypt.OpenSSLAeadCipherAES$GCM_SIV$AES_128: void checkSupportedKeySize(int)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: void setTrafficClass(int)
org.conscrypt.OpenSSLX509CRL: byte[] getExtensionValue(java.lang.String)
androidx.cardview.widget.CardView: android.content.res.ColorStateList getCardBackgroundColor()
com.esotericsoftware.kryo.io.UnsafeInput: UnsafeInput(byte[])
org.conscrypt.NativeCrypto: void chacha20_encrypt_decrypt(byte[],int,byte[],int,int,byte[],byte[],int)
com.esotericsoftware.kryo.util.Util: java.lang.String className(java.lang.Class)
androidx.core.view.WindowInsetsCompat$Impl: int hashCode()
com.google.android.material.chip.Chip: void setCheckedIconEnabled(boolean)
org.conscrypt.ct.CTVerifier: org.conscrypt.ct.CTVerificationResult verifySignedCertificateTimestamps(org.conscrypt.OpenSSLX509Certificate[],byte[],byte[])
com.esotericsoftware.kryo.serializers.AsmCacheFields: AsmCacheFields()
com.esotericsoftware.kryo.io.KryoDataOutput: void writeShort(int)
com.esotericsoftware.kryo.serializers.FieldSerializer: int compare(java.lang.Object,java.lang.Object)
org.conscrypt.EvpMdRef: java.lang.String getJcaDigestAlgorithmStandardNameFromEVP_MD(long)
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmBooleanField: void read(com.esotericsoftware.kryo.io.Input,java.lang.Object)
org.conscrypt.ConscryptFileDescriptorSocket: void setEnabledCipherSuites(java.lang.String[])
com.esotericsoftware.minlog.Log: void trace(java.lang.String,java.lang.Throwable)
org.conscrypt.GCMParameters: java.security.spec.AlgorithmParameterSpec engineGetParameterSpec(java.lang.Class)
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
org.conscrypt.OpenSSLKey: org.conscrypt.OpenSSLKey getOpenSSLKey(java.security.PrivateKey)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeObjectField: void setField(java.lang.Object,java.lang.Object)
org.conscrypt.ConscryptEngineSocket: void waitForHandshake()
com.esotericsoftware.kryo.serializers.FieldSerializer$Optional: java.lang.String value()
com.google.android.material.chip.Chip: void setShowMotionSpecResource(int)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$CharArraySerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,char[])
androidx.recyclerview.widget.RecyclerView: void pullGlows(float,float,float,float)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: void setHostname(java.lang.String)
com.esotericsoftware.kryo.util.DefaultClassResolver: com.esotericsoftware.kryo.Registration readName(com.esotericsoftware.kryo.io.Input)
org.conscrypt.NativeCrypto$SSLHandshakeCallbacks: void verifyCertificateChain(byte[][],java.lang.String)
com.esotericsoftware.kryo.io.Output: boolean require(int)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior(android.content.Context,android.util.AttributeSet)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
org.conscrypt.OpenSSLEvpCipherAES$AES: void checkSupportedKeySize(int)
com.google.android.material.circularreveal.CircularRevealFrameLayout: int getCircularRevealScrimColor()
org.conscrypt.NativeRef$EC_GROUP: NativeRef$EC_GROUP(long)
org.conscrypt.NativeCrypto: long X509_get_pubkey(long,org.conscrypt.OpenSSLX509Certificate)
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.esotericsoftware.minlog.Log: void error(java.lang.String)
com.esotericsoftware.kryo.io.Output: void writeString(java.lang.CharSequence)
androidx.appcompat.app.AppCompatViewInflater: android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean)
org.conscrypt.ConscryptEngine: java.lang.Runnable getDelegatedTask()
org.conscrypt.KeyGeneratorImpl$DESEDE: byte[] doKeyGeneration(int)
org.conscrypt.ClientSessionContext: void removeSession(org.conscrypt.ClientSessionContext$HostAndPort,org.conscrypt.NativeSslSession)
org.conscrypt.Conscrypt: org.conscrypt.Conscrypt$Version version()
com.esotericsoftware.kryo.serializers.BeanSerializer$CachedProperty: void set(java.lang.Object,java.lang.Object)
com.esotericsoftware.kryo.pool.SoftReferenceQueue: int hashCode()
org.conscrypt.NativeCrypto: long asn1_write_init()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
de.javakaffee.kryoserializers.cglib.CGLibProxySerializer: java.lang.Object createProxy(java.lang.Class,java.lang.Class[],net.sf.cglib.proxy.Callback[])
org.conscrypt.AbstractConscryptSocket: boolean getTcpNoDelay()
org.conscrypt.SSLParametersImpl: javax.net.ssl.X509KeyManager getX509KeyManager()
org.conscrypt.AbstractConscryptSocket: byte[] getNpnSelectedProtocol()
com.esotericsoftware.reflectasm.FieldAccess: void setBoolean(java.lang.Object,int,boolean)
org.conscrypt.OpenSSLKey: org.conscrypt.OpenSSLKey fromECPrivateKeyForTLSStackOnly(java.security.PrivateKey,java.security.spec.ECParameterSpec)
org.conscrypt.NativeCrypto: void asn1_write_flush(long)
org.conscrypt.ServerSessionContext: void onBeforeRemoveSession(org.conscrypt.NativeSslSession)
org.conscrypt.SSLUtils: byte[] toProtocolBytes(java.lang.String)
com.esotericsoftware.reflectasm.ConstructorAccess: com.esotericsoftware.reflectasm.ConstructorAccess get(java.lang.Class)
com.esotericsoftware.kryo.serializers.BlowfishSerializer: java.lang.Object copy(com.esotericsoftware.kryo.Kryo,java.lang.Object)
com.esotericsoftware.kryo.util.ListReferenceResolver: void reset()
org.conscrypt.ct.Serialization: Serialization()
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeShortField: void write(com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setEndIconOnClickListener(android.view.View$OnClickListener)
org.conscrypt.TrustedCertificateIndex: void reset(java.util.Set)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
org.conscrypt.ConscryptFileDescriptorSocket: ConscryptFileDescriptorSocket(java.net.Socket,java.lang.String,int,boolean,org.conscrypt.SSLParametersImpl)
org.conscrypt.ConscryptFileDescriptorSocket: java.lang.String chooseClientAlias(javax.net.ssl.X509KeyManager,javax.security.auth.x500.X500Principal[],java.lang.String[])
de.javakaffee.kryoserializers.guava.ReverseListSerializer$RandomAccessReverseList: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.pool.SoftReferenceQueue: boolean addAll(java.util.Collection)
com.esotericsoftware.kryo.Kryo$DefaultInstantiatorStrategy: org.objenesis.instantiator.ObjectInstantiator newInstantiatorOf(java.lang.Class)
org.conscrypt.NativeCrypto: void asn1_read_free(long)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
org.conscrypt.AbstractSessionContext: AbstractSessionContext(int)
org.conscrypt.KeyGeneratorImpl: void engineInit(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)
com.esotericsoftware.kryo.serializers.ExternalizableSerializer: com.esotericsoftware.kryo.serializers.JavaSerializer getJavaSerializerIfRequired(java.lang.Class)
com.google.android.material.chip.Chip: void setIconEndPadding(float)
com.esotericsoftware.kryo.serializers.ExternalizableSerializer: ExternalizableSerializer()
org.conscrypt.SSLNullSession: java.lang.Object getValue(java.lang.String)
org.conscrypt.OpenSSLEvpCipherDESEDE$CBC: OpenSSLEvpCipherDESEDE$CBC(org.conscrypt.OpenSSLCipher$Padding)
org.conscrypt.AbstractConscryptSocket: void sendUrgentData(int)
com.esotericsoftware.minlog.Log: void info(java.lang.String)
com.esotericsoftware.kryo.serializers.DeflateSerializer: void setNoHeaders(boolean)
org.conscrypt.ct.CTVerificationResult: CTVerificationResult()
org.conscrypt.SSLUtils$SessionType: org.conscrypt.SSLUtils$SessionType[] values()
org.conscrypt.NativeCrypto: void HMAC_Update(org.conscrypt.NativeRef$HMAC_CTX,byte[],int,int)
org.conscrypt.OpenSSLMessageDigestJDK: java.lang.Object clone()
org.conscrypt.NativeCrypto: byte[] X509_REVOKED_get_serialNumber(long)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
com.esotericsoftware.kryo.serializers.TimeSerializers$YearMonthSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.time.YearMonth)
com.google.android.material.chip.Chip: Chip(android.content.Context,android.util.AttributeSet)
org.conscrypt.TrustManagerImpl: java.security.cert.TrustAnchor findTrustAnchorBySubjectAndPublicKey(java.security.cert.X509Certificate)
org.conscrypt.Conscrypt: java.security.Provider newProvider(java.lang.String)
org.conscrypt.OpenSSLECPrivateKey: java.lang.String getAlgorithm()
org.conscrypt.AbstractConscryptSocket: void setAlpnProtocols(java.lang.String[])
org.conscrypt.ExternalSession: java.lang.String getProtocol()
com.esotericsoftware.kryo.serializers.TimeSerializers$DurationSerializer: java.time.Duration read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.Platform: org.conscrypt.ConscryptFileDescriptorSocket createFileDescriptorSocket(java.net.InetAddress,int,java.net.InetAddress,int,org.conscrypt.SSLParametersImpl)
org.conscrypt.ActiveSession: ActiveSession(org.conscrypt.NativeSsl,org.conscrypt.AbstractSessionContext)
io.paperdb.Paper: void delete(java.lang.String)
com.esotericsoftware.kryo.io.ByteBufferInput: ByteBufferInput(java.io.InputStream,int)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setVisibility(int)
com.esotericsoftware.kryo.serializers.DefaultSerializers$TimeZoneSerializer: java.util.TimeZone read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.SSLParametersImpl: boolean getUseSni()
com.esotericsoftware.kryo.Kryo: int getDepth()
de.javakaffee.kryoserializers.SubListSerializers$JavaUtilSubListSerializer: java.util.List read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.serializers.DefaultSerializers$BigIntegerSerializer: DefaultSerializers$BigIntegerSerializer()
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreFling(float,float)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
org.conscrypt.ConscryptEngine: void setSSLParameters(javax.net.ssl.SSLParameters)
com.esotericsoftware.kryo.serializers.ObjectField$ObjectLongField: void copy(java.lang.Object,java.lang.Object)
androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)
org.conscrypt.ct.VerifiedSCT$Status: org.conscrypt.ct.VerifiedSCT$Status valueOf(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
org.conscrypt.PSSParameters: byte[] engineGetEncoded(java.lang.String)
de.javakaffee.kryoserializers.SubListSerializers: java.lang.Object access$000()
androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
org.conscrypt.OpenSSLKey: java.security.PublicKey getPublicKey()
org.conscrypt.Java8EngineWrapper: javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer)
org.conscrypt.EvpMdRef: java.lang.String getJcaDigestAlgorithmStandardName(java.lang.String)
org.conscrypt.AbstractConscryptSocket: void setNpnProtocols(byte[])
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
org.conscrypt.OpenSSLSignature$RSAPSSPadding: OpenSSLSignature$RSAPSSPadding(long,java.lang.String,int)
org.conscrypt.ConscryptEngine: void setUseClientMode(boolean)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: void setPerformancePreferences(int,int,int)
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
org.conscrypt.ECParameters: void engineInit(byte[])
com.esotericsoftware.kryo.serializers.TaggedFieldSerializer$Tag: int value()
org.conscrypt.SessionSnapshot: long getLastAccessedTime()
org.conscrypt.Conscrypt: boolean isConscrypt(javax.net.ssl.SSLContext)
org.conscrypt.OpenSSLECPrivateKey: void readObject(java.io.ObjectInputStream)
com.google.android.material.internal.CheckableImageButton: void setPressed(boolean)
org.conscrypt.OpenSSLSignatureRawECDSA: void engineInitVerify(java.security.PublicKey)
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.esotericsoftware.kryo.io.UnsafeMemoryInput: UnsafeMemoryInput(java.io.InputStream,int)
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection$7: java.lang.Object create(java.lang.Object)
androidx.appcompat.app.AppCompatViewInflater: void checkOnClickListener(android.view.View,android.util.AttributeSet)
org.conscrypt.SSLParametersImpl: java.security.AlgorithmConstraints getAlgorithmConstraints()
de.javakaffee.kryoserializers.KryoReflectionFactorySupport: java.lang.Object newInstanceFromReflectionFactory(java.lang.Class)
org.conscrypt.OpenSSLCipher: OpenSSLCipher()
org.conscrypt.Java8EngineWrapper: byte[] getTlsUnique()
de.javakaffee.kryoserializers.FieldAnnotationAwareSerializer: FieldAnnotationAwareSerializer(com.esotericsoftware.kryo.Kryo,java.lang.Class,java.util.Collection,boolean)
com.google.android.material.chip.Chip: void setIconEndPaddingResource(int)
org.conscrypt.SSLParametersImpl: org.conscrypt.AbstractSessionContext getSessionContext()
org.conscrypt.NativeCrypto: int EVP_CipherUpdate(org.conscrypt.NativeRef$EVP_CIPHER_CTX,byte[],int,byte[],int,int)
com.esotericsoftware.kryo.io.ByteBufferOutput: void writeLong(long)
org.conscrypt.NativeCrypto: long create_BIO_InputStream(org.conscrypt.OpenSSLBIOInputStream,boolean)
com.esotericsoftware.kryo.serializers.TimeSerializers$OffsetTimeSerializer: TimeSerializers$OffsetTimeSerializer()
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(android.graphics.drawable.Drawable)
org.conscrypt.NativeCrypto: long EC_KEY_get_public_key(org.conscrypt.NativeRef$EVP_PKEY)
org.conscrypt.AbstractSessionContext$2: byte[] nextElement()
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
org.conscrypt.NativeCrypto: byte[] asn1_read_octetstring(long)
org.conscrypt.OpenSSLBIOSource$ByteBufferInputStream: long skip(long)
org.conscrypt.NativeSsl$BioWrapper: void close()
org.conscrypt.ActiveSession: java.lang.Object getValue(java.lang.String)
com.esotericsoftware.kryo.serializers.FieldSerializer: void removeField(java.lang.String)
org.conscrypt.NativeSsl: void interrupt()
com.google.android.material.button.MaterialButton: void setElevation(float)
org.conscrypt.OpenSSLRSAKeyFactory: java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)
org.conscrypt.OpenSSLSocketFactoryImpl: boolean hasFileDescriptor(java.net.Socket)
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(android.graphics.drawable.Drawable)
org.conscrypt.NativeCrypto: int SSL_read(long,org.conscrypt.NativeSsl,java.io.FileDescriptor,org.conscrypt.NativeCrypto$SSLHandshakeCallbacks,byte[],int,int,int)
com.esotericsoftware.kryo.io.ByteBufferInput: short readShort()
org.conscrypt.ConscryptSession: java.lang.String getRequestedServerName()
org.conscrypt.TrustManagerImpl: org.conscrypt.ConscryptHostnameVerifier getHostnameVerifier()
org.conscrypt.ActiveSession: java.lang.String getCipherSuite()
org.conscrypt.AbstractConscryptSocket: java.nio.channels.SocketChannel getChannel()
com.esotericsoftware.kryo.pool.SoftReferenceQueue: boolean remove(java.lang.Object)
de.javakaffee.kryoserializers.BitSetSerializer: java.lang.Object copy(com.esotericsoftware.kryo.Kryo,java.lang.Object)
androidx.recyclerview.widget.RecyclerView: void findMinMaxChildLayoutPositions(int[])
com.esotericsoftware.kryo.io.KryoObjectOutput: void close()
com.esotericsoftware.kryo.io.Input: long total()
androidx.recyclerview.widget.RecyclerView: void assertInLayoutOrScroll(java.lang.String)
com.esotericsoftware.reflectasm.FieldAccess: void setLong(java.lang.Object,int,long)
com.esotericsoftware.kryo.io.ByteBufferOutput: void writeString_slow(java.lang.CharSequence,int,int)
androidx.recyclerview.widget.RecyclerView: void addOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener)
androidx.recyclerview.widget.RecyclerView: void ensureLeftGlow()
org.conscrypt.IvParameters: byte[] engineGetEncoded()
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection$3: java.lang.Object create(java.lang.Object)
com.google.android.material.chip.Chip: void setMaxLines(int)
org.conscrypt.ActiveSession: void onPeerCertificatesReceived(java.lang.String,int,java.security.cert.X509Certificate[])
org.conscrypt.Java8EngineSocket: Java8EngineSocket(org.conscrypt.SSLParametersImpl)
org.conscrypt.NativeCrypto: int RSA_size(org.conscrypt.NativeRef$EVP_PKEY)
androidx.recyclerview.widget.RecyclerView: void ensureBottomGlow()
com.esotericsoftware.kryo.serializers.ObjectField$ObjectIntField: ObjectField$ObjectIntField(com.esotericsoftware.kryo.serializers.FieldSerializer)
de.javakaffee.kryoserializers.JdkProxySerializer: JdkProxySerializer()
org.conscrypt.NativeCrypto: long SSL_get1_session(long,org.conscrypt.NativeSsl)
com.esotericsoftware.kryo.Kryo: org.objenesis.instantiator.ObjectInstantiator newInstantiator(java.lang.Class)
org.conscrypt.ConscryptEngine: java.lang.String[] getApplicationProtocols()
org.conscrypt.NativeSsl: void write(java.io.FileDescriptor,byte[],int,int,int)
com.esotericsoftware.kryo.io.Input: int read()
org.conscrypt.NativeSslSession: byte[] getId()
io.paperdb.PaperTable: PaperTable()
org.conscrypt.ExternalSession: long getCreationTime()
org.conscrypt.ConscryptEngineSocket: java.lang.String[] getEnabledProtocols()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
org.conscrypt.OpenSSLX509CertPath$Encoding: java.lang.String access$000(org.conscrypt.OpenSSLX509CertPath$Encoding)
com.esotericsoftware.kryo.serializers.CollectionSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.util.Collection)
com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)
org.conscrypt.NativeRef: int hashCode()
org.conscrypt.OpenSSLX509Certificate: int hashCode()
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeLongField: void read(com.esotericsoftware.kryo.io.Input,java.lang.Object)
com.esotericsoftware.kryo.util.FastestStreamFactory: com.esotericsoftware.kryo.io.Output getOutput(java.io.OutputStream,int)
com.esotericsoftware.kryo.io.ByteBufferOutput: ByteBufferOutput(java.nio.ByteBuffer)
com.esotericsoftware.kryo.util.DefaultStreamFactory: com.esotericsoftware.kryo.io.Output getOutput(java.io.OutputStream,int)
com.esotericsoftware.kryo.serializers.BlowfishSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
androidx.recyclerview.widget.RecyclerView: void animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
org.conscrypt.ConscryptEngine: void setApplicationProtocolSelector(org.conscrypt.ApplicationProtocolSelectorAdapter)
de.javakaffee.kryoserializers.SubListSerializers$ArrayListSubListSerializer: java.util.List copy(com.esotericsoftware.kryo.Kryo,java.util.List)
de.javakaffee.kryoserializers.jodatime.JodaIntervalSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
de.javakaffee.kryoserializers.guava.LinkedListMultimapSerializer: void registerSerializers(com.esotericsoftware.kryo.Kryo)
org.conscrypt.ConscryptEngineSocket: void setChannelIdEnabled(boolean)
com.esotericsoftware.kryo.io.KryoDataInput: boolean readBoolean()
org.conscrypt.OpenSSLEvpCipherAES$AES_128$ECB$PKCS5Padding: OpenSSLEvpCipherAES$AES_128$ECB$PKCS5Padding()
com.esotericsoftware.kryo.serializers.DefaultSerializers$CollectionsSingletonListSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.util.List)
com.google.android.material.card.MaterialCardView: void setStrokeColor(int)
androidx.recyclerview.widget.RecyclerView: void stopScrollersInternal()
org.conscrypt.NativeCrypto: void EVP_PKEY_CTX_set_rsa_pss_saltlen(long,int)
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
org.conscrypt.NativeSslSession$Impl$1: java.security.Principal getLocalPrincipal()
org.conscrypt.ct.CertificateEntry$LogEntryType: org.conscrypt.ct.CertificateEntry$LogEntryType[] values()
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmFloatField: AsmCacheFields$AsmFloatField()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getHintTextColor()
com.esotericsoftware.kryo.Registration: java.lang.String toString()
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeFloatField: void write(com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.serializers.OptionalSerializers$OptionalSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet)
com.esotericsoftware.kryo.io.ByteBufferInput: void skip(int)
com.esotericsoftware.kryo.serializers.FieldSerializer$CachedFieldFactory: com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField createCachedField(java.lang.Class,java.lang.reflect.Field,com.esotericsoftware.kryo.serializers.FieldSerializer)
com.esotericsoftware.kryo.io.ByteBufferOutput: void writeDoubles(double[])
com.esotericsoftware.kryo.io.KryoObjectInput: int read()
org.conscrypt.OpenSSLServerSocketFactoryImpl: java.net.ServerSocket createServerSocket()
androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollRange()
io.paperdb.serializer.NoArgCollectionSerializer: java.util.Collection create(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.ConscryptFileDescriptorSocket$SSLInputStream: int available()
org.conscrypt.NativeCrypto: void HMAC_CTX_free(long)
com.esotericsoftware.kryo.util.FastestStreamFactory: void setKryo(com.esotericsoftware.kryo.Kryo)
org.conscrypt.NativeSslSession$Impl$1: long getLastAccessedTime()
org.conscrypt.KeyManagerImpl: java.lang.String[] getServerAliases(java.lang.String,java.security.Principal[])
com.esotericsoftware.kryo.serializers.BlowfishSerializer: BlowfishSerializer(com.esotericsoftware.kryo.Serializer,byte[])
org.conscrypt.OpenSSLRSAPublicKey: void readObject(java.io.ObjectInputStream)
com.esotericsoftware.kryo.serializers.FieldSerializer: com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField newCachedField(java.lang.reflect.Field,int,int)
com.esotericsoftware.kryo.io.ByteBufferOutput: int writeVarInt(int,boolean)
androidx.recyclerview.widget.RecyclerView: void repositionShadowingViews()
com.esotericsoftware.kryo.serializers.DefaultSerializers$ClassSerializer: java.lang.Class read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
de.javakaffee.kryoserializers.guava.MultimapSerializerBase: MultimapSerializerBase(boolean,boolean)
com.esotericsoftware.kryo.Kryo: void writeClassAndObject(com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.factories.ReflectionSerializerFactory: com.esotericsoftware.kryo.Serializer makeSerializer(com.esotericsoftware.kryo.Kryo,java.lang.Class,java.lang.Class)
de.javakaffee.kryoserializers.jodatime.JodaLocalDateSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.io.ByteBufferOutput: boolean getVarIntsEnabled()
com.esotericsoftware.kryo.util.IntMap: void clear(int)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
org.conscrypt.ConscryptEngine: javax.net.ssl.SSLException newSslExceptionWithMessage(java.lang.String)
org.conscrypt.NativeCrypto: byte[] i2d_X509_CRL(long,org.conscrypt.OpenSSLX509CRL)
org.conscrypt.KeyGeneratorImpl$AES: KeyGeneratorImpl$AES()
org.conscrypt.Java8EngineWrapper: void setHandshakeApplicationProtocolSelector(java.util.function.BiFunction)
com.esotericsoftware.kryo.util.IntMap: int hash4(int)
androidx.cardview.widget.CardView: void setCardBackgroundColor(int)
org.conscrypt.ConscryptCertStore: java.security.cert.X509Certificate getTrustAnchor(java.security.cert.X509Certificate)
org.conscrypt.OpenSSLMac: void engineReset()
com.esotericsoftware.reflectasm.FieldAccess: java.lang.Class[] getFieldTypes()
de.javakaffee.kryoserializers.guava.LinkedListMultimapSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.serializers.GenericsResolver: void popScope()
org.conscrypt.PeerInfoProvider$1: java.lang.String getHostnameOrIP()
org.conscrypt.NativeSsl$BioWrapper: int writeDirectByteBuffer(long,int)
org.conscrypt.NativeCrypto: byte[] SSL_get_ocsp_response(long,org.conscrypt.NativeSsl)
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeDoubleField: void write(com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.NativeCrypto: byte[] EVP_DigestSignFinal(org.conscrypt.NativeRef$EVP_MD_CTX)
com.esotericsoftware.kryo.Kryo: boolean getReferences()
androidx.recyclerview.widget.RecyclerView: int getChildPosition(android.view.View)
org.conscrypt.OpenSSLSocketImpl: void setHostname(java.lang.String)
com.esotericsoftware.kryo.util.IntArray: IntArray(boolean,int[])
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior()
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ShortArraySerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: javax.net.ssl.SSLSession getSession()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getExtendMotionSpec()
org.conscrypt.Platform: org.conscrypt.ConscryptCertStore newDefaultCertStore()
com.google.android.material.chip.Chip: float getChipIconSize()
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeIntField: UnsafeCacheFields$UnsafeIntField(java.lang.reflect.Field)
org.conscrypt.OpenSSLRSAPublicKey: org.conscrypt.OpenSSLKey getOpenSSLKey()
com.google.android.material.textfield.TextInputLayout: void setEndIconActivated(boolean)
com.esotericsoftware.kryo.serializers.TaggedFieldSerializer$1: int compare(java.lang.Object,java.lang.Object)
com.esotericsoftware.kryo.io.UnsafeMemoryInput: short[] readShorts(int)
io.paperdb.KeyLocker: void acquireGlobal()
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: void setSoWriteTimeout(int)
org.conscrypt.OpenSSLX509Certificate: java.util.Collection getIssuerAlternativeNames()
org.conscrypt.OpenSSLEvpCipherAES$AES_256: OpenSSLEvpCipherAES$AES_256(org.conscrypt.OpenSSLCipher$Mode,org.conscrypt.OpenSSLCipher$Padding)
com.esotericsoftware.kryo.serializers.FieldSerializer: java.lang.Class[] getGenerics()
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.AbsActionBarView: int getContentHeight()
org.conscrypt.OpenSSLX509Certificate: void verify(java.security.PublicKey,java.lang.String)
org.conscrypt.OpenSSLSocketImpl: void setChannelIdEnabled(boolean)
org.conscrypt.OpenSSLSignatureRawRSA: void engineUpdate(byte[],int,int)
org.conscrypt.TrustManagerImpl$TrustAnchorComparator: TrustManagerImpl$TrustAnchorComparator()
de.javakaffee.kryoserializers.jodatime.JodaDateTimeSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
com.esotericsoftware.kryo.util.IntMap: void push(int,java.lang.Object,int,int,int,int,int,int,int,int)
org.conscrypt.Java8EngineWrapper: void setApplicationProtocols(java.lang.String[])
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
androidx.core.view.WindowInsetsCompat$Impl28: boolean equals(java.lang.Object)
org.conscrypt.ct.CertificateEntry$LogEntryType: org.conscrypt.ct.CertificateEntry$LogEntryType valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setChipCornerRadius(float)
org.conscrypt.OpenSSLContextImpl: javax.net.ssl.SSLSocketFactory engineGetSocketFactory()
com.esotericsoftware.kryo.util.IdentityObjectIntMap: int hash4(int)
com.esotericsoftware.kryo.serializers.MapSerializer$BindMap: boolean valuesCanBeNull()
com.esotericsoftware.kryo.io.Output: byte[] toBytes()
org.conscrypt.FileClientSessionCache$Impl: void delete(java.io.File)
com.esotericsoftware.kryo.serializers.DefaultSerializers$DateSerializer: DefaultSerializers$DateSerializer()
org.conscrypt.OpenSSLRSAPublicKey: OpenSSLRSAPublicKey(java.security.spec.RSAPublicKeySpec)
com.esotericsoftware.kryo.Kryo: Kryo(com.esotericsoftware.kryo.ClassResolver,com.esotericsoftware.kryo.ReferenceResolver,com.esotericsoftware.kryo.StreamFactory)
com.esotericsoftware.kryo.pool.SoftReferenceQueue: SoftReferenceQueue(java.util.Queue)
org.conscrypt.NativeCrypto: long EC_KEY_generate_key(org.conscrypt.NativeRef$EC_GROUP)
androidx.recyclerview.widget.RecyclerView: int getChildLayoutPosition(android.view.View)
com.esotericsoftware.kryo.serializers.FieldSerializerGenericsUtil: java.lang.Class[] getGenerics(java.lang.reflect.Type,com.esotericsoftware.kryo.Kryo)
com.esotericsoftware.kryo.io.KryoDataInput: float readFloat()
com.esotericsoftware.kryo.io.KryoDataOutput: void writeInt(int)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$IntArraySerializer: int[] read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
com.esotericsoftware.kryo.io.ByteBufferInput: float readFloat()
org.conscrypt.OpenSSLECPublicKey: byte[] getEncoded()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
de.javakaffee.kryoserializers.jodatime.JodaIntervalSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)
com.esotericsoftware.kryo.io.FastOutput: FastOutput(int,int)
org.conscrypt.Java8EngineWrapper: void beginHandshake()
com.esotericsoftware.kryo.serializers.DefaultSerializers$DateSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
androidx.recyclerview.widget.RecyclerView: boolean removeAnimatingView(android.view.View)
com.esotericsoftware.kryo.io.KryoDataOutput: void writeChars(java.lang.String)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: void setKeepAlive(boolean)
org.conscrypt.OpenSSLRSAPrivateKey: void readObject(java.io.ObjectInputStream)
com.esotericsoftware.kryo.serializers.DefaultSerializers$CalendarSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.util.Calendar)
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
com.esotericsoftware.kryo.util.IntArray: void addAll(com.esotericsoftware.kryo.util.IntArray,int,int)
com.esotericsoftware.kryo.io.Output: Output(byte[],int)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.esotericsoftware.kryo.util.IdentityMap: void putStash(java.lang.Object,java.lang.Object)
com.esotericsoftware.kryo.pool.SoftReferenceQueue: boolean contains(java.lang.Object)
com.esotericsoftware.kryo.serializers.DefaultSerializers$BigDecimalSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.math.BigDecimal)
com.esotericsoftware.kryo.serializers.DefaultSerializers$StringBufferSerializer: java.lang.StringBuffer read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmFloatField: void copy(java.lang.Object,java.lang.Object)
org.conscrypt.KeyGeneratorImpl$ChaCha20: void checkKeySize(int)
com.esotericsoftware.kryo.serializers.TimeSerializers$PeriodSerializer: TimeSerializers$PeriodSerializer(com.esotericsoftware.kryo.serializers.TimeSerializers$1)
com.google.android.material.chip.Chip: void setTextAppearance(com.google.android.material.resources.TextAppearance)
androidx.recyclerview.widget.RecyclerView: void requestChildOnScreen(android.view.View,android.view.View)
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
com.esotericsoftware.kryo.Kryo: void reference(java.lang.Object)
com.esotericsoftware.kryo.serializers.DefaultSerializers$TreeMapSerializer: java.util.Map createCopy(com.esotericsoftware.kryo.Kryo,java.util.Map)
com.esotericsoftware.kryo.util.FastestStreamFactory: com.esotericsoftware.kryo.io.Output getOutput(byte[],int)
com.esotericsoftware.kryo.util.ObjectMap$Entries: ObjectMap$Entries(com.esotericsoftware.kryo.util.ObjectMap)
com.esotericsoftware.kryo.ClassResolver: com.esotericsoftware.kryo.Registration register(com.esotericsoftware.kryo.Registration)
de.javakaffee.kryoserializers.SynchronizedCollectionsSerializer$SynchronizedCollection$2: SynchronizedCollectionsSerializer$SynchronizedCollection$2(java.lang.String,int,java.lang.Class,java.lang.reflect.Field)
com.esotericsoftware.kryo.serializers.VersionFieldSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.ExternalSession: byte[] getId()
org.conscrypt.IvParameters$AES: IvParameters$AES()
com.esotericsoftware.kryo.io.UnsafeOutput: void writeBytes(java.lang.Object,long,long)
org.conscrypt.OpenSSLRSAPrivateKey: void writeObject(java.io.ObjectOutputStream)
org.conscrypt.OpenSSLSocketImpl: boolean getKeepAlive()
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
org.conscrypt.OpenSSLRSAPrivateCrtKey: java.math.BigInteger getPrimeExponentQ()
de.javakaffee.kryoserializers.jodatime.IdentifiableChronology: java.lang.String getChronologyId(org.joda.time.Chronology)
com.google.android.material.chip.Chip: float getTextEndPadding()
com.esotericsoftware.kryo.io.InputChunked: InputChunked()
org.conscrypt.Conscrypt: void setApplicationProtocolSelector(javax.net.ssl.SSLEngine,org.conscrypt.ApplicationProtocolSelector)
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection$7: UnmodifiableCollectionsSerializer$UnmodifiableCollection$7(java.lang.String,int,java.lang.Class,java.lang.reflect.Field)
com.google.android.material.button.MaterialButton: int getIconSize()
org.conscrypt.OpenSSLECKeyFactory: java.security.Key engineTranslateKey(java.security.Key)
org.conscrypt.OpenSSLX509CertPath: java.security.cert.CertPath fromPkiPathEncoding(java.io.InputStream)
com.esotericsoftware.kryo.util.IdentityMap$Entries: boolean hasNext()
com.esotericsoftware.kryo.util.IntArray: void shrink()
com.esotericsoftware.kryo.serializers.ObjectField$ObjectFloatField: void copy(java.lang.Object,java.lang.Object)
com.esotericsoftware.kryo.util.IdentityMap$MapIterator: IdentityMap$MapIterator(com.esotericsoftware.kryo.util.IdentityMap)
com.esotericsoftware.kryo.pool.KryoPool$Builder: com.esotericsoftware.kryo.pool.KryoPool$Builder queue(java.util.Queue)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatPressedTranslationZ()
org.conscrypt.ActiveSession: byte[] getId()
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmObjectField: AsmCacheFields$AsmObjectField(com.esotericsoftware.kryo.serializers.FieldSerializer)
com.esotericsoftware.reflectasm.ConstructorAccess: boolean isNonStaticMemberClass()
com.esotericsoftware.kryo.io.UnsafeInput: long readLong(boolean)
com.esotericsoftware.kryo.util.IntMap: void shrink(int)
com.esotericsoftware.kryo.serializers.CollectionSerializer: CollectionSerializer(java.lang.Class,com.esotericsoftware.kryo.Serializer)
de.javakaffee.kryoserializers.guava.ReverseListSerializer$RandomAccessReverseList: java.lang.Object copy(com.esotericsoftware.kryo.Kryo,java.lang.Object)
org.conscrypt.OpenSSLCipher: OpenSSLCipher(org.conscrypt.OpenSSLCipher$Mode,org.conscrypt.OpenSSLCipher$Padding)
androidx.recyclerview.widget.RecyclerView: void resetFocusInfo()
com.esotericsoftware.reflectasm.FieldAccess: org.objectweb.asm.MethodVisitor insertThrowExceptionForFieldNotFound(org.objectweb.asm.MethodVisitor)
org.conscrypt.AbstractConscryptSocket: void setSoWriteTimeout(int)
com.esotericsoftware.kryo.io.UnsafeMemoryOutput: void writeLongs(long[])
de.javakaffee.kryoserializers.guava.ImmutableSetSerializer: void registerSerializers(com.esotericsoftware.kryo.Kryo)
org.conscrypt.OpenSSLECPointContext: org.conscrypt.NativeRef$EC_POINT getNativeRef()
com.esotericsoftware.kryo.serializers.MapSerializer: java.util.Map copy(com.esotericsoftware.kryo.Kryo,java.util.Map)
org.conscrypt.NativeCrypto: int RSA_private_decrypt(int,byte[],byte[],org.conscrypt.NativeRef$EVP_PKEY,int)
com.google.android.material.card.MaterialCardView: int getContentPaddingTop()
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
com.esotericsoftware.kryo.util.IdentityObjectIntMap: void clear(int)
androidx.recyclerview.widget.RecyclerView: void removeItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration)
org.conscrypt.NativeCrypto: void SSL_SESSION_free(long)
com.esotericsoftware.kryo.io.Output: void write(byte[])
com.google.android.material.button.MaterialButton: int getStrokeWidth()
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
org.conscrypt.OpenSSLBIOSink: byte[] toByteArray()
com.esotericsoftware.kryo.util.IntMap$MapIterator: IntMap$MapIterator(com.esotericsoftware.kryo.util.IntMap)
androidx.recyclerview.widget.RecyclerView: void recoverFocusFromState()
org.conscrypt.NativeCrypto: long SSL_clear_options(long,org.conscrypt.NativeSsl,long)
org.conscrypt.OpenSSLCipherRSA: void engineSetMode(java.lang.String)
androidx.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
org.conscrypt.OpenSSLECPrivateKey: void writeObject(java.io.ObjectOutputStream)
androidx.recyclerview.widget.RecyclerView: int getAdapterPositionFor(androidx.recyclerview.widget.RecyclerView$ViewHolder)
org.conscrypt.ConscryptEngine: int readPlaintextDataDirect(java.nio.ByteBuffer,int,int)
com.esotericsoftware.kryo.util.UnsafeUtil: void releaseBuffer(java.nio.ByteBuffer)
org.conscrypt.Platform: org.conscrypt.ConscryptFileDescriptorSocket createFileDescriptorSocket(java.net.Socket,java.lang.String,int,boolean,org.conscrypt.SSLParametersImpl)
org.conscrypt.NativeSslSession: boolean isValid()
org.conscrypt.Java7ExtendedSSLSession: java.security.cert.Certificate[] getLocalCertificates()
org.conscrypt.OpenSSLX509CertPath: java.security.cert.CertPath fromEncoding(java.io.InputStream,org.conscrypt.OpenSSLX509CertPath$Encoding)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
org.conscrypt.SSLParametersImpl: boolean isCTVerificationEnabled(java.lang.String)
org.conscrypt.PeerInfoProvider$2: java.lang.String getHostname()
com.esotericsoftware.kryo.util.ObjectMap$Values: void toArray(java.util.ArrayList)
de.javakaffee.kryoserializers.CollectionsEmptyListSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.util.List)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeFloatField: UnsafeCacheFields$UnsafeFloatField(java.lang.reflect.Field)
org.conscrypt.NativeCrypto: void set_SSL_psk_server_callback_enabled(long,org.conscrypt.NativeSsl,boolean)
org.conscrypt.OpenSSLSocketImpl: java.net.SocketAddress getLocalSocketAddress()
org.conscrypt.NativeCrypto: long X509_dup(long,org.conscrypt.OpenSSLX509Certificate)
com.google.android.material.theme.MaterialComponentsViewInflater: MaterialComponentsViewInflater()
org.conscrypt.SSLParametersImpl: void setEnableSessionCreation(boolean)
com.esotericsoftware.kryo.util.Util: Util()
com.esotericsoftware.kryo.Kryo: void setStreamFactory(com.esotericsoftware.kryo.StreamFactory)
org.conscrypt.TrustManagerImpl: org.conscrypt.ConscryptHostnameVerifier getHttpsVerifier()
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
com.esotericsoftware.kryo.io.Output: void writeFloats(float[])
com.esotericsoftware.kryo.serializers.AsmCacheFields$AsmDoubleField: void read(com.esotericsoftware.kryo.io.Input,java.lang.Object)
org.conscrypt.ConscryptFileDescriptorSocket: ConscryptFileDescriptorSocket(java.net.InetAddress,int,java.net.InetAddress,int,org.conscrypt.SSLParametersImpl)
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setBackgroundResource(int)
org.conscrypt.OpenSSLAeadCipherAES$GCM_SIV: void checkSupportedTagLength(int)
org.conscrypt.TrustManagerImpl: void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String,javax.net.ssl.SSLEngine)
org.conscrypt.Java8EngineWrapper: boolean isInboundDone()
com.google.android.material.button.MaterialButton: void setInternalBackground(android.graphics.drawable.Drawable)
org.conscrypt.ChainStrengthAnalyzer: void checkCert(java.security.cert.X509Certificate)
com.esotericsoftware.kryo.Kryo$DefaultInstantiatorStrategy$2: java.lang.Object newInstance()
org.conscrypt.ConscryptEngineSocket: void setApplicationProtocols(java.lang.String[])
androidx.recyclerview.widget.RecyclerView: boolean hasFixedSize()
io.paperdb.DbStoragePlainFile: void sync(java.io.FileOutputStream)
org.conscrypt.AddressUtils: boolean isValidSniHostname(java.lang.String)
com.esotericsoftware.kryo.Serializer: void setAcceptsNull(boolean)
com.esotericsoftware.kryo.serializers.TimeSerializers$MonthDaySerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.Platform: java.lang.String getHostStringFromInetSocketAddress(java.net.InetSocketAddress)
com.esotericsoftware.kryo.serializers.Generics: java.lang.String toString()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
androidx.recyclerview.widget.RecyclerView: void ensureTopGlow()
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior()
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: void setOOBInline(boolean)
com.esotericsoftware.kryo.io.OutputChunked: OutputChunked(int)
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter: byte[] getNpnSelectedProtocol()
org.conscrypt.OpenSSLRSAKeyPairGenerator: void initialize(int,java.security.SecureRandom)
org.conscrypt.ActiveSession: java.lang.String getRequestedServerName()
com.google.android.material.textfield.TextInputLayout: android.graphics.Typeface getTypeface()
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ShortArraySerializer: short[] copy(com.esotericsoftware.kryo.Kryo,short[])
com.esotericsoftware.kryo.util.IntMap$Keys: int next()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSize(int)
org.conscrypt.TrustManagerFactoryImpl: void engineInit(javax.net.ssl.ManagerFactoryParameters)
org.conscrypt.ct.CertificateEntry$LogEntryType: CertificateEntry$LogEntryType(java.lang.String,int)
de.javakaffee.kryoserializers.EnumSetSerializer: java.util.EnumSet read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.serializers.FieldSerializerConfig: void setFieldsCanBeNull(boolean)
org.conscrypt.OpenSSLX509CRL: java.util.List fromPkcs7DerInputStream(java.io.InputStream)
com.esotericsoftware.kryo.util.IdentityMap$Entries: java.lang.Object next()
com.esotericsoftware.kryo.serializers.DefaultSerializers$IntSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.OpenSSLSocketImpl: java.lang.String getHostname()
org.conscrypt.NativeRef$EVP_MD_CTX: NativeRef$EVP_MD_CTX(long)
androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
org.conscrypt.ExternalSession: boolean isValid()
com.esotericsoftware.minlog.Log: void warn(java.lang.String,java.lang.String)
org.conscrypt.CryptoUpcalls: byte[] ecSignDigestWithPrivateKey(java.security.PrivateKey,byte[])
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: void setSSLParameters(javax.net.ssl.SSLParameters)
org.conscrypt.GCMParameters: void engineInit(byte[],java.lang.String)
org.conscrypt.NativeCrypto: java.lang.String EVP_PKEY_print_public(org.conscrypt.NativeRef$EVP_PKEY)
androidx.recyclerview.widget.RecyclerView: void dispatchChildAttached(android.view.View)
org.conscrypt.Java8EngineWrapper: void setWantClientAuth(boolean)
org.conscrypt.SSLParametersImpl: void setSCTExtension(byte[])
org.conscrypt.OpenSSLSignature: void engineUpdate(java.nio.ByteBuffer)
org.conscrypt.NativeCrypto: void EC_GROUP_clear_free(long)
org.conscrypt.ConscryptEngineSocket$2: void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String)
com.esotericsoftware.kryo.serializers.MapSerializer$BindMap: java.lang.Class valueClass()
org.conscrypt.SSLNullSession: long getCreationTime()
com.esotericsoftware.kryo.serializers.FieldSerializer: java.lang.Object create(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.serializers.FieldSerializer: java.lang.String getCachedFieldName(com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField)
com.esotericsoftware.reflectasm.MethodAccess: void addDeclaredMethodsToList(java.lang.Class,java.util.ArrayList)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCloseIcon()
org.conscrypt.Conscrypt: void setHostnameVerifier(javax.net.ssl.TrustManager,org.conscrypt.ConscryptHostnameVerifier)
org.conscrypt.OAEPParameters: long writeAlgorithmIdentifier(long,java.lang.String)
com.esotericsoftware.kryo.serializers.DefaultArraySerializers$CharArraySerializer: char[] copy(com.esotericsoftware.kryo.Kryo,char[])
com.esotericsoftware.kryo.serializers.DeflateSerializer: void setCompressionLevel(int)
com.esotericsoftware.kryo.ReferenceResolver: int addWrittenObject(java.lang.Object)
org.conscrypt.ConscryptServerSocket: void setWantClientAuth(boolean)
com.google.android.material.internal.ForegroundLinearLayout: android.graphics.drawable.Drawable getForeground()
org.conscrypt.OpenSSLRandom: void engineNextBytes(byte[])
com.google.android.material.chip.Chip: void setHideMotionSpecResource(int)
org.conscrypt.ServerSessionContext: void onBeforeAddSession(org.conscrypt.NativeSslSession)
androidx.appcompat.widget.SearchView: void setInputType(int)
com.esotericsoftware.kryo.io.ByteBufferInput: void close()
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeRegionField: void copy(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
org.conscrypt.OpenSSLBIOSource: void finalize()
org.conscrypt.OpenSSLProvider: void putRSACipherImplClass(java.lang.String,java.lang.String)
org.conscrypt.ConscryptEngine: javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer,java.nio.ByteBuffer)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: BaseTransientBottomBar$SnackbarBaseLayout(android.content.Context,android.util.AttributeSet)
com.esotericsoftware.kryo.serializers.DefaultSerializers$TreeSetSerializer: java.util.TreeSet createCopy(com.esotericsoftware.kryo.Kryo,java.util.Collection)
com.esotericsoftware.kryo.serializers.TimeSerializers$LocalTimeSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org.conscrypt.ClientSessionContext$HostAndPort: ClientSessionContext$HostAndPort(java.lang.String,int)
com.google.android.material.chip.Chip: void setCloseIconStartPaddingResource(int)
com.esotericsoftware.kryo.serializers.DefaultSerializers$BigIntegerSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.math.BigInteger)
com.esotericsoftware.kryo.serializers.FieldSerializerConfig: void setOptimizedGenerics(boolean)
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter: boolean isOutputShutdown()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundResource(int)
androidx.cardview.widget.CardView: void setUseCompatPadding(boolean)
androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory)
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationY()
androidx.recyclerview.widget.RecyclerView: boolean setChildImportantForAccessibilityInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
com.esotericsoftware.kryo.io.Input: long skip(long)
de.javakaffee.kryoserializers.protobuf.ProtobufSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
de.javakaffee.kryoserializers.EnumMapSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.util.EnumMap)
com.esotericsoftware.kryo.serializers.FieldSerializerGenericsUtil: java.lang.Class[] computeFieldGenerics(java.lang.reflect.Type,java.lang.reflect.Field,java.lang.Class[])
com.esotericsoftware.kryo.util.IdentityMap$MapIterator: void findNextIndex()
de.javakaffee.kryoserializers.UnmodifiableCollectionsSerializer$UnmodifiableCollection$3: java.lang.Object create(java.lang.Object)
com.esotericsoftware.kryo.serializers.Generics: java.util.Map getMappings()
com.google.android.material.internal.NavigationMenuItemView: void setIconTintList(android.content.res.ColorStateList)
org.conscrypt.OpenSSLAeadCipher: void checkSupportedPadding(org.conscrypt.OpenSSLCipher$Padding)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.esotericsoftware.kryo.factories.ReflectionSerializerFactory: com.esotericsoftware.kryo.Serializer makeSerializer(com.esotericsoftware.kryo.Kryo,java.lang.Class)
org.conscrypt.OpenSSLSignature$EngineType: org.conscrypt.OpenSSLSignature$EngineType[] values()
org.conscrypt.OpenSSLEvpCipherDESEDE: void checkSupportedPadding(org.conscrypt.OpenSSLCipher$Padding)
org.conscrypt.NativeCrypto: long[] ASN1_seq_unpack_X509_bio(long)
org.conscrypt.NativeCrypto: void EVP_MD_CTX_cleanup(org.conscrypt.NativeRef$EVP_MD_CTX)
androidx.recyclerview.widget.RecyclerView: boolean dispatchToOnItemTouchListeners(android.view.MotionEvent)
org.conscrypt.OpenSSLECPointContext: org.conscrypt.OpenSSLECPointContext getInstance(org.conscrypt.OpenSSLECGroupContext,java.security.spec.ECPoint)
org.conscrypt.FileClientSessionCache$Impl: void logReadError(java.lang.String,java.io.File,java.lang.Throwable)
com.esotericsoftware.kryo.util.DefaultStreamFactory: DefaultStreamFactory()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportImageTintList()
com.esotericsoftware.kryo.serializers.DefaultSerializers$TimeZoneSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com.esotericsoftware.kryo.serializers.TaggedFieldSerializerConfig: com.esotericsoftware.kryo.serializers.FieldSerializerConfig clone()
com.google.android.material.chip.Chip: float getChipStartPadding()
io.paperdb.BuildConfig: BuildConfig()
de.javakaffee.kryoserializers.guava.ImmutableMapSerializer: ImmutableMapSerializer()
org.conscrypt.NativeCrypto: long SSL_SESSION_get_time(long)
org.conscrypt.OpenSSLX509Certificate: java.math.BigInteger getSerialNumber()
org.conscrypt.OpenSSLProvider: OpenSSLProvider()
de.javakaffee.kryoserializers.ArraysAsListSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org.conscrypt.OpenSSLCipherRSA$Raw: OpenSSLCipherRSA$Raw()
org.conscrypt.FileClientSessionCache: FileClientSessionCache()
org.conscrypt.OpenSSLX509CertificateFactory$Parser: java.util.List fromPkcs7DerInputStream(java.io.InputStream)
com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeFloatField: void read(com.esotericsoftware.kryo.io.Input,java.lang.Object)
org.conscrypt.NativeCrypto: byte[] X509_get_serialNumber(long,org.conscrypt.OpenSSLX509Certificate)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)
org.conscrypt.TrustManagerImpl: java.util.List checkTrusted(java.security.cert.X509Certificate[],byte[],byte[],java.lang.String,java.lang.String,boolean)
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
com.esotericsoftware.kryo.Kryo: Kryo(com.esotericsoftware.kryo.ReferenceResolver)
com.esotericsoftware.minlog.Log: void error(java.lang.String,java.lang.String,java.lang.Throwable)
